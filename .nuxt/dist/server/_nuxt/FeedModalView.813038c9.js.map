{"version":3,"file":"FeedModalView.813038c9.js","sources":["../../../../components/feeds/ImageList.vue","../../../../components/feeds/FeedModalView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 1 images -->\r\n    <div\r\n      v-if=\"work.artwork_assets.length === 1\"\r\n      :images=\"[\r\n        artworkThumb(work.artwork_assets[0].bucket, work.artwork_assets[0].filename, 'feed')\r\n      ]\"\r\n    >\r\n      <img \r\n        v-lazy=\"artworkThumb(work.artwork_assets[0].bucket, work.artwork_assets[0].filename, 'feed')\"\r\n        :src=\"artworkThumb(work.artwork_assets[0].bucket, work.artwork_assets[0].filename, 'feed')\"\r\n        class=\"object-contain w-full rounded\"\r\n        style=\"max-height: 1000px;\"\r\n        loading=\"lazy\"\r\n        @error=\"imageLoadError\"\r\n      />\r\n    </div>\r\n    <!-- <div\r\n      v-if=\"work.artwork_assets.length === 1\"\r\n      class=\"imgrid\"\r\n    >\r\n      <div\r\n        :class=\"imGridClass[1]\"\r\n      >\r\n        <img :src=\"work.images[0]\">\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- 2 images -->\r\n    <div \r\n      v-if=\"work.artwork_assets.length === 2\"\r\n      :images=\"work.images\"\r\n      class=\"imgrid\"\r\n    >\r\n      <img \r\n        v-for=\"(src, index) in work.images\"\r\n        :key=\"src\" \r\n        v-lazy=\"src\"\r\n        :class=\"imGridClass[2][index]\"\r\n        :src=\"src\" \r\n        loading=\"lazy\"\r\n        @error=\"imageLoadError\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 3 images -->\r\n    <div \r\n      v-if=\"work.artwork_assets.length === 3\"\r\n      :images=\"work.images\"\r\n      class=\"imgrid\"\r\n    >\r\n      <img \r\n        v-for=\"(src, index) in work.images\"\r\n        :key=\"src\" \r\n        v-lazy=\"src\"\r\n        :class=\"imGridClass[3][index]\"\r\n        :src=\"src\" \r\n        loading=\"lazy\"\r\n        @error=\"imageLoadError\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 4 images -->\r\n    <div \r\n      v-if=\"work.artwork_assets.length === 4\"\r\n      :images=\"work.images\"\r\n      class=\"imgrid\"\r\n    >\r\n      <img \r\n        v-for=\"src in work.images\"\r\n        :key=\"src\" \r\n        v-lazy=\"src\"\r\n        :src=\"src\" \r\n        loading=\"lazy\"\r\n        @error=\"imageLoadError\"\r\n      />\r\n    </div>\r\n\r\n    <!-- more than 4 images -->\r\n    <div \r\n      v-if=\"work.artwork_assets.length > 4\"\r\n      class=\"imgrid\"\r\n    >\r\n      <div \r\n        v-for=\"(image, index) in work.images\" \r\n        :key=\"index\"\r\n      >\r\n        <!-- first 3 images -->\r\n        <img \r\n          v-if=\"index < 3\"\r\n          v-lazy=\"image\"\r\n          :src=\"image\" \r\n          loading=\"lazy\"\r\n          @error=\"imageLoadError\"\r\n        />\r\n\r\n        <!-- add filter on 4th image -->\r\n        <div\r\n          v-else\r\n          class=\"relative text-center\"\r\n        >\r\n          <span class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10 text-3xl font-semibold text-white\">+{{ work.artwork_assets.length-4 }}</span>\r\n          <img \r\n            v-lazy=\"image\"\r\n            :src=\"image\" \r\n            class=\"z-0 brightness-50\"\r\n            loading=\"lazy\"\r\n            @error=\"imageLoadError\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\ndefineProps ({\r\n  work: {\r\n    type: Object,\r\n    default: () => {}\r\n  }\r\n})\r\n\r\nconst imGridClass = {\r\n  1: 'col-start-1 row-start-1 col-span-4 row-span-4',\r\n  2: [\r\n    'col-start-1 row-start-1 col-span-1 row-span-2',\r\n    'col-start-2 row-start-1 col-span-1 row-span-2'\r\n  ],\r\n  3: [\r\n    'col-start-1 row-start-1 col-span-1 row-span-4',\r\n    'col-start-2 row-start-1 col-span-1 row-span-2',\r\n    'col-start-2 row-start-3 col-span-1 row-span-2'\r\n  ]\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\n.imgrid {\r\n  @apply w-full grid grid-cols-2 grid-rows-2 gap-2;\r\n  \r\n  img {\r\n    @apply h-full w-full object-cover object-top rounded;\r\n    aspect-ratio: 1/1;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div \r\n    class=\"work-container work-view z-40\"\r\n    :class=\"!isModal ? 'w-full' : 'w-full md:w-9/12 lg:w-2/5 mx-auto md:p-6 p-4 theme-color'\"\r\n  >\r\n    <div class=\"w-full\" :class=\"{ 'overflow-y-scroll pr-4': isModal }\">\r\n      <div class=\"flex flex-row justify-between mb-2 w-full\">\r\n        <div v-if=\"feedDetail.users\" class=\"user-info\">\r\n          <nuxt-link :to=\"'/profile/'+feedDetail.users.username\">\r\n            <img class=\"avatar\" :src=\"avatarCoverUrl(feedDetail.users.avatar_bucket, feedDetail.users.avatar_filename)\" @error=\"imageLoadError\">\r\n          </nuxt-link>\r\n          <div class=\"name\">\r\n            <nuxt-link :to=\"'/profile/'+feedDetail.users.username\" class=\"fullname\">\r\n              {{ feedDetail.users.name }}\r\n            </nuxt-link>\r\n            <br>\r\n            <nuxt-link :to=\"'/profile/'+feedDetail.users.username\" class=\"username\">\r\n              @{{ feedDetail.users.username }}\r\n            </nuxt-link>\r\n\r\n            <span class=\"mx-1\">·</span>\r\n                  \r\n            <span class=\"text-xxs\">\r\n              {{ formatDate(feedDetail.created_at, true) }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"isModal\" class=\"flex float-right flex-row gap-2 mb-4 cursor-pointer\">\r\n          <div class=\"modal-close\" @click=\"closeModal(section + '-modal')\">\r\n            <Icon :name=\"'i-ion-close'\" class=\"text-2xl\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div \r\n        v-if=\"feedDetail.text\"\r\n        class=\"mb-4\"\r\n        :class=\"feedDetail.text.length <= 300 ? 'text-lg' : ''\"\r\n      >\r\n        {{ feedDetail.text }}\r\n      </div>\r\n\r\n      <!-- shared artwork post detail -->\r\n      <div v-if=\"feedDetail.artworks\" class=\"mb-4 w-full rounded-md theme-color-secondary\">\r\n        <!-- creator information -->\r\n        <div v-if=\"feedDetail.artworks.users\" class=\"p-2 md:p-4 user-info\">\r\n          <nuxt-link :to=\"'/profile/'+feedDetail.artworks.users.username\">\r\n            <img class=\"avatar\" :src=\"avatarCoverUrl(feedDetail.artworks.users.avatar_bucket, feedDetail.artworks.users.avatar_filename)\" @error=\"imageLoadError\">\r\n          </nuxt-link>\r\n          <div class=\"name\">\r\n            <nuxt-link \r\n              :to=\"'/profile/'+feedDetail.artworks.users.username\" \r\n              class=\"fullname hover:href\"\r\n            >\r\n              {{ feedDetail.artworks.users.name }}\r\n            </nuxt-link>\r\n            <br>\r\n            <nuxt-link \r\n              :to=\"'/profile/'+feedDetail.artworks.users.username\" \r\n              class=\"hover:underline text-xxs\"\r\n            >\r\n              @{{ feedDetail.artworks.users.username }}\r\n            </nuxt-link>\r\n            \r\n            <span class=\"mx-1\">·</span>\r\n            \r\n            <nuxt-link :to=\"'/a/' + feedDetail.artworks.id\" class=\"hover:underline text-xxs\">\r\n              {{ formatDate(feedDetail.artworks.scheduled_post ? feedDetail.artworks.scheduled_post : feedDetail.artworks.created_at, true) }}\r\n            </nuxt-link>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- title & description of shared artwork -->\r\n        <div class=\"px-2 mt-2 md:px-4\">\r\n          <span class=\"text-xs font-semibold\">{{ feedDetail.artworks.title }}</span>\r\n          <p v-show=\"feedDetail.artworks.description\">\r\n            <span :id=\"'feed-description-'+feedDetail.artworks.id\">\r\n              {{ feedDetail.artworks.description.length > 300 ? `${feedDetail.artworks.description.slice(0, 300)}...` : feedDetail.artworks.description }}\r\n            </span>\r\n            <a \r\n              v-if=\"feedDetail.artworks.description.length > 300\" \r\n              :id=\"'feed-read-more-'+feedDetail.artworks.id\" \r\n              class=\"href\" \r\n              @click.prevent=\"readMore(feedDetail.artworks.description, feedDetail.artworks.id, 'feed-read-more-', 'feed-description-')\"\r\n            >\r\n              {{ $t('readMore') }}\r\n            </a>\r\n          </p>\r\n        </div>\r\n\r\n        <!-- the artwork(s) -->\r\n        <div>\r\n          <!-- Image view on mobile or smaller device -->\r\n          <nuxt-link v-if=\"feedDetail.artworks && isMobile()\" :to=\"'/a/'+feedDetail.id\" class=\"cursor-pointer\">\r\n            <ImageList class=\"p-2\" :work=\"feedDetail.artworks\" />\r\n          </nuxt-link>\r\n\r\n          <!-- Image view on Desktop -->\r\n          <div v-if=\"feedDetail.artworks && !isMobile()\" class=\"cursor-pointer\" @click.prevent=\"viewArtwork(feedDetail.artworks.id)\">\r\n            <ImageList class=\"p-2 md:p-4\" :work=\"feedDetail.artworks\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- reactions -->\r\n      <div v-if=\"feedDetail._count\" class=\"flex flex-row justify-between\">\r\n        <div v-if=\"feedDetail._count.feed_comments\">\r\n          <b>{{ thousand(feedDetail._count.feed_comments) }}</b> {{ feedDetail._count.feed_comments > 1 ? $t('count.comments') : $t('count.comment') }}\r\n        </div>\r\n        <div v-if=\"!feedDetail._count.feed_comments\" />\r\n\r\n        <div v-if=\"auth.loggedIn\">\r\n          <!-- Like -->\r\n          <div class=\"flex flex-row\" @click=\"liked ? unlike() : like()\">\r\n            <Icon \r\n              v-show=\"liked\"\r\n              :id=\"'feedLikeButton'+feedDetail.id\"\r\n              :name=\"'i-ion-heart'\" \r\n              class=\"mr-2 text-xl text-red-500 cursor-pointer hover:text-red-500\"\r\n            />\r\n            <Icon \r\n              v-show=\"!liked\"\r\n              :name=\"'i-ion-heart-outline'\" \r\n              class=\"mr-2 text-xl cursor-pointer hover:text-red-500\"\r\n            />\r\n\r\n            <span>{{ thousand(feedDetail._count.feed_likes) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- comment section -->\r\n      <!-- comment input -->\r\n      <div class=\"mt-6 mb-2\">\r\n        <div v-if=\"auth.loggedIn\" class=\"comment-box\">\r\n          <div class=\"flex flex-col\">\r\n            <div class=\"flex relative flex-col\">\r\n              <textarea\r\n                v-model=\"commentInput\"\r\n                class=\"input form-input\"\r\n                :class=\"[{ 'cursor-not-allowed': submitCommentLoading }, { 'theme-color-secondary textarea': isModal }]\"\r\n                :readonly=\"submitCommentLoading\"\r\n                cols=\"20\"\r\n                :rows=\"commentInput != null && commentInput != '' ? '6' : '0'\"\r\n                :placeholder=\"$t('comments.inputPlaceholder')\"\r\n                :maxlength=\"commentMaxChar\"\r\n                data-gramm=\"false\"\r\n              />\r\n              <span \r\n                v-show=\"commentInput != null && commentInput != ''\" \r\n                class=\"absolute left-4 bottom-6 py-1 px-2 text-white rounded-md button-color\"\r\n              >\r\n                {{ commentCharLeft }}\r\n              </span>\r\n              <span class=\"absolute right-2 bottom-5 py-1 px-2\" @click.prevent=\"submitComment()\">\r\n                <Icon \r\n                  v-show=\"commentInput != null && commentInput != '' && !submitCommentLoading\"\r\n                  :name=\"'i-ion-prism'\" \r\n                  class=\"text-xl transition-all duration-100 rotate-90 cursor-pointer text-colored\"\r\n                />\r\n                <Spinner v-show=\"submitCommentLoading\" />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- if user not logged in, hide comment input and show this instead -->\r\n        <div v-if=\"!auth.loggedIn\" class=\"p-4 mb-4 text-center rounded-md theme-color-secondary\">\r\n          {{ $t('comments.loginOrRegisterToLeaveComment') }}\r\n        </div>\r\n      </div>\r\n\r\n      <!-- comments -->\r\n      <div \r\n        class=\"comment-content\"\r\n        :class=\"[{ 'pr-3 overflow-x-hidden': isModal }, { 'mb-20': !isModal }]\"\r\n      >\r\n        <div \r\n          v-auto-animate\r\n          v-for=\"comment in comments\" \r\n          :key=\"comment.id\" \r\n          class=\"flex flex-row w-full comment-item\"\r\n        >\r\n          <nuxt-link class=\"mr-2\" :to=\"'/profile/'+comment.users.username\">\r\n            <img class=\"w-10 h-10 avatar\" :src=\"avatarCoverUrl(comment.users.avatar_bucket, comment.users.avatar_filename)\" @error=\"imageLoadError\">\r\n          </nuxt-link>\r\n\r\n          <div class=\"w-full\">\r\n            <div \r\n              class=\"p-4 w-full rounded-md\"\r\n              :class=\"!isModal ? 'theme-color' : 'theme-color-secondary'\"\r\n            >\r\n              <div class=\"flex justify-between\">\r\n                <nuxt-link :to=\"'/profile/'+comment.users.username\" class=\"mb-2 text-xs font-medium transition-all duration-150 cursor-pointer hover:font-bold\">\r\n                  {{ comment.users.name }}\r\n                </nuxt-link>\r\n                <div class=\"comment-time\">\r\n                  {{ formatDate(comment.created_at, true) }}\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                {{ comment.comment }}\r\n              </div>\r\n\r\n              <div v-if=\"auth.loggedIn\" class=\"hidden reactions\">\r\n                <div class=\"flex flex-row\">\r\n                  <!-- <span class=\"reaction\" @click=\"likedComments.includes(comment.id) ? unlikeComment(comment.id) : likeComment(comment.id)\">\r\n                    <Icon v-show=\"!likedComments.includes(comment.id)\" :name=\"'i-ion-heart-outline'\" class=\"text-gray-500 hover:text-red-500\" />\r\n                    <Icon v-show=\"likedComments.includes(comment.id)\" :id=\"'comment-like-button-'+comment.id\" :name=\"'i-ion-heart'\" class=\"text-red-500 hover:text-red-500\" />\r\n                    {{ comment._count.artwork_comment_has_likes }}\r\n                  </span>\r\n                  <span class=\"reaction\" @click=\"showReplyInput(comment.id) && showReplies(comment.id)\">\r\n                    <Icon :name=\"'i-ion-arrow-undo-outline'\" class=\"text-gray-500 hover:text-blue-500\" />\r\n                    {{ comment._count.artwork_comment_has_replies }}\r\n                  </span> -->\r\n\r\n                  <!-- Other comment interaction buttons -->\r\n                  <!-- <div class=\"inline-block relative ml-2 dropdown\">\r\n                    <div class=\"invisible z-50 rounded-md opacity-0 transition-all duration-300 transform origin-top-right scale-95 -translate-y-2 cursor-pointer dropdown-menu\">\r\n                      <div \r\n                        id=\"headlessui-menu-items-feed-more-options\" \r\n                        class=\"absolute right-0 z-50 p-1 mt-2 w-56 rounded-md border shadow-lg origin-top-right outline-none border-color theme-color\"\r\n                        aria-labelledby=\"headlessui-menu-button-1\" \r\n                        role=\"menu\"\r\n                      >\r\n                        <nuxt-link \r\n                          :to=\"'/profile/'+comment.users.username\" \r\n                          class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                          @click.prevent \r\n                        >\r\n                          <Icon :name=\"'i-fluent-person-32-regular'\" class=\"mr-2 text-base\" /> {{ $t('viewProfile') }}\r\n                        </nuxt-link>\r\n                        <div\r\n                          v-if=\"auth.loggedIn && auth.user.id === comment.users.id\"\r\n                          class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                          @click=\"deleteComment(comment.id)\"\r\n                        >\r\n                          <Icon :name=\"'i-ion-trash-outline'\" class=\"mr-2 text-base\" /> {{ $t('delete') }}\r\n                        </div>\r\n                        <nuxt-link \r\n                          v-if=\"auth.loggedIn && auth.user.id !== comment.users.id\"\r\n                          :to=\"'#'\" \r\n                          class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                          @click.prevent \r\n                        >\r\n                          <Icon :name=\"'i-akar-icons-flag'\" class=\"mr-2 text-base\" /> {{ $t('report') }}\r\n                        </nuxt-link>\r\n                      </div>\r\n                    </div>\r\n                  </div> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          v-if=\"feedDetail._count\"\r\n          v-show=\"feedDetail._count.feed_comments > commentPagination.perPage && showLoadOlderComments\"\r\n          class=\"text-center capitalize href\"\r\n          @click.prevent=\"loadMoreComments(feedDetail.id)\"\r\n        >\r\n          {{ $t('comments.loadOlder') }}\r\n        </div>\r\n\r\n        <div v-show=\"comments.length && !showLoadOlderComments\" class=\"w-full text-xs italic text-center\">\r\n          {{ $t('comments.reachedTheEnd') }}\r\n        </div>\r\n\r\n        <div v-if=\"auth.loggedIn && !comments.length\" class=\"mt-4 w-full text-xs italic text-center\">\r\n          {{ $t('comments.noCommentYet') }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Artwork Modal View -->\r\n    <div \r\n      :id=\"'chronological-modal'\"\r\n      class=\"modal work-view\" \r\n    >\r\n      <ModalView \r\n        ref=\"sharedWorkModalViewRef\"\r\n        :section=\"'chronological'\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport 'viewerjs/dist/viewer.css'\r\n\r\n// stores\r\nimport useAuthStore from '@/stores/auth.store'\r\n\r\n// composables\r\nimport useImage from '~/composables/useImage'\r\n\r\n// components\r\nimport Icon from '~/components/globals/Icon.vue'\r\nimport Spinner from '~/components/globals/Spinner.vue'\r\nimport ImageList from './ImageList.vue'\r\nimport ModalView from '~/components/artworks/views/ModalView.vue'\r\n\r\n/**\r\n * @stores\r\n */\r\nconst auth = useAuthStore()\r\n\r\n/**\r\n * @props\r\n */\r\nconst props = defineProps ({\r\n  id: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  section: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\nconst { $router } = useNuxtApp()\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst feedApi = useFeed(oApiConfiguration, fetchOptions())\r\nconst { generateArtworkThumb } = useImage()\r\n\r\nonMounted (() => {\r\n  if (props.id !== '') {\r\n    view(props.id)\r\n  }\r\n\r\n  window.addEventListener('keydown', (e) => {\r\n    // get element of shared artwork modal view\r\n    const sharedWorkModal = document.getElementById('chronological-modal')\r\n\r\n    if (e.key === 'Escape'\r\n      && (!sharedWorkModal || sharedWorkModal.style.display != 'flex')\r\n    ) {\r\n      useModal().closeModal(`${props.section}-modal`)\r\n    }\r\n  })\r\n})\r\n\r\nconst isModal = props.id === ''\r\n\r\n/** Open the modal view function */\r\nconst loading = ref(true)\r\n\r\nconst feedDetail = ref({})\r\nconst liked = ref(false)\r\n\r\nconst view = async (selectedFeedId) => {\r\n  loading.value = true\r\n\r\n  // reset comment data and options\r\n  comments.value = []\r\n  commentPagination.value.page = 0\r\n\r\n  // fetch artwork detail\r\n  try {\r\n    const [data, error] = await feedApi.feedDetail({\r\n      id: selectedFeedId\r\n    })\r\n\r\n    if (data.feed.artworks) {\r\n      data.feed.artworks.images = []\r\n      for (let assetIdx = 0; assetIdx < data.feed.artworks.artwork_assets.length; assetIdx++) {\r\n        if (assetIdx <= 3) {\r\n          const imageUrl = await generateArtworkThumb(data.feed.artworks.artwork_assets[assetIdx].bucket, data.feed.artworks.artwork_assets[assetIdx].filename, 'feed')\r\n          data.feed.artworks.images.push(imageUrl)\r\n        }\r\n      }\r\n    }\r\n\r\n    feedDetail.value = data.feed\r\n\r\n    liked.value = data.feed.liked\r\n\r\n    await getComments(selectedFeedId)\r\n  } catch (error) {\r\n    showError()\r\n  }\r\n\r\n  loading.value = false\r\n}\r\n\r\nconst sharedWorkModalViewRef = ref(null)\r\nconst viewArtwork = async (workId) => {\r\n  sharedWorkModalViewRef.value.view(workId)\r\n  useModal().openModal('chronological-modal')\r\n}\r\n\r\n/** Likes */\r\nconst like = async () => {\r\n  const [success, error] = await feedApi.like({\r\n    feedId: feedDetail.value.id\r\n  })\r\n\r\n  if (success) {\r\n    liked.value = true\r\n    feedDetail.value._count.feed_likes++\r\n\r\n    // animate\r\n    const likeButton = document.getElementById('feedLikeButton' + feedDetail.value.id)\r\n    likeButton.classList.add('animate-bounce')\r\n    setInterval(() => {\r\n      likeButton.classList.remove('animate-bounce')\r\n    }, 2500)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\nconst unlike = async () => {\r\n  const [success, error] = await feedApi.unlike({\r\n    feedId: feedDetail.value.id\r\n  })\r\n\r\n  if (success) {\r\n    liked.value = false\r\n    feedDetail.value._count.feed_likes--\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\n/** Comments */\r\n// comments\r\nconst comments = ref([])\r\nconst commentPagination = ref({\r\n  perPage: 5,\r\n  page: 0\r\n})\r\nconst commentIndexes = ref([])\r\nconst fetchComments = async (feedId) => {\r\n  try {\r\n    const [data, error] = await feedApi.fetchComments({\r\n      feedId,\r\n      pagination: {\r\n        page: commentPagination.value.page,\r\n        perPage: commentPagination.value.perPage\r\n      }\r\n    })\r\n\r\n    if (data.pagination.current_page === data.pagination.first_last.last_page) {\r\n      showLoadOlderComments.value = false\r\n    } else {\r\n      showLoadOlderComments.value = true\r\n    }\r\n\r\n    data.comments.forEach((comment) => {\r\n      // // collect liked feed by current user logon\r\n      // if (comment.liked) {\r\n      //   likedComments.value.push(comment.id)\r\n      // }\r\n\r\n      // push comment id to comment indexes, used to remove the comment from comments ref when deleting a comment\r\n      commentIndexes.value.push(comment.id)\r\n    })\r\n\r\n    return data.comments\r\n  } catch (error) {\r\n    // \r\n  }\r\n}\r\n\r\n/** Get first few comments */\r\nconst getComments = async (feedId) => {\r\n  try {\r\n    const firstFewComments = await fetchComments(feedId)\r\n\r\n    firstFewComments.forEach(comment => comments.value.push(comment))\r\n  } catch (error) {\r\n    // \r\n  } \r\n}\r\n\r\n/** Load more comments (comment pagination) */\r\nconst showLoadOlderComments = ref(false)\r\nconst loadMoreComments = async (feedId) => {\r\n  try {\r\n    commentPagination.value.page += 1\r\n    const moreComments = await fetchComments(feedId)\r\n\r\n    moreComments.forEach(comment => comments.value.push(comment))\r\n  } catch (error) {\r\n    // \r\n  }\r\n}\r\n\r\nconst commentInput = ref()\r\nconst commentMaxChar = 200\r\nconst commentCharLeft = computed(() => (commentInput.value != null && commentInput.value !== '') ? commentMaxChar - commentInput.value.length : commentMaxChar)\r\n\r\n/** Submit a comment */\r\nconst submitCommentLoading = ref(false)\r\nconst submitComment = async () => {\r\n  submitCommentLoading.value = true\r\n\r\n  try {\r\n    const [success, data, error] = await feedApi.comment({\r\n      feedId: feedDetail.value.id,\r\n      comment: commentInput.value\r\n    })\r\n\r\n    if (success) {\r\n      commentInput.value = ''\r\n      comments.value.splice(0, 0, data)\r\n      comments.value.join()\r\n\r\n      // push comment id to comment indexes\r\n      commentIndexes.value.splice(0, 0, data.id)\r\n      commentIndexes.value.join()\r\n    }\r\n  } catch (error) {\r\n    // \r\n  }\r\n\r\n  submitCommentLoading.value = false\r\n}\r\n\r\nconst deleteComment = async (commentId) => {\r\n  try {\r\n    // const { success } = await new ArtworkCommentsApi(oApiConfiguration).removeComment(commentId, fetchOptions())\r\n\r\n    // // remove deleted comment from `comments` ref\r\n    // if (success) {\r\n    //   const indexOfIdToRemove = commentIndexes.value.indexOf(commentId)\r\n    //   comments.value.splice(indexOfIdToRemove, 1)\r\n\r\n    //   commentIndexes.value.splice(indexOfIdToRemove, 1)\r\n    // }\r\n  } catch (error) {\r\n    // \r\n  }\r\n}\r\n\r\nconst likedComments = ref([])\r\nconst likeComment = async (commentId) => {\r\n  try {\r\n    // const { success } = await new ArtworkCommentsLikesApi(oApiConfiguration).likeAComment(commentId, fetchOptions())\r\n\r\n    // // comment liked\r\n    // if (success) {\r\n    //   likedComments.value.push(commentId)\r\n\r\n    //   // animate\r\n    //   const likeButton = document.getElementById(`comment-like-button-${commentId}`)\r\n    //   likeButton.classList.add('animate-bounce')\r\n    //   setInterval(() => {\r\n    //     likeButton.classList.remove('animate-bounce')\r\n    //   }, 2500)\r\n    // }\r\n  } catch (error) {\r\n    // \r\n  }\r\n}\r\n\r\nconst unlikeComment = async (commentId) => {\r\n  try {\r\n    // const { success } = await new ArtworkCommentsLikesApi(oApiConfiguration).unlikeAComment(commentId, fetchOptions())\r\n\r\n    // // comment unliked\r\n    // if (success) {\r\n    //   const indexOfIdToRemove = likedComments.value.indexOf(commentId)\r\n    //   likedComments.value.splice(indexOfIdToRemove, 1)\r\n    // }\r\n  } catch (error) {\r\n    // \r\n  }\r\n}\r\n\r\n/** Show error on fetch failure */\r\nconst isError = ref(false)\r\nconst showError = () => {\r\n  isError.value = true\r\n}\r\n\r\n/** Cancel publish or delete work */\r\nconst deleteConfirmationDialog = ref(false)\r\nconst deleteSuccess = ref(false)\r\nconst deleteWork = async (workId) => {\r\n  try {\r\n    // const { success } = await new ArtworkCRUDApi(oApiConfiguration)\r\n    //   .deleteWork(\r\n    //     [workId],\r\n    //     fetchOptions()\r\n    //   )\r\n\r\n    // if (success) {\r\n    //   deleteSuccess.value = true\r\n\r\n    //   setTimeout(() => {\r\n    //     $router.push('/')\r\n    //   }, 1500)\r\n    // }\r\n  } catch (error) {\r\n    // \r\n  }\r\n}\r\n\r\n/**\r\n * @expose\r\n */\r\ndefineExpose ({\r\n  view\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"~/assets/css/artworks/view.scss\";\r\n\r\n.user-info {\r\n  @apply flex flex-row mb-4;\r\n\r\n  .avatar {\r\n    @apply mr-3 w-10 h-10 rounded-md object-cover;\r\n    aspect-ratio: 1/1;\r\n  }\r\n\r\n  .name {\r\n    .fullname {\r\n      @apply font-bold text-tiny;\r\n    }\r\n    .username {\r\n      @apply text-xs;\r\n    }\r\n  }\r\n}\r\n\r\n.comment-content {\r\n  .comment-order {\r\n    @apply flex justify-end mb-4 w-full;\r\n\r\n    button {\r\n      @apply py-2 px-3 underline rounded-sm cursor-pointer;\r\n    }\r\n  }\r\n\r\n  .comment-item {\r\n    @apply mb-2;\r\n\r\n    .comment-time {\r\n      @apply italic text-xxs;\r\n      color: var(--link);\r\n    }\r\n\r\n    .reactions {\r\n      @apply flex flex-row justify-between w-full;\r\n\r\n      .reaction {\r\n        @apply flex ml-3 leading-5;\r\n\r\n        .icon {\r\n          @apply mr-1 text-xl cursor-pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"names":["imGridClass","auth","useAuthStore","useNuxtApp","oApiConfiguration","fetchOptions","useApiFetch","feedApi","useFeed","generateArtworkThumb","useImage","onMounted","props","view","e","sharedWorkModal","useModal","isModal","loading","ref","feedDetail","liked","selectedFeedId","comments","commentPagination","data","error","assetIdx","imageUrl","getComments","showError","sharedWorkModalViewRef","viewArtwork","workId","like","success","likeButton","unlike","commentIndexes","fetchComments","feedId","showLoadOlderComments","comment","loadMoreComments","commentInput","commentMaxChar","commentCharLeft","computed","submitCommentLoading","submitComment","isError","expose"],"mappings":"ujCA4HA,MAAMA,EAAc,CAClB,EAAG,gDACH,EAAG,CACD,gDACA,+CACD,EACD,EAAG,CACD,gDACA,gDACA,+CACD,CACH,4zGC6KAC,EAAAC,GAAA,EAgBAC,GAAA,EAGA,KAAA,CAAA,kBAAAC,EAAA,aAAAC,CAAA,EAAAC,GAAA,EACAC,EAAAC,GAAAJ,EAAAC,GAAA,EACA,CAAA,qBAAAI,CAAA,EAAAC,GAAA,EAEAC,GAAA,IAAA,CACAC,EAAA,KAAA,IACAC,EAAAD,EAAA,EAAA,EAGA,OAAA,iBAAA,UAAAE,GAAA,CAEA,MAAAC,EAAA,SAAA,eAAA,qBAAA,EAEAD,EAAA,MAAA,WACA,CAAAC,GAAAA,EAAA,MAAA,SAAA,SAEAC,EAAA,EAAA,WAAA,GAAAJ,EAAA,eAAA,CAEA,CAAA,CACA,CAAA,EAEA,MAAAK,EAAAL,EAAA,KAAA,GAGAM,EAAAC,EAAA,EAAA,EAEAC,EAAAD,EAAA,EAAA,EACAE,EAAAF,EAAA,EAAA,EAEAN,EAAA,MAAAS,GAAA,CACAJ,EAAA,MAAA,GAGAK,EAAA,MAAA,CAAA,EACAC,EAAA,MAAA,KAAA,EAGA,GAAA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAA,MAAAnB,EAAA,WAAA,CACA,GAAAe,CACA,CAAA,EAEA,GAAAG,EAAA,KAAA,SAAA,CACAA,EAAA,KAAA,SAAA,OAAA,CAAA,EACA,QAAAE,EAAA,EAAAA,EAAAF,EAAA,KAAA,SAAA,eAAA,OAAAE,IACA,GAAAA,GAAA,EAAA,CACA,MAAAC,EAAA,MAAAnB,EAAAgB,EAAA,KAAA,SAAA,eAAAE,GAAA,OAAAF,EAAA,KAAA,SAAA,eAAAE,GAAA,SAAA,MAAA,EACAF,EAAA,KAAA,SAAA,OAAA,KAAAG,CAAA,CACA,CAEA,CAEAR,EAAA,MAAAK,EAAA,KAEAJ,EAAA,MAAAI,EAAA,KAAA,MAEA,MAAAI,EAAAP,CAAA,CACA,MAAA,CACAQ,GAAA,CACA,CAEAZ,EAAA,MAAA,EACA,EAEAa,EAAAZ,EAAA,IAAA,EACAa,EAAA,MAAAC,GAAA,CACAF,EAAA,MAAA,KAAAE,CAAA,EACAjB,EAAA,EAAA,UAAA,qBAAA,CACA,EAGAkB,EAAA,SAAA,CACA,KAAA,CAAAC,EAAAT,CAAA,EAAA,MAAAnB,EAAA,KAAA,CACA,OAAAa,EAAA,MAAA,EACA,CAAA,EAEA,GAAAe,EAAA,CACAd,EAAA,MAAA,GACAD,EAAA,MAAA,OAAA,aAGA,MAAAgB,EAAA,SAAA,eAAA,iBAAAhB,EAAA,MAAA,EAAA,EACAgB,EAAA,UAAA,IAAA,gBAAA,EACA,YAAA,IAAA,CACAA,EAAA,UAAA,OAAA,gBAAA,CACA,EAAA,IAAA,CAGA,CACA,EAEAC,EAAA,SAAA,CACA,KAAA,CAAAF,EAAAT,CAAA,EAAA,MAAAnB,EAAA,OAAA,CACA,OAAAa,EAAA,MAAA,EACA,CAAA,EAEAe,IACAd,EAAA,MAAA,GACAD,EAAA,MAAA,OAAA,aAIA,EAIAG,EAAAJ,EAAA,EAAA,EACAK,EAAAL,EAAA,CACA,QAAA,EACA,KAAA,CACA,CAAA,EACAmB,EAAAnB,EAAA,EAAA,EACAoB,EAAA,MAAAC,GAAA,CACA,GAAA,CACA,KAAA,CAAAf,EAAAC,CAAA,EAAA,MAAAnB,EAAA,cAAA,CACA,OAAAiC,EACA,WAAA,CACA,KAAAhB,EAAA,MAAA,KACA,QAAAA,EAAA,MAAA,OACA,CACA,CAAA,EAEA,OAAAC,EAAA,WAAA,eAAAA,EAAA,WAAA,WAAA,UACAgB,EAAA,MAAA,GAEAA,EAAA,MAAA,GAGAhB,EAAA,SAAA,QAAAiB,GAAA,CAOAJ,EAAA,MAAA,KAAAI,EAAA,EAAA,CACA,CAAA,EAEAjB,EAAA,QACA,MAAA,CAEA,CACA,EAGAI,EAAA,MAAAW,GAAA,CACA,GAAA,EACA,MAAAD,EAAAC,CAAA,GAEA,QAAAE,GAAAnB,EAAA,MAAA,KAAAmB,CAAA,CAAA,CACA,MAAA,CAEA,CACA,EAGAD,EAAAtB,EAAA,EAAA,EACAwB,EAAA,MAAAH,GAAA,CACA,GAAA,CACAhB,EAAA,MAAA,MAAA,GACA,MAAAe,EAAAC,CAAA,GAEA,QAAAE,GAAAnB,EAAA,MAAA,KAAAmB,CAAA,CAAA,CACA,MAAA,CAEA,CACA,EAEAE,EAAAzB,EAAA,EACA0B,EAAA,IACAC,GAAAC,GAAA,IAAAH,EAAA,OAAA,MAAAA,EAAA,QAAA,GAAAC,EAAAD,EAAA,MAAA,OAAAC,CAAA,EAGAG,EAAA7B,EAAA,EAAA,EACA8B,GAAA,SAAA,CACAD,EAAA,MAAA,GAEA,GAAA,CACA,KAAA,CAAAb,EAAAV,EAAAC,CAAA,EAAA,MAAAnB,EAAA,QAAA,CACA,OAAAa,EAAA,MAAA,GACA,QAAAwB,EAAA,KACA,CAAA,EAEAT,IACAS,EAAA,MAAA,GACArB,EAAA,MAAA,OAAA,EAAA,EAAAE,CAAA,EACAF,EAAA,MAAA,KAAA,EAGAe,EAAA,MAAA,OAAA,EAAA,EAAAb,EAAA,EAAA,EACAa,EAAA,MAAA,KAAA,EAEA,MAAA,CAEA,CAEAU,EAAA,MAAA,EACA,EAkBA7B,EAAA,EAAA,EAoCA,MAAA+B,GAAA/B,EAAA,EAAA,EACAW,GAAA,IAAA,CACAoB,GAAA,MAAA,EACA,EAGA,OAAA/B,EAAA,EAAA,EACAA,EAAA,EAAA,EAwBAgC,EAAA,CACA,KAAAtC,CACA,CAAA"}
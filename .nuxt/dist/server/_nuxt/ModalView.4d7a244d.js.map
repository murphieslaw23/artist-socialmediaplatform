{"version":3,"file":"ModalView.4d7a244d.js","sources":["../../../../api/openapi/apis/albums-api.ts","../../../../api/openapi/apis/collections-api.ts","../../../../composables/useBounceAnimation.ts","../../../../composables/useSplash.ts","../../../../node_modules/@vueuse/shared/index.mjs","../../../../node_modules/@vueuse/core/index.mjs","../../../../composables/useReadMore.ts","../../../../components/artworks/views/ModalViewInfo.vue","../../../../components/artworks/WorkList.vue","../../../../components/artworks/views/ArtistWorks.vue","../../../../composables/users/useCollection.ts","../../../../components/artworks/ManageSave.vue","../../../../composables/users/useAlbum.ts","../../../../components/albums/ManageAlbum.vue","../../../../components/globals/ConfirmationDialog.vue","../../../../components/reports/ReportModal.vue","../../../../components/feeds/ShareArtworkToFeedModal.vue","../../../../components/artworks/views/ModalView.vue"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Upy API Documentation\n * API documentation of Upy - a social community platform for Artists.\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { AlbumLiteModel } from '../models';\nimport { AlbumsAddworkBody } from '../models';\nimport { AlbumsBody } from '../models';\nimport { AlbumsCreateBody } from '../models';\nimport { InlineResponse20013 } from '../models';\nimport { InlineResponse20016 } from '../models';\nimport { InlineResponse20017 } from '../models';\nimport { InlineResponse2012 } from '../models';\nimport { SuccessMessageModel } from '../models';\nimport { WorkRemoveBody } from '../models';\n/**\n * AlbumsApi - axios parameter creator\n * @export\n */\nexport const AlbumsApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add artwork(s) to album\n         * @param {AlbumsAddworkBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addWorkToAlbum: async (body?: AlbumsAddworkBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/albums/add-work`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Create a new album\n         * @param {AlbumsCreateBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAlbum: async (body?: AlbumsCreateBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/albums/create`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Remove an album\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteAlbum: async (id: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteAlbum.');\n            }\n            const localVarPath = `/albums/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary View detailed information about the album\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAlbumById: async (id: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling getAlbumById.');\n            }\n            const localVarPath = `/albums/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary List album items\n         * @param {number} id \n         * @param {number} perPage How many record to show per page of pagination\n         * @param {number} page Pagination index\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAlbumItems: async (id: number, perPage: number, page: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling getAlbumItems.');\n            }\n            // verify required parameter 'perPage' is not null or undefined\n            if (perPage === null || perPage === undefined) {\n                throw new RequiredError('perPage','Required parameter perPage was null or undefined when calling getAlbumItems.');\n            }\n            // verify required parameter 'page' is not null or undefined\n            if (page === null || page === undefined) {\n                throw new RequiredError('page','Required parameter page was null or undefined when calling getAlbumItems.');\n            }\n            const localVarPath = `/albums/list/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            if (perPage !== undefined) {\n                localVarQueryParameter['per_page'] = perPage;\n            }\n\n            if (page !== undefined) {\n                localVarQueryParameter['page'] = page;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary List wherever the item were saved\n         * @param {string} type \n         * @param {number} workId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentAlbumSaveInfo: async (type: string, workId: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'type' is not null or undefined\n            if (type === null || type === undefined) {\n                throw new RequiredError('type','Required parameter type was null or undefined when calling getCurrentAlbumSaveInfo.');\n            }\n            // verify required parameter 'workId' is not null or undefined\n            if (workId === null || workId === undefined) {\n                throw new RequiredError('workId','Required parameter workId was null or undefined when calling getCurrentAlbumSaveInfo.');\n            }\n            const localVarPath = `/albums/current/{type}/{work_id}`\n                .replace(`{${\"type\"}}`, encodeURIComponent(String(type)))\n                .replace(`{${\"work_id\"}}`, encodeURIComponent(String(workId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary List user's albums\n         * @param {number} userId \n         * @param {number} perPage How many record to show per page of pagination\n         * @param {number} page Pagination index\n         * @param {string} type \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listUserAlbums: async (userId: number, perPage: number, page: number, type: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'userId' is not null or undefined\n            if (userId === null || userId === undefined) {\n                throw new RequiredError('userId','Required parameter userId was null or undefined when calling listUserAlbums.');\n            }\n            // verify required parameter 'perPage' is not null or undefined\n            if (perPage === null || perPage === undefined) {\n                throw new RequiredError('perPage','Required parameter perPage was null or undefined when calling listUserAlbums.');\n            }\n            // verify required parameter 'page' is not null or undefined\n            if (page === null || page === undefined) {\n                throw new RequiredError('page','Required parameter page was null or undefined when calling listUserAlbums.');\n            }\n            // verify required parameter 'type' is not null or undefined\n            if (type === null || type === undefined) {\n                throw new RequiredError('type','Required parameter type was null or undefined when calling listUserAlbums.');\n            }\n            const localVarPath = `/albums/user/{userId}`\n                .replace(`{${\"userId\"}}`, encodeURIComponent(String(userId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            if (perPage !== undefined) {\n                localVarQueryParameter['per_page'] = perPage;\n            }\n\n            if (page !== undefined) {\n                localVarQueryParameter['page'] = page;\n            }\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Remove a work(s) from album\n         * @param {WorkRemoveBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeWorkFromAlbum: async (body?: WorkRemoveBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/albums/work/remove`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update information of current existing album\n         * @param {AlbumsBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAlbum: async (body?: AlbumsBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/albums`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'PATCH', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * AlbumsApi - functional programming interface\n * @export\n */\nexport const AlbumsApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add artwork(s) to album\n         * @param {AlbumsAddworkBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addWorkToAlbum(body?: AlbumsAddworkBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuccessMessageModel>>> {\n            const localVarAxiosArgs = await AlbumsApiAxiosParamCreator(configuration).addWorkToAlbum(body, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Create a new album\n         * @param {AlbumsCreateBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createAlbum(body?: AlbumsCreateBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2012>>> {\n            const localVarAxiosArgs = await AlbumsApiAxiosParamCreator(configuration).createAlbum(body, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Remove an album\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteAlbum(id: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuccessMessageModel>>> {\n            const localVarAxiosArgs = await AlbumsApiAxiosParamCreator(configuration).deleteAlbum(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary View detailed information about the album\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getAlbumById(id: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<AlbumLiteModel>>> {\n            const localVarAxiosArgs = await AlbumsApiAxiosParamCreator(configuration).getAlbumById(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary List album items\n         * @param {number} id \n         * @param {number} perPage How many record to show per page of pagination\n         * @param {number} page Pagination index\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getAlbumItems(id: number, perPage: number, page: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20016>>> {\n            const localVarAxiosArgs = await AlbumsApiAxiosParamCreator(configuration).getAlbumItems(id, perPage, page, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary List wherever the item were saved\n         * @param {string} type \n         * @param {number} workId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getCurrentAlbumSaveInfo(type: string, workId: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20013>>> {\n            const localVarAxiosArgs = await AlbumsApiAxiosParamCreator(configuration).getCurrentAlbumSaveInfo(type, workId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary List user's albums\n         * @param {number} userId \n         * @param {number} perPage How many record to show per page of pagination\n         * @param {number} page Pagination index\n         * @param {string} type \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async listUserAlbums(userId: number, perPage: number, page: number, type: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20017>>> {\n            const localVarAxiosArgs = await AlbumsApiAxiosParamCreator(configuration).listUserAlbums(userId, perPage, page, type, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Remove a work(s) from album\n         * @param {WorkRemoveBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async removeWorkFromAlbum(body?: WorkRemoveBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuccessMessageModel>>> {\n            const localVarAxiosArgs = await AlbumsApiAxiosParamCreator(configuration).removeWorkFromAlbum(body, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Update information of current existing album\n         * @param {AlbumsBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateAlbum(body?: AlbumsBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuccessMessageModel>>> {\n            const localVarAxiosArgs = await AlbumsApiAxiosParamCreator(configuration).updateAlbum(body, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * AlbumsApi - factory interface\n * @export\n */\nexport const AlbumsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary Add artwork(s) to album\n         * @param {AlbumsAddworkBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addWorkToAlbum(body?: AlbumsAddworkBody, options?: AxiosRequestConfig): Promise<AxiosResponse<SuccessMessageModel>> {\n            return AlbumsApiFp(configuration).addWorkToAlbum(body, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Create a new album\n         * @param {AlbumsCreateBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createAlbum(body?: AlbumsCreateBody, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2012>> {\n            return AlbumsApiFp(configuration).createAlbum(body, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Remove an album\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteAlbum(id: number, options?: AxiosRequestConfig): Promise<AxiosResponse<SuccessMessageModel>> {\n            return AlbumsApiFp(configuration).deleteAlbum(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary View detailed information about the album\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getAlbumById(id: number, options?: AxiosRequestConfig): Promise<AxiosResponse<AlbumLiteModel>> {\n            return AlbumsApiFp(configuration).getAlbumById(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary List album items\n         * @param {number} id \n         * @param {number} perPage How many record to show per page of pagination\n         * @param {number} page Pagination index\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getAlbumItems(id: number, perPage: number, page: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20016>> {\n            return AlbumsApiFp(configuration).getAlbumItems(id, perPage, page, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary List wherever the item were saved\n         * @param {string} type \n         * @param {number} workId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getCurrentAlbumSaveInfo(type: string, workId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20013>> {\n            return AlbumsApiFp(configuration).getCurrentAlbumSaveInfo(type, workId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary List user's albums\n         * @param {number} userId \n         * @param {number} perPage How many record to show per page of pagination\n         * @param {number} page Pagination index\n         * @param {string} type \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async listUserAlbums(userId: number, perPage: number, page: number, type: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20017>> {\n            return AlbumsApiFp(configuration).listUserAlbums(userId, perPage, page, type, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Remove a work(s) from album\n         * @param {WorkRemoveBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async removeWorkFromAlbum(body?: WorkRemoveBody, options?: AxiosRequestConfig): Promise<AxiosResponse<SuccessMessageModel>> {\n            return AlbumsApiFp(configuration).removeWorkFromAlbum(body, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update information of current existing album\n         * @param {AlbumsBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateAlbum(body?: AlbumsBody, options?: AxiosRequestConfig): Promise<AxiosResponse<SuccessMessageModel>> {\n            return AlbumsApiFp(configuration).updateAlbum(body, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * AlbumsApi - object-oriented interface\n * @export\n * @class AlbumsApi\n * @extends {BaseAPI}\n */\nexport class AlbumsApi extends BaseAPI {\n    /**\n     * \n     * @summary Add artwork(s) to album\n     * @param {AlbumsAddworkBody} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AlbumsApi\n     */\n    public async addWorkToAlbum(body?: AlbumsAddworkBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<SuccessMessageModel>> {\n        return AlbumsApiFp(this.configuration).addWorkToAlbum(body, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Create a new album\n     * @param {AlbumsCreateBody} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AlbumsApi\n     */\n    public async createAlbum(body?: AlbumsCreateBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2012>> {\n        return AlbumsApiFp(this.configuration).createAlbum(body, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Remove an album\n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AlbumsApi\n     */\n    public async deleteAlbum(id: number, options?: AxiosRequestConfig) : Promise<AxiosResponse<SuccessMessageModel>> {\n        return AlbumsApiFp(this.configuration).deleteAlbum(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary View detailed information about the album\n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AlbumsApi\n     */\n    public async getAlbumById(id: number, options?: AxiosRequestConfig) : Promise<AxiosResponse<AlbumLiteModel>> {\n        return AlbumsApiFp(this.configuration).getAlbumById(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary List album items\n     * @param {number} id \n     * @param {number} perPage How many record to show per page of pagination\n     * @param {number} page Pagination index\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AlbumsApi\n     */\n    public async getAlbumItems(id: number, perPage: number, page: number, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20016>> {\n        return AlbumsApiFp(this.configuration).getAlbumItems(id, perPage, page, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary List wherever the item were saved\n     * @param {string} type \n     * @param {number} workId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AlbumsApi\n     */\n    public async getCurrentAlbumSaveInfo(type: string, workId: number, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20013>> {\n        return AlbumsApiFp(this.configuration).getCurrentAlbumSaveInfo(type, workId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary List user's albums\n     * @param {number} userId \n     * @param {number} perPage How many record to show per page of pagination\n     * @param {number} page Pagination index\n     * @param {string} type \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AlbumsApi\n     */\n    public async listUserAlbums(userId: number, perPage: number, page: number, type: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20017>> {\n        return AlbumsApiFp(this.configuration).listUserAlbums(userId, perPage, page, type, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Remove a work(s) from album\n     * @param {WorkRemoveBody} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AlbumsApi\n     */\n    public async removeWorkFromAlbum(body?: WorkRemoveBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<SuccessMessageModel>> {\n        return AlbumsApiFp(this.configuration).removeWorkFromAlbum(body, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Update information of current existing album\n     * @param {AlbumsBody} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AlbumsApi\n     */\n    public async updateAlbum(body?: AlbumsBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<SuccessMessageModel>> {\n        return AlbumsApiFp(this.configuration).updateAlbum(body, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Upy API Documentation\n * API documentation of Upy - a social community platform for Artists.\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\nimport { CollectionIdItemsBody } from '../models';\nimport { CollectionIdItemsBody1 } from '../models';\nimport { CollectionModel } from '../models';\nimport { CollectionsBody } from '../models';\nimport { CollectionsCreateBody } from '../models';\nimport { CollectionsLaterBody } from '../models';\nimport { InlineResponse20010 } from '../models';\nimport { InlineResponse20011 } from '../models';\nimport { InlineResponse2009 } from '../models';\nimport { InlineResponse201 } from '../models';\nimport { SuccessMessageModel } from '../models';\n/**\n * CollectionsApi - axios parameter creator\n * @export\n */\nexport const CollectionsApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add item to 'for later' collection\n         * @param {string} type \n         * @param {CollectionsLaterBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addItemForLater: async (type: string, body?: CollectionsLaterBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'type' is not null or undefined\n            if (type === null || type === undefined) {\n                throw new RequiredError('type','Required parameter type was null or undefined when calling addItemForLater.');\n            }\n            const localVarPath = `/collections/later`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Add item(s) to specific collection\n         * @param {string} type \n         * @param {number} collectionId \n         * @param {CollectionIdItemsBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addItemToCollection: async (type: string, collectionId: number, body?: CollectionIdItemsBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'type' is not null or undefined\n            if (type === null || type === undefined) {\n                throw new RequiredError('type','Required parameter type was null or undefined when calling addItemToCollection.');\n            }\n            // verify required parameter 'collectionId' is not null or undefined\n            if (collectionId === null || collectionId === undefined) {\n                throw new RequiredError('collectionId','Required parameter collectionId was null or undefined when calling addItemToCollection.');\n            }\n            const localVarPath = `/collections/{collectionId}/items`\n                .replace(`{${\"collectionId\"}}`, encodeURIComponent(String(collectionId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Remove a collection\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        collectionsIdDelete: async (id: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling collectionsIdDelete.');\n            }\n            const localVarPath = `/collections/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Create a new collection\n         * @param {CollectionsCreateBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        create: async (body?: CollectionsCreateBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/collections/create`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Get collection info by collection Id\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        detail: async (id: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling detail.');\n            }\n            const localVarPath = `/collections/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary List where the work saved\n         * @param {string} type \n         * @param {number} workId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentSaveInfo: async (type: string, workId: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'type' is not null or undefined\n            if (type === null || type === undefined) {\n                throw new RequiredError('type','Required parameter type was null or undefined when calling getCurrentSaveInfo.');\n            }\n            // verify required parameter 'workId' is not null or undefined\n            if (workId === null || workId === undefined) {\n                throw new RequiredError('workId','Required parameter workId was null or undefined when calling getCurrentSaveInfo.');\n            }\n            const localVarPath = `/collections/current/{type}/{work_id}`\n                .replace(`{${\"type\"}}`, encodeURIComponent(String(type)))\n                .replace(`{${\"work_id\"}}`, encodeURIComponent(String(workId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Get list of collection\n         * @param {number} id \n         * @param {number} perPage How many record to show per page of pagination\n         * @param {number} page Pagination index\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listCollectionItems: async (id: number, perPage: number, page: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling listCollectionItems.');\n            }\n            // verify required parameter 'perPage' is not null or undefined\n            if (perPage === null || perPage === undefined) {\n                throw new RequiredError('perPage','Required parameter perPage was null or undefined when calling listCollectionItems.');\n            }\n            // verify required parameter 'page' is not null or undefined\n            if (page === null || page === undefined) {\n                throw new RequiredError('page','Required parameter page was null or undefined when calling listCollectionItems.');\n            }\n            const localVarPath = `/collections/{id}/items`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            if (perPage !== undefined) {\n                localVarQueryParameter['per_page'] = perPage;\n            }\n\n            if (page !== undefined) {\n                localVarQueryParameter['page'] = page;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary List collection owned by user\n         * @param {number} userId \n         * @param {string} type \n         * @param {number} page Pagination index\n         * @param {number} perPage How many record to show per page of pagination\n         * @param {string} [name] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listUserCollections: async (userId: number, type: string, page: number, perPage: number, name?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'userId' is not null or undefined\n            if (userId === null || userId === undefined) {\n                throw new RequiredError('userId','Required parameter userId was null or undefined when calling listUserCollections.');\n            }\n            // verify required parameter 'type' is not null or undefined\n            if (type === null || type === undefined) {\n                throw new RequiredError('type','Required parameter type was null or undefined when calling listUserCollections.');\n            }\n            // verify required parameter 'page' is not null or undefined\n            if (page === null || page === undefined) {\n                throw new RequiredError('page','Required parameter page was null or undefined when calling listUserCollections.');\n            }\n            // verify required parameter 'perPage' is not null or undefined\n            if (perPage === null || perPage === undefined) {\n                throw new RequiredError('perPage','Required parameter perPage was null or undefined when calling listUserCollections.');\n            }\n            const localVarPath = `/collections/user/{userId}`\n                .replace(`{${\"userId\"}}`, encodeURIComponent(String(userId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (page !== undefined) {\n                localVarQueryParameter['page'] = page;\n            }\n\n            if (perPage !== undefined) {\n                localVarQueryParameter['per_page'] = perPage;\n            }\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Remove item(s) from specific collection\n         * @param {string} type \n         * @param {number} collectionId \n         * @param {CollectionIdItemsBody1} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeItemFromCollection: async (type: string, collectionId: number, body?: CollectionIdItemsBody1, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            // verify required parameter 'type' is not null or undefined\n            if (type === null || type === undefined) {\n                throw new RequiredError('type','Required parameter type was null or undefined when calling removeItemFromCollection.');\n            }\n            // verify required parameter 'collectionId' is not null or undefined\n            if (collectionId === null || collectionId === undefined) {\n                throw new RequiredError('collectionId','Required parameter collectionId was null or undefined when calling removeItemFromCollection.');\n            }\n            const localVarPath = `/collections/{collectionId}/items`\n                .replace(`{${\"collectionId\"}}`, encodeURIComponent(String(collectionId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            if (type !== undefined) {\n                localVarQueryParameter['type'] = type;\n            }\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update information of current existing collection\n         * @param {CollectionsBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateCollection: async (body?: CollectionsBody, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n            const localVarPath = `/collections`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions :AxiosRequestConfig = { method: 'PATCH', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication bearerAuth required\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const query = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                query.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.params) {\n                query.set(key, options.params[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(query)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * CollectionsApi - functional programming interface\n * @export\n */\nexport const CollectionsApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add item to 'for later' collection\n         * @param {string} type \n         * @param {CollectionsLaterBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addItemForLater(type: string, body?: CollectionsLaterBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuccessMessageModel>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).addItemForLater(type, body, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Add item(s) to specific collection\n         * @param {string} type \n         * @param {number} collectionId \n         * @param {CollectionIdItemsBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addItemToCollection(type: string, collectionId: number, body?: CollectionIdItemsBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuccessMessageModel>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).addItemToCollection(type, collectionId, body, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Remove a collection\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async collectionsIdDelete(id: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuccessMessageModel>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).collectionsIdDelete(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Create a new collection\n         * @param {CollectionsCreateBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async create(body?: CollectionsCreateBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse201>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).create(body, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Get collection info by collection Id\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async detail(id: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<CollectionModel>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).detail(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary List where the work saved\n         * @param {string} type \n         * @param {number} workId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getCurrentSaveInfo(type: string, workId: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20011>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).getCurrentSaveInfo(type, workId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Get list of collection\n         * @param {number} id \n         * @param {number} perPage How many record to show per page of pagination\n         * @param {number} page Pagination index\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async listCollectionItems(id: number, perPage: number, page: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2009>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).listCollectionItems(id, perPage, page, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary List collection owned by user\n         * @param {number} userId \n         * @param {string} type \n         * @param {number} page Pagination index\n         * @param {number} perPage How many record to show per page of pagination\n         * @param {string} [name] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async listUserCollections(userId: number, type: string, page: number, perPage: number, name?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20010>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).listUserCollections(userId, type, page, perPage, name, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Remove item(s) from specific collection\n         * @param {string} type \n         * @param {number} collectionId \n         * @param {CollectionIdItemsBody1} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async removeItemFromCollection(type: string, collectionId: number, body?: CollectionIdItemsBody1, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuccessMessageModel>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).removeItemFromCollection(type, collectionId, body, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Update information of current existing collection\n         * @param {CollectionsBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateCollection(body?: CollectionsBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SuccessMessageModel>>> {\n            const localVarAxiosArgs = await CollectionsApiAxiosParamCreator(configuration).updateCollection(body, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * CollectionsApi - factory interface\n * @export\n */\nexport const CollectionsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary Add item to 'for later' collection\n         * @param {string} type \n         * @param {CollectionsLaterBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addItemForLater(type: string, body?: CollectionsLaterBody, options?: AxiosRequestConfig): Promise<AxiosResponse<SuccessMessageModel>> {\n            return CollectionsApiFp(configuration).addItemForLater(type, body, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Add item(s) to specific collection\n         * @param {string} type \n         * @param {number} collectionId \n         * @param {CollectionIdItemsBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addItemToCollection(type: string, collectionId: number, body?: CollectionIdItemsBody, options?: AxiosRequestConfig): Promise<AxiosResponse<SuccessMessageModel>> {\n            return CollectionsApiFp(configuration).addItemToCollection(type, collectionId, body, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Remove a collection\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async collectionsIdDelete(id: number, options?: AxiosRequestConfig): Promise<AxiosResponse<SuccessMessageModel>> {\n            return CollectionsApiFp(configuration).collectionsIdDelete(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Create a new collection\n         * @param {CollectionsCreateBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async create(body?: CollectionsCreateBody, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse201>> {\n            return CollectionsApiFp(configuration).create(body, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Get collection info by collection Id\n         * @param {number} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async detail(id: number, options?: AxiosRequestConfig): Promise<AxiosResponse<CollectionModel>> {\n            return CollectionsApiFp(configuration).detail(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary List where the work saved\n         * @param {string} type \n         * @param {number} workId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getCurrentSaveInfo(type: string, workId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20011>> {\n            return CollectionsApiFp(configuration).getCurrentSaveInfo(type, workId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Get list of collection\n         * @param {number} id \n         * @param {number} perPage How many record to show per page of pagination\n         * @param {number} page Pagination index\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async listCollectionItems(id: number, perPage: number, page: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2009>> {\n            return CollectionsApiFp(configuration).listCollectionItems(id, perPage, page, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary List collection owned by user\n         * @param {number} userId \n         * @param {string} type \n         * @param {number} page Pagination index\n         * @param {number} perPage How many record to show per page of pagination\n         * @param {string} [name] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async listUserCollections(userId: number, type: string, page: number, perPage: number, name?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20010>> {\n            return CollectionsApiFp(configuration).listUserCollections(userId, type, page, perPage, name, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Remove item(s) from specific collection\n         * @param {string} type \n         * @param {number} collectionId \n         * @param {CollectionIdItemsBody1} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async removeItemFromCollection(type: string, collectionId: number, body?: CollectionIdItemsBody1, options?: AxiosRequestConfig): Promise<AxiosResponse<SuccessMessageModel>> {\n            return CollectionsApiFp(configuration).removeItemFromCollection(type, collectionId, body, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update information of current existing collection\n         * @param {CollectionsBody} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateCollection(body?: CollectionsBody, options?: AxiosRequestConfig): Promise<AxiosResponse<SuccessMessageModel>> {\n            return CollectionsApiFp(configuration).updateCollection(body, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * CollectionsApi - object-oriented interface\n * @export\n * @class CollectionsApi\n * @extends {BaseAPI}\n */\nexport class CollectionsApi extends BaseAPI {\n    /**\n     * \n     * @summary Add item to 'for later' collection\n     * @param {string} type \n     * @param {CollectionsLaterBody} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async addItemForLater(type: string, body?: CollectionsLaterBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<SuccessMessageModel>> {\n        return CollectionsApiFp(this.configuration).addItemForLater(type, body, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Add item(s) to specific collection\n     * @param {string} type \n     * @param {number} collectionId \n     * @param {CollectionIdItemsBody} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async addItemToCollection(type: string, collectionId: number, body?: CollectionIdItemsBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<SuccessMessageModel>> {\n        return CollectionsApiFp(this.configuration).addItemToCollection(type, collectionId, body, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Remove a collection\n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async collectionsIdDelete(id: number, options?: AxiosRequestConfig) : Promise<AxiosResponse<SuccessMessageModel>> {\n        return CollectionsApiFp(this.configuration).collectionsIdDelete(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Create a new collection\n     * @param {CollectionsCreateBody} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async create(body?: CollectionsCreateBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse201>> {\n        return CollectionsApiFp(this.configuration).create(body, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Get collection info by collection Id\n     * @param {number} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async detail(id: number, options?: AxiosRequestConfig) : Promise<AxiosResponse<CollectionModel>> {\n        return CollectionsApiFp(this.configuration).detail(id, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary List where the work saved\n     * @param {string} type \n     * @param {number} workId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async getCurrentSaveInfo(type: string, workId: number, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20011>> {\n        return CollectionsApiFp(this.configuration).getCurrentSaveInfo(type, workId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Get list of collection\n     * @param {number} id \n     * @param {number} perPage How many record to show per page of pagination\n     * @param {number} page Pagination index\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async listCollectionItems(id: number, perPage: number, page: number, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse2009>> {\n        return CollectionsApiFp(this.configuration).listCollectionItems(id, perPage, page, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary List collection owned by user\n     * @param {number} userId \n     * @param {string} type \n     * @param {number} page Pagination index\n     * @param {number} perPage How many record to show per page of pagination\n     * @param {string} [name] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async listUserCollections(userId: number, type: string, page: number, perPage: number, name?: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse20010>> {\n        return CollectionsApiFp(this.configuration).listUserCollections(userId, type, page, perPage, name, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Remove item(s) from specific collection\n     * @param {string} type \n     * @param {number} collectionId \n     * @param {CollectionIdItemsBody1} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async removeItemFromCollection(type: string, collectionId: number, body?: CollectionIdItemsBody1, options?: AxiosRequestConfig) : Promise<AxiosResponse<SuccessMessageModel>> {\n        return CollectionsApiFp(this.configuration).removeItemFromCollection(type, collectionId, body, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     * \n     * @summary Update information of current existing collection\n     * @param {CollectionsBody} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CollectionsApi\n     */\n    public async updateCollection(body?: CollectionsBody, options?: AxiosRequestConfig) : Promise<AxiosResponse<SuccessMessageModel>> {\n        return CollectionsApiFp(this.configuration).updateCollection(body, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n","export default function useBounceAnimation () {\r\n  const bounceInterval = 2500\r\n\r\n  const animate = (elementId: string) => {\r\n    const el = document.getElementById(elementId)\r\n\r\n    el?.classList.add('animate-bounce')\r\n    \r\n    setInterval(() => {\r\n      el?.classList.remove('animate-bounce')\r\n    }, bounceInterval)\r\n  }\r\n\r\n  return {\r\n    animate\r\n  }\r\n}\r\n","export default function useSplash () {\r\n  const splash = (interval: any, ref: Ref<boolean>, splashId: string) => {\r\n    ref.value = false\r\n    clearTimeout(interval)\r\n\r\n    ref.value = true\r\n    \r\n    // hide copied splash alert after 2ms\r\n    interval = setTimeout(() => {\r\n      ref.value = false\r\n      hide(splashId)\r\n    }, 2000)\r\n  }\r\n\r\n  const hide = (elementId: string) => {\r\n    const splashEl = document.getElementById(elementId)\r\n    splashEl?.classList.add('fade')\r\n    splashEl?.classList.add('fade-out')\r\n  }\r\n\r\n  return {\r\n    splash,\r\n    hide\r\n  }\r\n}\r\n","import { shallowRef, watchEffect, readonly, unref, ref, isVue3, watch, customRef, effectScope, provide, inject, getCurrentScope, onScopeDispose, isRef, computed, reactive, toRefs as toRefs$1, toRef, isVue2, set as set$1, getCurrentInstance, onBeforeMount, nextTick, onBeforeUnmount, onMounted, onUnmounted, isReactive } from 'vue-demi';\n\nvar __defProp$9 = Object.defineProperty;\nvar __defProps$6 = Object.defineProperties;\nvar __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$b = Object.getOwnPropertySymbols;\nvar __hasOwnProp$b = Object.prototype.hasOwnProperty;\nvar __propIsEnum$b = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$9 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$b.call(b, prop))\n      __defNormalProp$9(a, prop, b[prop]);\n  if (__getOwnPropSymbols$b)\n    for (var prop of __getOwnPropSymbols$b(b)) {\n      if (__propIsEnum$b.call(b, prop))\n        __defNormalProp$9(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));\nfunction computedEager(fn, options) {\n  var _a;\n  const result = shallowRef();\n  watchEffect(() => {\n    result.value = fn();\n  }, __spreadProps$6(__spreadValues$9({}, options), {\n    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : \"sync\"\n  }));\n  return readonly(result);\n}\n\nvar _a;\nconst isClient = typeof window !== \"undefined\";\nconst isDef = (val) => typeof val !== \"undefined\";\nconst assert = (condition, ...infos) => {\n  if (!condition)\n    console.warn(...infos);\n};\nconst toString = Object.prototype.toString;\nconst isBoolean = (val) => typeof val === \"boolean\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isNumber = (val) => typeof val === \"number\";\nconst isString = (val) => typeof val === \"string\";\nconst isObject = (val) => toString.call(val) === \"[object Object]\";\nconst isWindow = (val) => typeof window !== \"undefined\" && toString.call(val) === \"[object Window]\";\nconst now = () => Date.now();\nconst timestamp = () => +Date.now();\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\nconst noop = () => {\n};\nconst rand = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst isIOS = isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);\nconst hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);\n\nfunction resolveUnref(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\n\nfunction createFilterWrapper(filter, fn) {\n  function wrapper(...args) {\n    filter(() => fn.apply(this, args), { fn, thisArg: this, args });\n  }\n  return wrapper;\n}\nconst bypassFilter = (invoke) => {\n  return invoke();\n};\nfunction debounceFilter(ms, options = {}) {\n  let timer;\n  let maxTimer;\n  const filter = (invoke) => {\n    const duration = resolveUnref(ms);\n    const maxDuration = resolveUnref(options.maxWait);\n    if (timer)\n      clearTimeout(timer);\n    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {\n      if (maxTimer) {\n        clearTimeout(maxTimer);\n        maxTimer = null;\n      }\n      return invoke();\n    }\n    if (maxDuration && !maxTimer) {\n      maxTimer = setTimeout(() => {\n        if (timer)\n          clearTimeout(timer);\n        maxTimer = null;\n        invoke();\n      }, maxDuration);\n    }\n    timer = setTimeout(() => {\n      if (maxTimer)\n        clearTimeout(maxTimer);\n      maxTimer = null;\n      invoke();\n    }, duration);\n  };\n  return filter;\n}\nfunction throttleFilter(ms, trailing = true, leading = true) {\n  let lastExec = 0;\n  let timer;\n  let isLeading = true;\n  const clear = () => {\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n    }\n  };\n  const filter = (invoke) => {\n    const duration = resolveUnref(ms);\n    const elapsed = Date.now() - lastExec;\n    clear();\n    if (duration <= 0) {\n      lastExec = Date.now();\n      return invoke();\n    }\n    if (elapsed > duration && (leading || !isLeading)) {\n      lastExec = Date.now();\n      invoke();\n    } else if (trailing) {\n      timer = setTimeout(() => {\n        lastExec = Date.now();\n        isLeading = true;\n        clear();\n        invoke();\n      }, duration);\n    }\n    if (!leading && !timer)\n      timer = setTimeout(() => isLeading = true, duration);\n    isLeading = false;\n  };\n  return filter;\n}\nfunction pausableFilter(extendFilter = bypassFilter) {\n  const isActive = ref(true);\n  function pause() {\n    isActive.value = false;\n  }\n  function resume() {\n    isActive.value = true;\n  }\n  const eventFilter = (...args) => {\n    if (isActive.value)\n      extendFilter(...args);\n  };\n  return { isActive, pause, resume, eventFilter };\n}\n\nfunction __onlyVue3(name = \"this function\") {\n  if (isVue3)\n    return;\n  throw new Error(`[VueUse] ${name} is only works on Vue 3.`);\n}\nconst directiveHooks = {\n  mounted: isVue3 ? \"mounted\" : \"inserted\",\n  updated: isVue3 ? \"updated\" : \"componentUpdated\",\n  unmounted: isVue3 ? \"unmounted\" : \"unbind\"\n};\n\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = \"Timeout\") {\n  return new Promise((resolve, reject) => {\n    if (throwOnTimeout)\n      setTimeout(() => reject(reason), ms);\n    else\n      setTimeout(resolve, ms);\n  });\n}\nfunction identity(arg) {\n  return arg;\n}\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction containsProp(obj, ...props) {\n  return props.some((k) => k in obj);\n}\nfunction increaseWithUnit(target, delta) {\n  var _a;\n  if (typeof target === \"number\")\n    return target + delta;\n  const value = ((_a = target.match(/^-?[0-9]+\\.?[0-9]*/)) == null ? void 0 : _a[0]) || \"\";\n  const unit = target.slice(value.length);\n  const result = parseFloat(value) + delta;\n  if (Number.isNaN(result))\n    return target;\n  return result + unit;\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || obj[k] !== void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\n\nfunction computedWithControl(source, fn) {\n  let v = void 0;\n  let track;\n  let trigger;\n  const dirty = ref(true);\n  const update = () => {\n    dirty.value = true;\n    trigger();\n  };\n  watch(source, update, { flush: \"sync\" });\n  const get = isFunction(fn) ? fn : fn.get;\n  const set = isFunction(fn) ? void 0 : fn.set;\n  const result = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        if (dirty.value) {\n          v = get();\n          dirty.value = false;\n        }\n        track();\n        return v;\n      },\n      set(v2) {\n        set == null ? void 0 : set(v2);\n      }\n    };\n  });\n  if (Object.isExtensible(result))\n    result.trigger = update;\n  return result;\n}\n\nfunction createEventHook() {\n  const fns = [];\n  const off = (fn) => {\n    const index = fns.indexOf(fn);\n    if (index !== -1)\n      fns.splice(index, 1);\n  };\n  const on = (fn) => {\n    fns.push(fn);\n    return {\n      off: () => off(fn)\n    };\n  };\n  const trigger = (param) => {\n    fns.forEach((fn) => fn(param));\n  };\n  return {\n    on,\n    off,\n    trigger\n  };\n}\n\nfunction createGlobalState(stateFactory) {\n  let initialized = false;\n  let state;\n  const scope = effectScope(true);\n  return () => {\n    if (!initialized) {\n      state = scope.run(stateFactory);\n      initialized = true;\n    }\n    return state;\n  };\n}\n\nfunction createInjectionState(composable) {\n  const key = Symbol(\"InjectionState\");\n  const useProvidingState = (...args) => {\n    provide(key, composable(...args));\n  };\n  const useInjectedState = () => inject(key);\n  return [useProvidingState, useInjectedState];\n}\n\nfunction tryOnScopeDispose(fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\n\nfunction createSharedComposable(composable) {\n  let subscribers = 0;\n  let state;\n  let scope;\n  const dispose = () => {\n    subscribers -= 1;\n    if (scope && subscribers <= 0) {\n      scope.stop();\n      state = void 0;\n      scope = void 0;\n    }\n  };\n  return (...args) => {\n    subscribers += 1;\n    if (!state) {\n      scope = effectScope(true);\n      state = scope.run(() => composable(...args));\n    }\n    tryOnScopeDispose(dispose);\n    return state;\n  };\n}\n\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\n  __onlyVue3();\n  for (const [key, value] of Object.entries(extend)) {\n    if (key === \"value\")\n      continue;\n    if (isRef(value) && unwrap) {\n      Object.defineProperty(ref, key, {\n        get() {\n          return value.value;\n        },\n        set(v) {\n          value.value = v;\n        },\n        enumerable\n      });\n    } else {\n      Object.defineProperty(ref, key, { value, enumerable });\n    }\n  }\n  return ref;\n}\n\nfunction get(obj, key) {\n  if (key == null)\n    return unref(obj);\n  return unref(obj)[key];\n}\n\nfunction isDefined(v) {\n  return unref(v) != null;\n}\n\nvar __defProp$8 = Object.defineProperty;\nvar __getOwnPropSymbols$a = Object.getOwnPropertySymbols;\nvar __hasOwnProp$a = Object.prototype.hasOwnProperty;\nvar __propIsEnum$a = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$8 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$a.call(b, prop))\n      __defNormalProp$8(a, prop, b[prop]);\n  if (__getOwnPropSymbols$a)\n    for (var prop of __getOwnPropSymbols$a(b)) {\n      if (__propIsEnum$a.call(b, prop))\n        __defNormalProp$8(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction makeDestructurable(obj, arr) {\n  if (typeof Symbol !== \"undefined\") {\n    const clone = __spreadValues$8({}, obj);\n    Object.defineProperty(clone, Symbol.iterator, {\n      enumerable: false,\n      value() {\n        let index = 0;\n        return {\n          next: () => ({\n            value: arr[index++],\n            done: index > arr.length\n          })\n        };\n      }\n    });\n    return clone;\n  } else {\n    return Object.assign([...arr], obj);\n  }\n}\n\nfunction reactify(fn, options) {\n  const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? unref : resolveUnref;\n  return function(...args) {\n    return computed(() => fn.apply(this, args.map((i) => unrefFn(i))));\n  };\n}\n\nfunction reactifyObject(obj, optionsOrKeys = {}) {\n  let keys = [];\n  let options;\n  if (Array.isArray(optionsOrKeys)) {\n    keys = optionsOrKeys;\n  } else {\n    options = optionsOrKeys;\n    const { includeOwnProperties = true } = optionsOrKeys;\n    keys.push(...Object.keys(obj));\n    if (includeOwnProperties)\n      keys.push(...Object.getOwnPropertyNames(obj));\n  }\n  return Object.fromEntries(keys.map((key) => {\n    const value = obj[key];\n    return [\n      key,\n      typeof value === \"function\" ? reactify(value.bind(obj), options) : value\n    ];\n  }));\n}\n\nfunction toReactive(objectRef) {\n  if (!isRef(objectRef))\n    return reactive(objectRef);\n  const proxy = new Proxy({}, {\n    get(_, p, receiver) {\n      return unref(Reflect.get(objectRef.value, p, receiver));\n    },\n    set(_, p, value) {\n      if (isRef(objectRef.value[p]) && !isRef(value))\n        objectRef.value[p].value = value;\n      else\n        objectRef.value[p] = value;\n      return true;\n    },\n    deleteProperty(_, p) {\n      return Reflect.deleteProperty(objectRef.value, p);\n    },\n    has(_, p) {\n      return Reflect.has(objectRef.value, p);\n    },\n    ownKeys() {\n      return Object.keys(objectRef.value);\n    },\n    getOwnPropertyDescriptor() {\n      return {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  });\n  return reactive(proxy);\n}\n\nfunction reactiveComputed(fn) {\n  return toReactive(computed(fn));\n}\n\nfunction reactiveOmit(obj, ...keys) {\n  const flatKeys = keys.flat();\n  return reactiveComputed(() => Object.fromEntries(Object.entries(toRefs$1(obj)).filter((e) => !flatKeys.includes(e[0]))));\n}\n\nfunction reactivePick(obj, ...keys) {\n  const flatKeys = keys.flat();\n  return reactive(Object.fromEntries(flatKeys.map((k) => [k, toRef(obj, k)])));\n}\n\nfunction refAutoReset(defaultValue, afterMs = 1e4) {\n  return customRef((track, trigger) => {\n    let value = defaultValue;\n    let timer;\n    const resetAfter = () => setTimeout(() => {\n      value = defaultValue;\n      trigger();\n    }, resolveUnref(afterMs));\n    tryOnScopeDispose(() => {\n      clearTimeout(timer);\n    });\n    return {\n      get() {\n        track();\n        return value;\n      },\n      set(newValue) {\n        value = newValue;\n        trigger();\n        clearTimeout(timer);\n        timer = resetAfter();\n      }\n    };\n  });\n}\n\nfunction useDebounceFn(fn, ms = 200, options = {}) {\n  return createFilterWrapper(debounceFilter(ms, options), fn);\n}\n\nfunction refDebounced(value, ms = 200, options = {}) {\n  if (ms <= 0)\n    return value;\n  const debounced = ref(value.value);\n  const updater = useDebounceFn(() => {\n    debounced.value = value.value;\n  }, ms, options);\n  watch(value, () => updater());\n  return debounced;\n}\n\nfunction refDefault(source, defaultValue) {\n  return computed({\n    get() {\n      var _a;\n      return (_a = source.value) != null ? _a : defaultValue;\n    },\n    set(value) {\n      source.value = value;\n    }\n  });\n}\n\nfunction useThrottleFn(fn, ms = 200, trailing = false, leading = true) {\n  return createFilterWrapper(throttleFilter(ms, trailing, leading), fn);\n}\n\nfunction refThrottled(value, delay = 200, trailing = true, leading = true) {\n  if (delay <= 0)\n    return value;\n  const throttled = ref(value.value);\n  const updater = useThrottleFn(() => {\n    throttled.value = value.value;\n  }, delay, trailing, leading);\n  watch(value, () => updater());\n  return throttled;\n}\n\nfunction refWithControl(initial, options = {}) {\n  let source = initial;\n  let track;\n  let trigger;\n  const ref = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        return get();\n      },\n      set(v) {\n        set(v);\n      }\n    };\n  });\n  function get(tracking = true) {\n    if (tracking)\n      track();\n    return source;\n  }\n  function set(value, triggering = true) {\n    var _a, _b;\n    if (value === source)\n      return;\n    const old = source;\n    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)\n      return;\n    source = value;\n    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);\n    if (triggering)\n      trigger();\n  }\n  const untrackedGet = () => get(false);\n  const silentSet = (v) => set(v, false);\n  const peek = () => get(false);\n  const lay = (v) => set(v, false);\n  return extendRef(ref, {\n    get,\n    set,\n    untrackedGet,\n    silentSet,\n    peek,\n    lay\n  }, { enumerable: true });\n}\nconst controlledRef = refWithControl;\n\nfunction resolveRef(r) {\n  return typeof r === \"function\" ? computed(r) : ref(r);\n}\n\nfunction set(...args) {\n  if (args.length === 2) {\n    const [ref, value] = args;\n    ref.value = value;\n  }\n  if (args.length === 3) {\n    if (isVue2) {\n      set$1(...args);\n    } else {\n      const [target, key, value] = args;\n      target[key] = value;\n    }\n  }\n}\n\nfunction syncRef(left, right, options = {}) {\n  var _a, _b;\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true,\n    direction = \"both\",\n    transform = {}\n  } = options;\n  let watchLeft;\n  let watchRight;\n  const transformLTR = (_a = transform.ltr) != null ? _a : (v) => v;\n  const transformRTL = (_b = transform.rtl) != null ? _b : (v) => v;\n  if (direction === \"both\" || direction === \"ltr\") {\n    watchLeft = watch(left, (newValue) => right.value = transformLTR(newValue), { flush, deep, immediate });\n  }\n  if (direction === \"both\" || direction === \"rtl\") {\n    watchRight = watch(right, (newValue) => left.value = transformRTL(newValue), { flush, deep, immediate });\n  }\n  return () => {\n    watchLeft == null ? void 0 : watchLeft();\n    watchRight == null ? void 0 : watchRight();\n  };\n}\n\nfunction syncRefs(source, targets, options = {}) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true\n  } = options;\n  if (!Array.isArray(targets))\n    targets = [targets];\n  return watch(source, (newValue) => targets.forEach((target) => target.value = newValue), { flush, deep, immediate });\n}\n\nvar __defProp$7 = Object.defineProperty;\nvar __defProps$5 = Object.defineProperties;\nvar __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$9 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$9 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$7 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$9.call(b, prop))\n      __defNormalProp$7(a, prop, b[prop]);\n  if (__getOwnPropSymbols$9)\n    for (var prop of __getOwnPropSymbols$9(b)) {\n      if (__propIsEnum$9.call(b, prop))\n        __defNormalProp$7(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));\nfunction toRefs(objectRef) {\n  if (!isRef(objectRef))\n    return toRefs$1(objectRef);\n  const result = Array.isArray(objectRef.value) ? new Array(objectRef.value.length) : {};\n  for (const key in objectRef.value) {\n    result[key] = customRef(() => ({\n      get() {\n        return objectRef.value[key];\n      },\n      set(v) {\n        if (Array.isArray(objectRef.value)) {\n          const copy = [...objectRef.value];\n          copy[key] = v;\n          objectRef.value = copy;\n        } else {\n          const newObject = __spreadProps$5(__spreadValues$7({}, objectRef.value), { [key]: v });\n          Object.setPrototypeOf(newObject, objectRef.value);\n          objectRef.value = newObject;\n        }\n      }\n    }));\n  }\n  return result;\n}\n\nfunction tryOnBeforeMount(fn, sync = true) {\n  if (getCurrentInstance())\n    onBeforeMount(fn);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnBeforeUnmount(fn) {\n  if (getCurrentInstance())\n    onBeforeUnmount(fn);\n}\n\nfunction tryOnMounted(fn, sync = true) {\n  if (getCurrentInstance())\n    onMounted(fn);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnUnmounted(fn) {\n  if (getCurrentInstance())\n    onUnmounted(fn);\n}\n\nfunction createUntil(r, isNot = false) {\n  function toMatch(condition, { flush = \"sync\", deep = false, timeout, throwOnTimeout } = {}) {\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(r, (v) => {\n        if (condition(v) !== isNot) {\n          stop == null ? void 0 : stop();\n          resolve(v);\n        }\n      }, {\n        flush,\n        deep,\n        immediate: true\n      });\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(promiseTimeout(timeout, throwOnTimeout).then(() => resolveUnref(r)).finally(() => stop == null ? void 0 : stop()));\n    }\n    return Promise.race(promises);\n  }\n  function toBe(value, options) {\n    if (!isRef(value))\n      return toMatch((v) => v === value, options);\n    const { flush = \"sync\", deep = false, timeout, throwOnTimeout } = options != null ? options : {};\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch([r, value], ([v1, v2]) => {\n        if (isNot !== (v1 === v2)) {\n          stop == null ? void 0 : stop();\n          resolve(v1);\n        }\n      }, {\n        flush,\n        deep,\n        immediate: true\n      });\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(promiseTimeout(timeout, throwOnTimeout).then(() => resolveUnref(r)).finally(() => {\n        stop == null ? void 0 : stop();\n        return resolveUnref(r);\n      }));\n    }\n    return Promise.race(promises);\n  }\n  function toBeTruthy(options) {\n    return toMatch((v) => Boolean(v), options);\n  }\n  function toBeNull(options) {\n    return toBe(null, options);\n  }\n  function toBeUndefined(options) {\n    return toBe(void 0, options);\n  }\n  function toBeNaN(options) {\n    return toMatch(Number.isNaN, options);\n  }\n  function toContains(value, options) {\n    return toMatch((v) => {\n      const array = Array.from(v);\n      return array.includes(value) || array.includes(resolveUnref(value));\n    }, options);\n  }\n  function changed(options) {\n    return changedTimes(1, options);\n  }\n  function changedTimes(n = 1, options) {\n    let count = -1;\n    return toMatch(() => {\n      count += 1;\n      return count >= n;\n    }, options);\n  }\n  if (Array.isArray(resolveUnref(r))) {\n    const instance = {\n      toMatch,\n      toContains,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  } else {\n    const instance = {\n      toMatch,\n      toBe,\n      toBeTruthy,\n      toBeNull,\n      toBeNaN,\n      toBeUndefined,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  }\n}\nfunction until(r) {\n  return createUntil(r);\n}\n\nfunction useArrayEvery(list, fn) {\n  return computed(() => resolveUnref(list).every((element, index, array) => fn(resolveUnref(element), index, array)));\n}\n\nfunction useArrayFilter(list, fn) {\n  return computed(() => resolveUnref(list).map((i) => resolveUnref(i)).filter(fn));\n}\n\nfunction useArrayFind(list, fn) {\n  return computed(() => resolveUnref(resolveUnref(list).find((element, index, array) => fn(resolveUnref(element), index, array))));\n}\n\nfunction useArrayFindIndex(list, fn) {\n  return computed(() => resolveUnref(list).findIndex((element, index, array) => fn(resolveUnref(element), index, array)));\n}\n\nfunction useArrayJoin(list, separator) {\n  return computed(() => resolveUnref(list).map((i) => resolveUnref(i)).join(resolveUnref(separator)));\n}\n\nfunction useArrayMap(list, fn) {\n  return computed(() => resolveUnref(list).map((i) => resolveUnref(i)).map(fn));\n}\n\nfunction useArrayReduce(list, reducer, ...args) {\n  const reduceCallback = (sum, value, index) => reducer(resolveUnref(sum), resolveUnref(value), index);\n  return computed(() => {\n    const resolved = resolveUnref(list);\n    return args.length ? resolved.reduce(reduceCallback, resolveUnref(args[0])) : resolved.reduce(reduceCallback);\n  });\n}\n\nfunction useArraySome(list, fn) {\n  return computed(() => resolveUnref(list).some((element, index, array) => fn(resolveUnref(element), index, array)));\n}\n\nfunction useCounter(initialValue = 0, options = {}) {\n  const count = ref(initialValue);\n  const {\n    max = Infinity,\n    min = -Infinity\n  } = options;\n  const inc = (delta = 1) => count.value = Math.min(max, count.value + delta);\n  const dec = (delta = 1) => count.value = Math.max(min, count.value - delta);\n  const get = () => count.value;\n  const set = (val) => count.value = val;\n  const reset = (val = initialValue) => {\n    initialValue = val;\n    return set(val);\n  };\n  return { count, inc, dec, get, set, reset };\n}\n\nconst REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/;\nconst REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\nconst defaultMeridiem = (hours, minutes, isLowercase, hasPeriod) => {\n  let m = hours < 12 ? \"AM\" : \"PM\";\n  if (hasPeriod)\n    m = m.split(\"\").reduce((acc, curr) => acc += `${curr}.`, \"\");\n  return isLowercase ? m.toLowerCase() : m;\n};\nconst formatDate = (date, formatStr, options) => {\n  var _a;\n  const years = date.getFullYear();\n  const month = date.getMonth();\n  const days = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n  const day = date.getDay();\n  const meridiem = (_a = options.customMeridiem) != null ? _a : defaultMeridiem;\n  const matches = {\n    YY: () => String(years).slice(-2),\n    YYYY: () => years,\n    M: () => month + 1,\n    MM: () => `${month + 1}`.padStart(2, \"0\"),\n    MMM: () => date.toLocaleDateString(options.locales, { month: \"short\" }),\n    MMMM: () => date.toLocaleDateString(options.locales, { month: \"long\" }),\n    D: () => String(days),\n    DD: () => `${days}`.padStart(2, \"0\"),\n    H: () => String(hours),\n    HH: () => `${hours}`.padStart(2, \"0\"),\n    h: () => `${hours % 12 || 12}`.padStart(1, \"0\"),\n    hh: () => `${hours % 12 || 12}`.padStart(2, \"0\"),\n    m: () => String(minutes),\n    mm: () => `${minutes}`.padStart(2, \"0\"),\n    s: () => String(seconds),\n    ss: () => `${seconds}`.padStart(2, \"0\"),\n    SSS: () => `${milliseconds}`.padStart(3, \"0\"),\n    d: () => day,\n    dd: () => date.toLocaleDateString(options.locales, { weekday: \"narrow\" }),\n    ddd: () => date.toLocaleDateString(options.locales, { weekday: \"short\" }),\n    dddd: () => date.toLocaleDateString(options.locales, { weekday: \"long\" }),\n    A: () => meridiem(hours, minutes),\n    AA: () => meridiem(hours, minutes, false, true),\n    a: () => meridiem(hours, minutes, true),\n    aa: () => meridiem(hours, minutes, true, true)\n  };\n  return formatStr.replace(REGEX_FORMAT, (match, $1) => $1 || matches[match]());\n};\nconst normalizeDate = (date) => {\n  if (date === null)\n    return new Date(NaN);\n  if (date === void 0)\n    return new Date();\n  if (date instanceof Date)\n    return new Date(date);\n  if (typeof date === \"string\" && !/Z$/i.test(date)) {\n    const d = date.match(REGEX_PARSE);\n    if (d) {\n      const m = d[2] - 1 || 0;\n      const ms = (d[7] || \"0\").substring(0, 3);\n      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);\n    }\n  }\n  return new Date(date);\n};\nfunction useDateFormat(date, formatStr = \"HH:mm:ss\", options = {}) {\n  return computed(() => formatDate(normalizeDate(resolveUnref(date)), resolveUnref(formatStr), options));\n}\n\nfunction useIntervalFn(cb, interval = 1e3, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  let timer = null;\n  const isActive = ref(false);\n  function clean() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    clean();\n  }\n  function resume() {\n    if (unref(interval) <= 0)\n      return;\n    isActive.value = true;\n    if (immediateCallback)\n      cb();\n    clean();\n    timer = setInterval(cb, resolveUnref(interval));\n  }\n  if (immediate && isClient)\n    resume();\n  if (isRef(interval)) {\n    const stopWatch = watch(interval, () => {\n      if (isActive.value && isClient)\n        resume();\n    });\n    tryOnScopeDispose(stopWatch);\n  }\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nvar __defProp$6 = Object.defineProperty;\nvar __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$8 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$8 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$6 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$8.call(b, prop))\n      __defNormalProp$6(a, prop, b[prop]);\n  if (__getOwnPropSymbols$8)\n    for (var prop of __getOwnPropSymbols$8(b)) {\n      if (__propIsEnum$8.call(b, prop))\n        __defNormalProp$6(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useInterval(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    immediate = true,\n    callback\n  } = options;\n  const counter = ref(0);\n  const update = () => counter.value += 1;\n  const controls = useIntervalFn(callback ? () => {\n    update();\n    callback(counter.value);\n  } : update, interval, { immediate });\n  if (exposeControls) {\n    return __spreadValues$6({\n      counter\n    }, controls);\n  } else {\n    return counter;\n  }\n}\n\nfunction useLastChanged(source, options = {}) {\n  var _a;\n  const ms = ref((_a = options.initialValue) != null ? _a : null);\n  watch(source, () => ms.value = timestamp(), options);\n  return ms;\n}\n\nfunction useTimeoutFn(cb, interval, options = {}) {\n  const {\n    immediate = true\n  } = options;\n  const isPending = ref(false);\n  let timer = null;\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function stop() {\n    isPending.value = false;\n    clear();\n  }\n  function start(...args) {\n    clear();\n    isPending.value = true;\n    timer = setTimeout(() => {\n      isPending.value = false;\n      timer = null;\n      cb(...args);\n    }, resolveUnref(interval));\n  }\n  if (immediate) {\n    isPending.value = true;\n    if (isClient)\n      start();\n  }\n  tryOnScopeDispose(stop);\n  return {\n    isPending,\n    start,\n    stop\n  };\n}\n\nvar __defProp$5 = Object.defineProperty;\nvar __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$7 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$7 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$5 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$7.call(b, prop))\n      __defNormalProp$5(a, prop, b[prop]);\n  if (__getOwnPropSymbols$7)\n    for (var prop of __getOwnPropSymbols$7(b)) {\n      if (__propIsEnum$7.call(b, prop))\n        __defNormalProp$5(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useTimeout(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    callback\n  } = options;\n  const controls = useTimeoutFn(callback != null ? callback : noop, interval, options);\n  const ready = computed(() => !controls.isPending.value);\n  if (exposeControls) {\n    return __spreadValues$5({\n      ready\n    }, controls);\n  } else {\n    return ready;\n  }\n}\n\nfunction useToNumber(value, options = {}) {\n  const {\n    method = \"parseFloat\",\n    radix,\n    nanToZero\n  } = options;\n  return computed(() => {\n    let resolved = resolveUnref(value);\n    if (typeof resolved === \"string\")\n      resolved = Number[method](resolved, radix);\n    if (nanToZero && isNaN(resolved))\n      resolved = 0;\n    return resolved;\n  });\n}\n\nfunction useToString(value) {\n  return computed(() => `${resolveUnref(value)}`);\n}\n\nfunction useToggle(initialValue = false, options = {}) {\n  const {\n    truthyValue = true,\n    falsyValue = false\n  } = options;\n  const valueIsRef = isRef(initialValue);\n  const _value = ref(initialValue);\n  function toggle(value) {\n    if (arguments.length) {\n      _value.value = value;\n      return _value.value;\n    } else {\n      const truthy = resolveUnref(truthyValue);\n      _value.value = _value.value === truthy ? resolveUnref(falsyValue) : truthy;\n      return _value.value;\n    }\n  }\n  if (valueIsRef)\n    return toggle;\n  else\n    return [_value, toggle];\n}\n\nfunction watchArray(source, cb, options) {\n  let oldList = (options == null ? void 0 : options.immediate) ? [] : [\n    ...source instanceof Function ? source() : Array.isArray(source) ? source : unref(source)\n  ];\n  return watch(source, (newList, _, onCleanup) => {\n    const oldListRemains = new Array(oldList.length);\n    const added = [];\n    for (const obj of newList) {\n      let found = false;\n      for (let i = 0; i < oldList.length; i++) {\n        if (!oldListRemains[i] && obj === oldList[i]) {\n          oldListRemains[i] = true;\n          found = true;\n          break;\n        }\n      }\n      if (!found)\n        added.push(obj);\n    }\n    const removed = oldList.filter((_2, i) => !oldListRemains[i]);\n    cb(newList, oldList, added, removed, onCleanup);\n    oldList = [...newList];\n  }, options);\n}\n\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\nvar __objRest$5 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$6.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$6.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchWithFilter(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter = bypassFilter\n  } = _a, watchOptions = __objRest$5(_a, [\n    \"eventFilter\"\n  ]);\n  return watch(source, createFilterWrapper(eventFilter, cb), watchOptions);\n}\n\nvar __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$5 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$5 = Object.prototype.propertyIsEnumerable;\nvar __objRest$4 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$5.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$5)\n    for (var prop of __getOwnPropSymbols$5(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$5.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchAtMost(source, cb, options) {\n  const _a = options, {\n    count\n  } = _a, watchOptions = __objRest$4(_a, [\n    \"count\"\n  ]);\n  const current = ref(0);\n  const stop = watchWithFilter(source, (...args) => {\n    current.value += 1;\n    if (current.value >= resolveUnref(count))\n      nextTick(() => stop());\n    cb(...args);\n  }, watchOptions);\n  return { count: current, stop };\n}\n\nvar __defProp$4 = Object.defineProperty;\nvar __defProps$4 = Object.defineProperties;\nvar __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$4 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$4 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$4 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$4.call(b, prop))\n      __defNormalProp$4(a, prop, b[prop]);\n  if (__getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(b)) {\n      if (__propIsEnum$4.call(b, prop))\n        __defNormalProp$4(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));\nvar __objRest$3 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$4.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$4.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchDebounced(source, cb, options = {}) {\n  const _a = options, {\n    debounce = 0,\n    maxWait = void 0\n  } = _a, watchOptions = __objRest$3(_a, [\n    \"debounce\",\n    \"maxWait\"\n  ]);\n  return watchWithFilter(source, cb, __spreadProps$4(__spreadValues$4({}, watchOptions), {\n    eventFilter: debounceFilter(debounce, { maxWait })\n  }));\n}\n\nvar __defProp$3 = Object.defineProperty;\nvar __defProps$3 = Object.defineProperties;\nvar __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$3 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$3 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$3 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$3.call(b, prop))\n      __defNormalProp$3(a, prop, b[prop]);\n  if (__getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(b)) {\n      if (__propIsEnum$3.call(b, prop))\n        __defNormalProp$3(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));\nvar __objRest$2 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$3.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$3.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchIgnorable(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter = bypassFilter\n  } = _a, watchOptions = __objRest$2(_a, [\n    \"eventFilter\"\n  ]);\n  const filteredCb = createFilterWrapper(eventFilter, cb);\n  let ignoreUpdates;\n  let ignorePrevAsyncUpdates;\n  let stop;\n  if (watchOptions.flush === \"sync\") {\n    const ignore = ref(false);\n    ignorePrevAsyncUpdates = () => {\n    };\n    ignoreUpdates = (updater) => {\n      ignore.value = true;\n      updater();\n      ignore.value = false;\n    };\n    stop = watch(source, (...args) => {\n      if (!ignore.value)\n        filteredCb(...args);\n    }, watchOptions);\n  } else {\n    const disposables = [];\n    const ignoreCounter = ref(0);\n    const syncCounter = ref(0);\n    ignorePrevAsyncUpdates = () => {\n      ignoreCounter.value = syncCounter.value;\n    };\n    disposables.push(watch(source, () => {\n      syncCounter.value++;\n    }, __spreadProps$3(__spreadValues$3({}, watchOptions), { flush: \"sync\" })));\n    ignoreUpdates = (updater) => {\n      const syncCounterPrev = syncCounter.value;\n      updater();\n      ignoreCounter.value += syncCounter.value - syncCounterPrev;\n    };\n    disposables.push(watch(source, (...args) => {\n      const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\n      ignoreCounter.value = 0;\n      syncCounter.value = 0;\n      if (ignore)\n        return;\n      filteredCb(...args);\n    }, watchOptions));\n    stop = () => {\n      disposables.forEach((fn) => fn());\n    };\n  }\n  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\n}\n\nfunction watchOnce(source, cb, options) {\n  const stop = watch(source, (...args) => {\n    nextTick(() => stop());\n    return cb(...args);\n  }, options);\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __defProps$2 = Object.defineProperties;\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$2.call(b, prop))\n      __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b)) {\n      if (__propIsEnum$2.call(b, prop))\n        __defNormalProp$2(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\nvar __objRest$1 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchPausable(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter: filter\n  } = _a, watchOptions = __objRest$1(_a, [\n    \"eventFilter\"\n  ]);\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);\n  const stop = watchWithFilter(source, cb, __spreadProps$2(__spreadValues$2({}, watchOptions), {\n    eventFilter\n  }));\n  return { stop, pause, resume, isActive };\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __defProps$1 = Object.defineProperties;\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchThrottled(source, cb, options = {}) {\n  const _a = options, {\n    throttle = 0,\n    trailing = true,\n    leading = true\n  } = _a, watchOptions = __objRest(_a, [\n    \"throttle\",\n    \"trailing\",\n    \"leading\"\n  ]);\n  return watchWithFilter(source, cb, __spreadProps$1(__spreadValues$1({}, watchOptions), {\n    eventFilter: throttleFilter(throttle, trailing, leading)\n  }));\n}\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction watchTriggerable(source, cb, options = {}) {\n  let cleanupFn;\n  function onEffect() {\n    if (!cleanupFn)\n      return;\n    const fn = cleanupFn;\n    cleanupFn = void 0;\n    fn();\n  }\n  function onCleanup(callback) {\n    cleanupFn = callback;\n  }\n  const _cb = (value, oldValue) => {\n    onEffect();\n    return cb(value, oldValue, onCleanup);\n  };\n  const res = watchIgnorable(source, _cb, options);\n  const { ignoreUpdates } = res;\n  const trigger = () => {\n    let res2;\n    ignoreUpdates(() => {\n      res2 = _cb(getWatchSources(source), getOldValue(source));\n    });\n    return res2;\n  };\n  return __spreadProps(__spreadValues({}, res), {\n    trigger\n  });\n}\nfunction getWatchSources(sources) {\n  if (isReactive(sources))\n    return sources;\n  if (Array.isArray(sources))\n    return sources.map((item) => getOneWatchSource(item));\n  return getOneWatchSource(sources);\n}\nfunction getOneWatchSource(source) {\n  return typeof source === \"function\" ? source() : unref(source);\n}\nfunction getOldValue(source) {\n  return Array.isArray(source) ? source.map(() => void 0) : void 0;\n}\n\nfunction whenever(source, cb, options) {\n  return watch(source, (v, ov, onInvalidate) => {\n    if (v)\n      cb(v, ov, onInvalidate);\n  }, options);\n}\n\nexport { __onlyVue3, assert, refAutoReset as autoResetRef, bypassFilter, clamp, computedEager, computedWithControl, containsProp, computedWithControl as controlledComputed, controlledRef, createEventHook, createFilterWrapper, createGlobalState, createInjectionState, reactify as createReactiveFn, createSharedComposable, createSingletonPromise, debounceFilter, refDebounced as debouncedRef, watchDebounced as debouncedWatch, directiveHooks, computedEager as eagerComputed, extendRef, formatDate, get, hasOwn, identity, watchIgnorable as ignorableWatch, increaseWithUnit, invoke, isBoolean, isClient, isDef, isDefined, isFunction, isIOS, isNumber, isObject, isString, isWindow, makeDestructurable, noop, normalizeDate, now, objectPick, pausableFilter, watchPausable as pausableWatch, promiseTimeout, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, syncRef, syncRefs, throttleFilter, refThrottled as throttledRef, watchThrottled as throttledWatch, timestamp, toReactive, toRefs, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, until, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useCounter, useDateFormat, refDebounced as useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, refThrottled as useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToNumber, useToString, useToggle, watchArray, watchAtMost, watchDebounced, watchIgnorable, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever };\n","import { noop, resolveUnref, isClient, isString, tryOnScopeDispose, tryOnMounted, computedWithControl, promiseTimeout, isFunction, resolveRef, increaseWithUnit, useTimeoutFn, pausableWatch, createEventHook, timestamp, pausableFilter, watchIgnorable, debounceFilter, createFilterWrapper, bypassFilter, createSingletonPromise, toRefs, containsProp, until, hasOwn, isDef, throttleFilter, useDebounceFn, useThrottleFn, isObject, isNumber, useIntervalFn, clamp, syncRef, objectPick, tryOnUnmounted, isIOS, watchWithFilter, identity } from '@vueuse/shared';\nexport * from '@vueuse/shared';\nimport { isRef, ref, watchEffect, computed, inject, unref, watch, getCurrentInstance, customRef, onUpdated, reactive, shallowRef, onMounted, markRaw, getCurrentScope, readonly, nextTick, isVue2, set, del, onBeforeUpdate } from 'vue-demi';\n\nfunction computedAsync(evaluationCallback, initialState, optionsOrRef) {\n  let options;\n  if (isRef(optionsOrRef)) {\n    options = {\n      evaluating: optionsOrRef\n    };\n  } else {\n    options = optionsOrRef || {};\n  }\n  const {\n    lazy = false,\n    evaluating = void 0,\n    onError = noop\n  } = options;\n  const started = ref(!lazy);\n  const current = ref(initialState);\n  let counter = 0;\n  watchEffect(async (onInvalidate) => {\n    if (!started.value)\n      return;\n    counter++;\n    const counterAtBeginning = counter;\n    let hasFinished = false;\n    if (evaluating) {\n      Promise.resolve().then(() => {\n        evaluating.value = true;\n      });\n    }\n    try {\n      const result = await evaluationCallback((cancelCallback) => {\n        onInvalidate(() => {\n          if (evaluating)\n            evaluating.value = false;\n          if (!hasFinished)\n            cancelCallback();\n        });\n      });\n      if (counterAtBeginning === counter)\n        current.value = result;\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (evaluating && counterAtBeginning === counter)\n        evaluating.value = false;\n      hasFinished = true;\n    }\n  });\n  if (lazy) {\n    return computed(() => {\n      started.value = true;\n      return current.value;\n    });\n  } else {\n    return current;\n  }\n}\n\nfunction computedInject(key, options, defaultSource, treatDefaultAsFactory) {\n  let source = inject(key);\n  if (defaultSource)\n    source = inject(key, defaultSource);\n  if (treatDefaultAsFactory)\n    source = inject(key, defaultSource, treatDefaultAsFactory);\n  if (typeof options === \"function\") {\n    return computed((ctx) => options(source, ctx));\n  } else {\n    return computed({\n      get: (ctx) => options.get(source, ctx),\n      set: options.set\n    });\n  }\n}\n\nconst createUnrefFn = (fn) => {\n  return function(...args) {\n    return fn.apply(this, args.map((i) => unref(i)));\n  };\n};\n\nfunction unrefElement(elRef) {\n  var _a;\n  const plain = resolveUnref(elRef);\n  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;\n}\n\nconst defaultWindow = isClient ? window : void 0;\nconst defaultDocument = isClient ? window.document : void 0;\nconst defaultNavigator = isClient ? window.navigator : void 0;\nconst defaultLocation = isClient ? window.location : void 0;\n\nfunction useEventListener(...args) {\n  let target;\n  let event;\n  let listener;\n  let options;\n  if (isString(args[0])) {\n    [event, listener, options] = args;\n    target = defaultWindow;\n  } else {\n    [target, event, listener, options] = args;\n  }\n  if (!target)\n    return noop;\n  let cleanup = noop;\n  const stopWatch = watch(() => unrefElement(target), (el) => {\n    cleanup();\n    if (!el)\n      return;\n    el.addEventListener(event, listener, options);\n    cleanup = () => {\n      el.removeEventListener(event, listener, options);\n      cleanup = noop;\n    };\n  }, { immediate: true, flush: \"post\" });\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(stop);\n  return stop;\n}\n\nfunction onClickOutside(target, handler, options = {}) {\n  const { window = defaultWindow, ignore, capture = true, detectIframe = false } = options;\n  if (!window)\n    return;\n  const shouldListen = ref(true);\n  let fallback;\n  const listener = (event) => {\n    window.clearTimeout(fallback);\n    const el = unrefElement(target);\n    if (!el || el === event.target || event.composedPath().includes(el) || !shouldListen.value)\n      return;\n    handler(event);\n  };\n  const shouldIgnore = (event) => {\n    return ignore && ignore.some((target2) => {\n      const el = unrefElement(target2);\n      return el && (event.target === el || event.composedPath().includes(el));\n    });\n  };\n  const cleanup = [\n    useEventListener(window, \"click\", listener, { passive: true, capture }),\n    useEventListener(window, \"pointerdown\", (e) => {\n      const el = unrefElement(target);\n      shouldListen.value = !!el && !e.composedPath().includes(el) && !shouldIgnore(e);\n    }, { passive: true }),\n    useEventListener(window, \"pointerup\", (e) => {\n      if (e.button === 0) {\n        const path = e.composedPath();\n        e.composedPath = () => path;\n        fallback = window.setTimeout(() => listener(e), 50);\n      }\n    }, { passive: true }),\n    detectIframe && useEventListener(window, \"blur\", (event) => {\n      var _a;\n      const el = unrefElement(target);\n      if (((_a = document.activeElement) == null ? void 0 : _a.tagName) === \"IFRAME\" && !(el == null ? void 0 : el.contains(document.activeElement)))\n        handler(event);\n    })\n  ].filter(Boolean);\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nvar __defProp$m = Object.defineProperty;\nvar __defProps$9 = Object.defineProperties;\nvar __getOwnPropDescs$9 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$o = Object.getOwnPropertySymbols;\nvar __hasOwnProp$o = Object.prototype.hasOwnProperty;\nvar __propIsEnum$o = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$m = (obj, key, value) => key in obj ? __defProp$m(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$m = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$o.call(b, prop))\n      __defNormalProp$m(a, prop, b[prop]);\n  if (__getOwnPropSymbols$o)\n    for (var prop of __getOwnPropSymbols$o(b)) {\n      if (__propIsEnum$o.call(b, prop))\n        __defNormalProp$m(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$9 = (a, b) => __defProps$9(a, __getOwnPropDescs$9(b));\nconst createKeyPredicate = (keyFilter) => {\n  if (typeof keyFilter === \"function\")\n    return keyFilter;\n  else if (typeof keyFilter === \"string\")\n    return (event) => event.key === keyFilter;\n  else if (Array.isArray(keyFilter))\n    return (event) => keyFilter.includes(event.key);\n  return () => true;\n};\nfunction onKeyStroke(...args) {\n  let key;\n  let handler;\n  let options = {};\n  if (args.length === 3) {\n    key = args[0];\n    handler = args[1];\n    options = args[2];\n  } else if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      key = true;\n      handler = args[0];\n      options = args[1];\n    } else {\n      key = args[0];\n      handler = args[1];\n    }\n  } else {\n    key = true;\n    handler = args[0];\n  }\n  const { target = defaultWindow, eventName = \"keydown\", passive = false } = options;\n  const predicate = createKeyPredicate(key);\n  const listener = (e) => {\n    if (predicate(e))\n      handler(e);\n  };\n  return useEventListener(target, eventName, listener, passive);\n}\nfunction onKeyDown(key, handler, options = {}) {\n  return onKeyStroke(key, handler, __spreadProps$9(__spreadValues$m({}, options), { eventName: \"keydown\" }));\n}\nfunction onKeyPressed(key, handler, options = {}) {\n  return onKeyStroke(key, handler, __spreadProps$9(__spreadValues$m({}, options), { eventName: \"keypress\" }));\n}\nfunction onKeyUp(key, handler, options = {}) {\n  return onKeyStroke(key, handler, __spreadProps$9(__spreadValues$m({}, options), { eventName: \"keyup\" }));\n}\n\nconst DEFAULT_DELAY = 500;\nfunction onLongPress(target, handler, options) {\n  var _a, _b;\n  const elementRef = computed(() => unrefElement(target));\n  let timeout;\n  function clear() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = void 0;\n    }\n  }\n  function onDown(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    clear();\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    timeout = setTimeout(() => handler(ev), (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY);\n  }\n  const listenerOptions = {\n    capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,\n    once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once\n  };\n  useEventListener(elementRef, \"pointerdown\", onDown, listenerOptions);\n  useEventListener(elementRef, \"pointerup\", clear, listenerOptions);\n  useEventListener(elementRef, \"pointerleave\", clear, listenerOptions);\n}\n\nconst isFocusedElementEditable = () => {\n  const { activeElement, body } = document;\n  if (!activeElement)\n    return false;\n  if (activeElement === body)\n    return false;\n  switch (activeElement.tagName) {\n    case \"INPUT\":\n    case \"TEXTAREA\":\n      return true;\n  }\n  return activeElement.hasAttribute(\"contenteditable\");\n};\nconst isTypedCharValid = ({\n  keyCode,\n  metaKey,\n  ctrlKey,\n  altKey\n}) => {\n  if (metaKey || ctrlKey || altKey)\n    return false;\n  if (keyCode >= 48 && keyCode <= 57 || keyCode >= 96 && keyCode <= 105)\n    return true;\n  if (keyCode >= 65 && keyCode <= 90)\n    return true;\n  return false;\n};\nfunction onStartTyping(callback, options = {}) {\n  const { document: document2 = defaultDocument } = options;\n  const keydown = (event) => {\n    !isFocusedElementEditable() && isTypedCharValid(event) && callback(event);\n  };\n  if (document2)\n    useEventListener(document2, \"keydown\", keydown, { passive: true });\n}\n\nfunction templateRef(key, initialValue = null) {\n  const instance = getCurrentInstance();\n  let _trigger = () => {\n  };\n  const element = customRef((track, trigger) => {\n    _trigger = trigger;\n    return {\n      get() {\n        var _a, _b;\n        track();\n        return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;\n      },\n      set() {\n      }\n    };\n  });\n  tryOnMounted(_trigger);\n  onUpdated(_trigger);\n  return element;\n}\n\nfunction useActiveElement(options = {}) {\n  const { window = defaultWindow } = options;\n  const activeElement = computedWithControl(() => null, () => window == null ? void 0 : window.document.activeElement);\n  if (window) {\n    useEventListener(window, \"blur\", activeElement.trigger, true);\n    useEventListener(window, \"focus\", activeElement.trigger, true);\n  }\n  return activeElement;\n}\n\nfunction useAsyncQueue(tasks, options = {}) {\n  const {\n    interrupt = true,\n    onError = noop,\n    onFinished = noop\n  } = options;\n  const promiseState = {\n    pending: \"pending\",\n    rejected: \"rejected\",\n    fulfilled: \"fulfilled\"\n  };\n  const initialResult = Array.from(new Array(tasks.length), () => ({ state: promiseState.pending, data: null }));\n  const result = reactive(initialResult);\n  const activeIndex = ref(-1);\n  if (!tasks || tasks.length === 0) {\n    onFinished();\n    return {\n      activeIndex,\n      result\n    };\n  }\n  function updateResult(state, res) {\n    activeIndex.value++;\n    result[activeIndex.value].data = res;\n    result[activeIndex.value].state = state;\n  }\n  tasks.reduce((prev, curr) => {\n    return prev.then((prevRes) => {\n      var _a;\n      if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {\n        onFinished();\n        return;\n      }\n      return curr(prevRes).then((currentRes) => {\n        updateResult(promiseState.fulfilled, currentRes);\n        activeIndex.value === tasks.length - 1 && onFinished();\n        return currentRes;\n      });\n    }).catch((e) => {\n      updateResult(promiseState.rejected, e);\n      onError();\n      return e;\n    });\n  }, Promise.resolve());\n  return {\n    activeIndex,\n    result\n  };\n}\n\nfunction useAsyncState(promise, initialState, options) {\n  const {\n    immediate = true,\n    delay = 0,\n    onError = noop,\n    resetOnExecute = true,\n    shallow = true,\n    throwError\n  } = options != null ? options : {};\n  const state = shallow ? shallowRef(initialState) : ref(initialState);\n  const isReady = ref(false);\n  const isLoading = ref(false);\n  const error = ref(void 0);\n  async function execute(delay2 = 0, ...args) {\n    if (resetOnExecute)\n      state.value = initialState;\n    error.value = void 0;\n    isReady.value = false;\n    isLoading.value = true;\n    if (delay2 > 0)\n      await promiseTimeout(delay2);\n    const _promise = typeof promise === \"function\" ? promise(...args) : promise;\n    try {\n      const data = await _promise;\n      state.value = data;\n      isReady.value = true;\n    } catch (e) {\n      error.value = e;\n      onError(e);\n      if (throwError)\n        throw error;\n    } finally {\n      isLoading.value = false;\n    }\n    return state.value;\n  }\n  if (immediate)\n    execute(delay);\n  return {\n    state,\n    isReady,\n    isLoading,\n    error,\n    execute\n  };\n}\n\nconst defaults = {\n  array: (v) => JSON.stringify(v),\n  object: (v) => JSON.stringify(v),\n  set: (v) => JSON.stringify(Array.from(v)),\n  map: (v) => JSON.stringify(Object.fromEntries(v)),\n  null: () => \"\"\n};\nfunction getDefaultSerialization(target) {\n  if (!target)\n    return defaults.null;\n  if (target instanceof Map)\n    return defaults.map;\n  else if (target instanceof Set)\n    return defaults.set;\n  else if (Array.isArray(target))\n    return defaults.array;\n  else\n    return defaults.object;\n}\n\nfunction useBase64(target, options) {\n  const base64 = ref(\"\");\n  const promise = ref();\n  function execute() {\n    if (!isClient)\n      return;\n    promise.value = new Promise((resolve, reject) => {\n      try {\n        const _target = resolveUnref(target);\n        if (_target == null) {\n          resolve(\"\");\n        } else if (typeof _target === \"string\") {\n          resolve(blobToBase64(new Blob([_target], { type: \"text/plain\" })));\n        } else if (_target instanceof Blob) {\n          resolve(blobToBase64(_target));\n        } else if (_target instanceof ArrayBuffer) {\n          resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));\n        } else if (_target instanceof HTMLCanvasElement) {\n          resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n        } else if (_target instanceof HTMLImageElement) {\n          const img = _target.cloneNode(false);\n          img.crossOrigin = \"Anonymous\";\n          imgLoaded(img).then(() => {\n            const canvas = document.createElement(\"canvas\");\n            const ctx = canvas.getContext(\"2d\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n          }).catch(reject);\n        } else if (typeof _target === \"object\") {\n          const _serializeFn = (options == null ? void 0 : options.serializer) || getDefaultSerialization(_target);\n          const serialized = _serializeFn(_target);\n          return resolve(blobToBase64(new Blob([serialized], { type: \"application/json\" })));\n        } else {\n          reject(new Error(\"target is unsupported types\"));\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n    promise.value.then((res) => base64.value = res);\n    return promise.value;\n  }\n  if (isRef(target) || isFunction(target))\n    watch(target, execute, { immediate: true });\n  else\n    execute();\n  return {\n    base64,\n    promise,\n    execute\n  };\n}\nfunction imgLoaded(img) {\n  return new Promise((resolve, reject) => {\n    if (!img.complete) {\n      img.onload = () => {\n        resolve();\n      };\n      img.onerror = reject;\n    } else {\n      resolve();\n    }\n  });\n}\nfunction blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onload = (e) => {\n      resolve(e.target.result);\n    };\n    fr.onerror = reject;\n    fr.readAsDataURL(blob);\n  });\n}\n\nfunction useSupported(callback, sync = false) {\n  const isSupported = ref();\n  const update = () => isSupported.value = Boolean(callback());\n  update();\n  tryOnMounted(update, sync);\n  return isSupported;\n}\n\nfunction useBattery({ navigator = defaultNavigator } = {}) {\n  const events = [\"chargingchange\", \"chargingtimechange\", \"dischargingtimechange\", \"levelchange\"];\n  const isSupported = useSupported(() => navigator && \"getBattery\" in navigator);\n  const charging = ref(false);\n  const chargingTime = ref(0);\n  const dischargingTime = ref(0);\n  const level = ref(1);\n  let battery;\n  function updateBatteryInfo() {\n    charging.value = this.charging;\n    chargingTime.value = this.chargingTime || 0;\n    dischargingTime.value = this.dischargingTime || 0;\n    level.value = this.level;\n  }\n  if (isSupported.value) {\n    navigator.getBattery().then((_battery) => {\n      battery = _battery;\n      updateBatteryInfo.call(battery);\n      for (const event of events)\n        useEventListener(battery, event, updateBatteryInfo, { passive: true });\n    });\n  }\n  return {\n    isSupported,\n    charging,\n    chargingTime,\n    dischargingTime,\n    level\n  };\n}\n\nfunction useBluetooth(options) {\n  let {\n    acceptAllDevices = false\n  } = options || {};\n  const {\n    filters = void 0,\n    optionalServices = void 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => navigator && \"bluetooth\" in navigator);\n  const device = ref(void 0);\n  const error = ref(null);\n  watch(device, () => {\n    connectToBluetoothGATTServer();\n  });\n  async function requestDevice() {\n    if (!isSupported.value)\n      return;\n    error.value = null;\n    if (filters && filters.length > 0)\n      acceptAllDevices = false;\n    try {\n      device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({\n        acceptAllDevices,\n        filters,\n        optionalServices\n      }));\n    } catch (err) {\n      error.value = err;\n    }\n  }\n  const server = ref();\n  const isConnected = computed(() => {\n    var _a;\n    return ((_a = server.value) == null ? void 0 : _a.connected) || false;\n  });\n  async function connectToBluetoothGATTServer() {\n    error.value = null;\n    if (device.value && device.value.gatt) {\n      device.value.addEventListener(\"gattserverdisconnected\", () => {\n      });\n      try {\n        server.value = await device.value.gatt.connect();\n      } catch (err) {\n        error.value = err;\n      }\n    }\n  }\n  tryOnMounted(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.connect();\n  });\n  tryOnScopeDispose(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.disconnect();\n  });\n  return {\n    isSupported,\n    isConnected,\n    device,\n    requestDevice,\n    server,\n    error\n  };\n}\n\nfunction useMediaQuery(query, options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"matchMedia\" in window && typeof window.matchMedia === \"function\");\n  let mediaQuery;\n  const matches = ref(false);\n  const cleanup = () => {\n    if (!mediaQuery)\n      return;\n    if (\"removeEventListener\" in mediaQuery)\n      mediaQuery.removeEventListener(\"change\", update);\n    else\n      mediaQuery.removeListener(update);\n  };\n  const update = () => {\n    if (!isSupported.value)\n      return;\n    cleanup();\n    mediaQuery = window.matchMedia(resolveRef(query).value);\n    matches.value = mediaQuery.matches;\n    if (\"addEventListener\" in mediaQuery)\n      mediaQuery.addEventListener(\"change\", update);\n    else\n      mediaQuery.addListener(update);\n  };\n  watchEffect(update);\n  tryOnScopeDispose(() => cleanup());\n  return matches;\n}\n\nconst breakpointsTailwind = {\n  \"sm\": 640,\n  \"md\": 768,\n  \"lg\": 1024,\n  \"xl\": 1280,\n  \"2xl\": 1536\n};\nconst breakpointsBootstrapV5 = {\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n};\nconst breakpointsVuetify = {\n  xs: 600,\n  sm: 960,\n  md: 1264,\n  lg: 1904\n};\nconst breakpointsAntDesign = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600\n};\nconst breakpointsQuasar = {\n  xs: 600,\n  sm: 1024,\n  md: 1440,\n  lg: 1920\n};\nconst breakpointsSematic = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  laptop: 1024,\n  laptopL: 1440,\n  desktop4K: 2560\n};\n\nvar __defProp$l = Object.defineProperty;\nvar __getOwnPropSymbols$n = Object.getOwnPropertySymbols;\nvar __hasOwnProp$n = Object.prototype.hasOwnProperty;\nvar __propIsEnum$n = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$l = (obj, key, value) => key in obj ? __defProp$l(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$l = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$n.call(b, prop))\n      __defNormalProp$l(a, prop, b[prop]);\n  if (__getOwnPropSymbols$n)\n    for (var prop of __getOwnPropSymbols$n(b)) {\n      if (__propIsEnum$n.call(b, prop))\n        __defNormalProp$l(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useBreakpoints(breakpoints, options = {}) {\n  function getValue(k, delta) {\n    let v = breakpoints[k];\n    if (delta != null)\n      v = increaseWithUnit(v, delta);\n    if (typeof v === \"number\")\n      v = `${v}px`;\n    return v;\n  }\n  const { window = defaultWindow } = options;\n  function match(query) {\n    if (!window)\n      return false;\n    return window.matchMedia(query).matches;\n  }\n  const greaterOrEqual = (k) => {\n    return useMediaQuery(`(min-width: ${getValue(k)})`, options);\n  };\n  const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {\n    Object.defineProperty(shortcuts, k, {\n      get: () => greaterOrEqual(k),\n      enumerable: true,\n      configurable: true\n    });\n    return shortcuts;\n  }, {});\n  return __spreadValues$l({\n    greater(k) {\n      return useMediaQuery(`(min-width: ${getValue(k, 0.1)})`, options);\n    },\n    greaterOrEqual,\n    smaller(k) {\n      return useMediaQuery(`(max-width: ${getValue(k, -0.1)})`, options);\n    },\n    smallerOrEqual(k) {\n      return useMediaQuery(`(max-width: ${getValue(k)})`, options);\n    },\n    between(a, b) {\n      return useMediaQuery(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);\n    },\n    isGreater(k) {\n      return match(`(min-width: ${getValue(k, 0.1)})`);\n    },\n    isGreaterOrEqual(k) {\n      return match(`(min-width: ${getValue(k)})`);\n    },\n    isSmaller(k) {\n      return match(`(max-width: ${getValue(k, -0.1)})`);\n    },\n    isSmallerOrEqual(k) {\n      return match(`(max-width: ${getValue(k)})`);\n    },\n    isInBetween(a, b) {\n      return match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);\n    }\n  }, shortcutMethods);\n}\n\nconst useBroadcastChannel = (options) => {\n  const {\n    name,\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"BroadcastChannel\" in window);\n  const isClosed = ref(false);\n  const channel = ref();\n  const data = ref();\n  const error = ref(null);\n  const post = (data2) => {\n    if (channel.value)\n      channel.value.postMessage(data2);\n  };\n  const close = () => {\n    if (channel.value)\n      channel.value.close();\n    isClosed.value = true;\n  };\n  if (isSupported.value) {\n    tryOnMounted(() => {\n      error.value = null;\n      channel.value = new BroadcastChannel(name);\n      channel.value.addEventListener(\"message\", (e) => {\n        data.value = e.data;\n      }, { passive: true });\n      channel.value.addEventListener(\"messageerror\", (e) => {\n        error.value = e;\n      }, { passive: true });\n      channel.value.addEventListener(\"close\", () => {\n        isClosed.value = true;\n      });\n    });\n  }\n  tryOnScopeDispose(() => {\n    close();\n  });\n  return {\n    isSupported,\n    channel,\n    data,\n    post,\n    close,\n    error,\n    isClosed\n  };\n};\n\nfunction useBrowserLocation({ window = defaultWindow } = {}) {\n  const buildState = (trigger) => {\n    const { state: state2, length } = (window == null ? void 0 : window.history) || {};\n    const { hash, host, hostname, href, origin, pathname, port, protocol, search } = (window == null ? void 0 : window.location) || {};\n    return {\n      trigger,\n      state: state2,\n      length,\n      hash,\n      host,\n      hostname,\n      href,\n      origin,\n      pathname,\n      port,\n      protocol,\n      search\n    };\n  };\n  const state = ref(buildState(\"load\"));\n  if (window) {\n    useEventListener(window, \"popstate\", () => state.value = buildState(\"popstate\"), { passive: true });\n    useEventListener(window, \"hashchange\", () => state.value = buildState(\"hashchange\"), { passive: true });\n  }\n  return state;\n}\n\nfunction useCached(refValue, comparator = (a, b) => a === b, watchOptions) {\n  const cachedValue = ref(refValue.value);\n  watch(() => refValue.value, (value) => {\n    if (!comparator(value, cachedValue.value))\n      cachedValue.value = value;\n  }, watchOptions);\n  return cachedValue;\n}\n\nfunction useClipboard(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    read = false,\n    source,\n    copiedDuring = 1500\n  } = options;\n  const events = [\"copy\", \"cut\"];\n  const isSupported = useSupported(() => navigator && \"clipboard\" in navigator);\n  const text = ref(\"\");\n  const copied = ref(false);\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\n  function updateText() {\n    navigator.clipboard.readText().then((value) => {\n      text.value = value;\n    });\n  }\n  if (isSupported.value && read) {\n    for (const event of events)\n      useEventListener(event, updateText);\n  }\n  async function copy(value = resolveUnref(source)) {\n    if (isSupported.value && value != null) {\n      await navigator.clipboard.writeText(value);\n      text.value = value;\n      copied.value = true;\n      timeout.start();\n    }\n  }\n  return {\n    isSupported,\n    text,\n    copied,\n    copy\n  };\n}\n\nvar __defProp$k = Object.defineProperty;\nvar __defProps$8 = Object.defineProperties;\nvar __getOwnPropDescs$8 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$m = Object.getOwnPropertySymbols;\nvar __hasOwnProp$m = Object.prototype.hasOwnProperty;\nvar __propIsEnum$m = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$k = (obj, key, value) => key in obj ? __defProp$k(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$k = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$m.call(b, prop))\n      __defNormalProp$k(a, prop, b[prop]);\n  if (__getOwnPropSymbols$m)\n    for (var prop of __getOwnPropSymbols$m(b)) {\n      if (__propIsEnum$m.call(b, prop))\n        __defNormalProp$k(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$8 = (a, b) => __defProps$8(a, __getOwnPropDescs$8(b));\nfunction cloneFnJSON(source) {\n  return JSON.parse(JSON.stringify(source));\n}\nfunction useCloned(source, options = {}) {\n  const cloned = ref({});\n  const {\n    manual,\n    clone = cloneFnJSON,\n    deep = true,\n    immediate = true\n  } = options;\n  function sync() {\n    cloned.value = clone(unref(source));\n  }\n  if (!manual && isRef(source)) {\n    watch(source, sync, __spreadProps$8(__spreadValues$k({}, options), {\n      deep,\n      immediate\n    }));\n  } else {\n    sync();\n  }\n  return { cloned, sync };\n}\n\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__vueuse_ssr_handlers__\";\n_global[globalKey] = _global[globalKey] || {};\nconst handlers = _global[globalKey];\nfunction getSSRHandler(key, fallback) {\n  return handlers[key] || fallback;\n}\nfunction setSSRHandler(key, fn) {\n  handlers[key] = fn;\n}\n\nfunction guessSerializerType(rawInit) {\n  return rawInit == null ? \"any\" : rawInit instanceof Set ? \"set\" : rawInit instanceof Map ? \"map\" : rawInit instanceof Date ? \"date\" : typeof rawInit === \"boolean\" ? \"boolean\" : typeof rawInit === \"string\" ? \"string\" : typeof rawInit === \"object\" ? \"object\" : Array.isArray(rawInit) ? \"object\" : !Number.isNaN(rawInit) ? \"number\" : \"any\";\n}\n\nvar __defProp$j = Object.defineProperty;\nvar __getOwnPropSymbols$l = Object.getOwnPropertySymbols;\nvar __hasOwnProp$l = Object.prototype.hasOwnProperty;\nvar __propIsEnum$l = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$j = (obj, key, value) => key in obj ? __defProp$j(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$j = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$l.call(b, prop))\n      __defNormalProp$j(a, prop, b[prop]);\n  if (__getOwnPropSymbols$l)\n    for (var prop of __getOwnPropSymbols$l(b)) {\n      if (__propIsEnum$l.call(b, prop))\n        __defNormalProp$j(a, prop, b[prop]);\n    }\n  return a;\n};\nconst StorageSerializers = {\n  boolean: {\n    read: (v) => v === \"true\",\n    write: (v) => String(v)\n  },\n  object: {\n    read: (v) => JSON.parse(v),\n    write: (v) => JSON.stringify(v)\n  },\n  number: {\n    read: (v) => Number.parseFloat(v),\n    write: (v) => String(v)\n  },\n  any: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  string: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  map: {\n    read: (v) => new Map(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v.entries()))\n  },\n  set: {\n    read: (v) => new Set(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v))\n  },\n  date: {\n    read: (v) => new Date(v),\n    write: (v) => v.toISOString()\n  }\n};\nfunction useStorage(key, defaults, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const data = (shallow ? shallowRef : ref)(defaults);\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  if (!storage)\n    return data;\n  const rawInit = resolveUnref(defaults);\n  const type = guessSerializerType(rawInit);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  const { pause: pauseWatch, resume: resumeWatch } = pausableWatch(data, () => write(data.value), { flush, deep, eventFilter });\n  if (window && listenToStorageChanges)\n    useEventListener(window, \"storage\", update);\n  update();\n  return data;\n  function write(v) {\n    try {\n      if (v == null)\n        storage.removeItem(key);\n      else\n        storage.setItem(key, serializer.write(v));\n    } catch (e) {\n      onError(e);\n    }\n  }\n  function read(event) {\n    if (event && event.key !== key)\n      return;\n    pauseWatch();\n    try {\n      const rawValue = event ? event.newValue : storage.getItem(key);\n      if (rawValue == null) {\n        if (writeDefaults && rawInit !== null)\n          storage.setItem(key, serializer.write(rawInit));\n        return rawInit;\n      } else if (!event && mergeDefaults) {\n        const value = serializer.read(rawValue);\n        if (isFunction(mergeDefaults))\n          return mergeDefaults(value, rawInit);\n        else if (type === \"object\" && !Array.isArray(value))\n          return __spreadValues$j(__spreadValues$j({}, rawInit), value);\n        return value;\n      } else if (typeof rawValue !== \"string\") {\n        return rawValue;\n      } else {\n        return serializer.read(rawValue);\n      }\n    } catch (e) {\n      onError(e);\n    } finally {\n      resumeWatch();\n    }\n  }\n  function update(event) {\n    if (event && event.key !== key)\n      return;\n    data.value = read(event);\n  }\n}\n\nfunction usePreferredDark(options) {\n  return useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n}\n\nvar __defProp$i = Object.defineProperty;\nvar __getOwnPropSymbols$k = Object.getOwnPropertySymbols;\nvar __hasOwnProp$k = Object.prototype.hasOwnProperty;\nvar __propIsEnum$k = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$i = (obj, key, value) => key in obj ? __defProp$i(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$i = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$k.call(b, prop))\n      __defNormalProp$i(a, prop, b[prop]);\n  if (__getOwnPropSymbols$k)\n    for (var prop of __getOwnPropSymbols$k(b)) {\n      if (__propIsEnum$k.call(b, prop))\n        __defNormalProp$i(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useColorMode(options = {}) {\n  const {\n    selector = \"html\",\n    attribute = \"class\",\n    initialValue = \"auto\",\n    window = defaultWindow,\n    storage,\n    storageKey = \"vueuse-color-scheme\",\n    listenToStorageChanges = true,\n    storageRef,\n    emitAuto\n  } = options;\n  const modes = __spreadValues$i({\n    auto: \"\",\n    light: \"light\",\n    dark: \"dark\"\n  }, options.modes || {});\n  const preferredDark = usePreferredDark({ window });\n  const preferredMode = computed(() => preferredDark.value ? \"dark\" : \"light\");\n  const store = storageRef || (storageKey == null ? ref(initialValue) : useStorage(storageKey, initialValue, storage, { window, listenToStorageChanges }));\n  const state = computed({\n    get() {\n      return store.value === \"auto\" && !emitAuto ? preferredMode.value : store.value;\n    },\n    set(v) {\n      store.value = v;\n    }\n  });\n  const updateHTMLAttrs = getSSRHandler(\"updateHTMLAttrs\", (selector2, attribute2, value) => {\n    const el = window == null ? void 0 : window.document.querySelector(selector2);\n    if (!el)\n      return;\n    if (attribute2 === \"class\") {\n      const current = value.split(/\\s/g);\n      Object.values(modes).flatMap((i) => (i || \"\").split(/\\s/g)).filter(Boolean).forEach((v) => {\n        if (current.includes(v))\n          el.classList.add(v);\n        else\n          el.classList.remove(v);\n      });\n    } else {\n      el.setAttribute(attribute2, value);\n    }\n  });\n  function defaultOnChanged(mode) {\n    var _a;\n    const resolvedMode = mode === \"auto\" ? preferredMode.value : mode;\n    updateHTMLAttrs(selector, attribute, (_a = modes[resolvedMode]) != null ? _a : resolvedMode);\n  }\n  function onChanged(mode) {\n    if (options.onChanged)\n      options.onChanged(mode, defaultOnChanged);\n    else\n      defaultOnChanged(mode);\n  }\n  watch(state, onChanged, { flush: \"post\", immediate: true });\n  if (emitAuto)\n    watch(preferredMode, () => onChanged(state.value), { flush: \"post\" });\n  tryOnMounted(() => onChanged(state.value));\n  return state;\n}\n\nfunction useConfirmDialog(revealed = ref(false)) {\n  const confirmHook = createEventHook();\n  const cancelHook = createEventHook();\n  const revealHook = createEventHook();\n  let _resolve = noop;\n  const reveal = (data) => {\n    revealHook.trigger(data);\n    revealed.value = true;\n    return new Promise((resolve) => {\n      _resolve = resolve;\n    });\n  };\n  const confirm = (data) => {\n    revealed.value = false;\n    confirmHook.trigger(data);\n    _resolve({ data, isCanceled: false });\n  };\n  const cancel = (data) => {\n    revealed.value = false;\n    cancelHook.trigger(data);\n    _resolve({ data, isCanceled: true });\n  };\n  return {\n    isRevealed: computed(() => revealed.value),\n    reveal,\n    confirm,\n    cancel,\n    onReveal: revealHook.on,\n    onConfirm: confirmHook.on,\n    onCancel: cancelHook.on\n  };\n}\n\nfunction useCssVar(prop, target, { window = defaultWindow, initialValue = \"\" } = {}) {\n  const variable = ref(initialValue);\n  const elRef = computed(() => {\n    var _a;\n    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);\n  });\n  watch([elRef, () => resolveUnref(prop)], ([el, prop2]) => {\n    var _a;\n    if (el && window) {\n      const value = (_a = window.getComputedStyle(el).getPropertyValue(prop2)) == null ? void 0 : _a.trim();\n      variable.value = value || initialValue;\n    }\n  }, { immediate: true });\n  watch(variable, (val) => {\n    var _a;\n    if ((_a = elRef.value) == null ? void 0 : _a.style)\n      elRef.value.style.setProperty(resolveUnref(prop), val);\n  });\n  return variable;\n}\n\nfunction useCurrentElement() {\n  const vm = getCurrentInstance();\n  const currentElement = computedWithControl(() => null, () => vm.proxy.$el);\n  onUpdated(currentElement.trigger);\n  onMounted(currentElement.trigger);\n  return currentElement;\n}\n\nfunction useCycleList(list, options) {\n  var _a;\n  const state = shallowRef((_a = options == null ? void 0 : options.initialValue) != null ? _a : list[0]);\n  const index = computed({\n    get() {\n      var _a2;\n      let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, list) : list.indexOf(state.value);\n      if (index2 < 0)\n        index2 = (_a2 = options == null ? void 0 : options.fallbackIndex) != null ? _a2 : 0;\n      return index2;\n    },\n    set(v) {\n      set(v);\n    }\n  });\n  function set(i) {\n    const length = list.length;\n    const index2 = (i % length + length) % length;\n    const value = list[index2];\n    state.value = value;\n    return value;\n  }\n  function shift(delta = 1) {\n    return set(index.value + delta);\n  }\n  function next(n = 1) {\n    return shift(n);\n  }\n  function prev(n = 1) {\n    return shift(-n);\n  }\n  return {\n    state,\n    index,\n    next,\n    prev\n  };\n}\n\nvar __defProp$h = Object.defineProperty;\nvar __defProps$7 = Object.defineProperties;\nvar __getOwnPropDescs$7 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$j = Object.getOwnPropertySymbols;\nvar __hasOwnProp$j = Object.prototype.hasOwnProperty;\nvar __propIsEnum$j = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$h = (obj, key, value) => key in obj ? __defProp$h(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$h = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$j.call(b, prop))\n      __defNormalProp$h(a, prop, b[prop]);\n  if (__getOwnPropSymbols$j)\n    for (var prop of __getOwnPropSymbols$j(b)) {\n      if (__propIsEnum$j.call(b, prop))\n        __defNormalProp$h(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$7 = (a, b) => __defProps$7(a, __getOwnPropDescs$7(b));\nfunction useDark(options = {}) {\n  const {\n    valueDark = \"dark\",\n    valueLight = \"\",\n    window = defaultWindow\n  } = options;\n  const mode = useColorMode(__spreadProps$7(__spreadValues$h({}, options), {\n    onChanged: (mode2, defaultHandler) => {\n      var _a;\n      if (options.onChanged)\n        (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === \"dark\");\n      else\n        defaultHandler(mode2);\n    },\n    modes: {\n      dark: valueDark,\n      light: valueLight\n    }\n  }));\n  const preferredDark = usePreferredDark({ window });\n  const isDark = computed({\n    get() {\n      return mode.value === \"dark\";\n    },\n    set(v) {\n      if (v === preferredDark.value)\n        mode.value = \"auto\";\n      else\n        mode.value = v ? \"dark\" : \"light\";\n    }\n  });\n  return isDark;\n}\n\nconst fnBypass = (v) => v;\nconst fnSetSource = (source, value) => source.value = value;\nfunction defaultDump(clone) {\n  return clone ? isFunction(clone) ? clone : cloneFnJSON : fnBypass;\n}\nfunction defaultParse(clone) {\n  return clone ? isFunction(clone) ? clone : cloneFnJSON : fnBypass;\n}\nfunction useManualRefHistory(source, options = {}) {\n  const {\n    clone = false,\n    dump = defaultDump(clone),\n    parse = defaultParse(clone),\n    setSource = fnSetSource\n  } = options;\n  function _createHistoryRecord() {\n    return markRaw({\n      snapshot: dump(source.value),\n      timestamp: timestamp()\n    });\n  }\n  const last = ref(_createHistoryRecord());\n  const undoStack = ref([]);\n  const redoStack = ref([]);\n  const _setSource = (record) => {\n    setSource(source, parse(record.snapshot));\n    last.value = record;\n  };\n  const commit = () => {\n    undoStack.value.unshift(last.value);\n    last.value = _createHistoryRecord();\n    if (options.capacity && undoStack.value.length > options.capacity)\n      undoStack.value.splice(options.capacity, Infinity);\n    if (redoStack.value.length)\n      redoStack.value.splice(0, redoStack.value.length);\n  };\n  const clear = () => {\n    undoStack.value.splice(0, undoStack.value.length);\n    redoStack.value.splice(0, redoStack.value.length);\n  };\n  const undo = () => {\n    const state = undoStack.value.shift();\n    if (state) {\n      redoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const redo = () => {\n    const state = redoStack.value.shift();\n    if (state) {\n      undoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const reset = () => {\n    _setSource(last.value);\n  };\n  const history = computed(() => [last.value, ...undoStack.value]);\n  const canUndo = computed(() => undoStack.value.length > 0);\n  const canRedo = computed(() => redoStack.value.length > 0);\n  return {\n    source,\n    undoStack,\n    redoStack,\n    last,\n    history,\n    canUndo,\n    canRedo,\n    clear,\n    commit,\n    reset,\n    undo,\n    redo\n  };\n}\n\nvar __defProp$g = Object.defineProperty;\nvar __defProps$6 = Object.defineProperties;\nvar __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$i = Object.getOwnPropertySymbols;\nvar __hasOwnProp$i = Object.prototype.hasOwnProperty;\nvar __propIsEnum$i = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$g = (obj, key, value) => key in obj ? __defProp$g(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$g = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$i.call(b, prop))\n      __defNormalProp$g(a, prop, b[prop]);\n  if (__getOwnPropSymbols$i)\n    for (var prop of __getOwnPropSymbols$i(b)) {\n      if (__propIsEnum$i.call(b, prop))\n        __defNormalProp$g(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));\nfunction useRefHistory(source, options = {}) {\n  const {\n    deep = false,\n    flush = \"pre\",\n    eventFilter\n  } = options;\n  const {\n    eventFilter: composedFilter,\n    pause,\n    resume: resumeTracking,\n    isActive: isTracking\n  } = pausableFilter(eventFilter);\n  const {\n    ignoreUpdates,\n    ignorePrevAsyncUpdates,\n    stop\n  } = watchIgnorable(source, commit, { deep, flush, eventFilter: composedFilter });\n  function setSource(source2, value) {\n    ignorePrevAsyncUpdates();\n    ignoreUpdates(() => {\n      source2.value = value;\n    });\n  }\n  const manualHistory = useManualRefHistory(source, __spreadProps$6(__spreadValues$g({}, options), { clone: options.clone || deep, setSource }));\n  const { clear, commit: manualCommit } = manualHistory;\n  function commit() {\n    ignorePrevAsyncUpdates();\n    manualCommit();\n  }\n  function resume(commitNow) {\n    resumeTracking();\n    if (commitNow)\n      commit();\n  }\n  function batch(fn) {\n    let canceled = false;\n    const cancel = () => canceled = true;\n    ignoreUpdates(() => {\n      fn(cancel);\n    });\n    if (!canceled)\n      commit();\n  }\n  function dispose() {\n    stop();\n    clear();\n  }\n  return __spreadProps$6(__spreadValues$g({}, manualHistory), {\n    isTracking,\n    pause,\n    resume,\n    commit,\n    batch,\n    dispose\n  });\n}\n\nvar __defProp$f = Object.defineProperty;\nvar __defProps$5 = Object.defineProperties;\nvar __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$h = Object.getOwnPropertySymbols;\nvar __hasOwnProp$h = Object.prototype.hasOwnProperty;\nvar __propIsEnum$h = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$f = (obj, key, value) => key in obj ? __defProp$f(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$f = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$h.call(b, prop))\n      __defNormalProp$f(a, prop, b[prop]);\n  if (__getOwnPropSymbols$h)\n    for (var prop of __getOwnPropSymbols$h(b)) {\n      if (__propIsEnum$h.call(b, prop))\n        __defNormalProp$f(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));\nfunction useDebouncedRefHistory(source, options = {}) {\n  const filter = options.debounce ? debounceFilter(options.debounce) : void 0;\n  const history = useRefHistory(source, __spreadProps$5(__spreadValues$f({}, options), { eventFilter: filter }));\n  return __spreadValues$f({}, history);\n}\n\nfunction useDeviceMotion(options = {}) {\n  const {\n    window = defaultWindow,\n    eventFilter = bypassFilter\n  } = options;\n  const acceleration = ref({ x: null, y: null, z: null });\n  const rotationRate = ref({ alpha: null, beta: null, gamma: null });\n  const interval = ref(0);\n  const accelerationIncludingGravity = ref({\n    x: null,\n    y: null,\n    z: null\n  });\n  if (window) {\n    const onDeviceMotion = createFilterWrapper(eventFilter, (event) => {\n      acceleration.value = event.acceleration;\n      accelerationIncludingGravity.value = event.accelerationIncludingGravity;\n      rotationRate.value = event.rotationRate;\n      interval.value = event.interval;\n    });\n    useEventListener(window, \"devicemotion\", onDeviceMotion);\n  }\n  return {\n    acceleration,\n    accelerationIncludingGravity,\n    rotationRate,\n    interval\n  };\n}\n\nfunction useDeviceOrientation(options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"DeviceOrientationEvent\" in window);\n  const isAbsolute = ref(false);\n  const alpha = ref(null);\n  const beta = ref(null);\n  const gamma = ref(null);\n  if (window && isSupported.value) {\n    useEventListener(window, \"deviceorientation\", (event) => {\n      isAbsolute.value = event.absolute;\n      alpha.value = event.alpha;\n      beta.value = event.beta;\n      gamma.value = event.gamma;\n    });\n  }\n  return {\n    isSupported,\n    isAbsolute,\n    alpha,\n    beta,\n    gamma\n  };\n}\n\nfunction useDevicePixelRatio({\n  window = defaultWindow\n} = {}) {\n  if (!window) {\n    return {\n      pixelRatio: ref(1)\n    };\n  }\n  const pixelRatio = ref(1);\n  const cleanups = [];\n  const cleanup = () => {\n    cleanups.map((i) => i());\n    cleanups.length = 0;\n  };\n  const observe = () => {\n    pixelRatio.value = window.devicePixelRatio;\n    cleanup();\n    const media = window.matchMedia(`(resolution: ${pixelRatio.value}dppx)`);\n    media.addEventListener(\"change\", observe, { once: true });\n    cleanups.push(() => {\n      media.removeEventListener(\"change\", observe);\n    });\n  };\n  observe();\n  tryOnScopeDispose(cleanup);\n  return { pixelRatio };\n}\n\nfunction usePermission(permissionDesc, options = {}) {\n  const {\n    controls = false,\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"permissions\" in navigator);\n  let permissionStatus;\n  const desc = typeof permissionDesc === \"string\" ? { name: permissionDesc } : permissionDesc;\n  const state = ref();\n  const onChange = () => {\n    if (permissionStatus)\n      state.value = permissionStatus.state;\n  };\n  const query = createSingletonPromise(async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionStatus) {\n      try {\n        permissionStatus = await navigator.permissions.query(desc);\n        useEventListener(permissionStatus, \"change\", onChange);\n        onChange();\n      } catch (e) {\n        state.value = \"prompt\";\n      }\n    }\n    return permissionStatus;\n  });\n  query();\n  if (controls) {\n    return {\n      state,\n      isSupported,\n      query\n    };\n  } else {\n    return state;\n  }\n}\n\nfunction useDevicesList(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    requestPermissions = false,\n    constraints = { audio: true, video: true },\n    onUpdated\n  } = options;\n  const devices = ref([]);\n  const videoInputs = computed(() => devices.value.filter((i) => i.kind === \"videoinput\"));\n  const audioInputs = computed(() => devices.value.filter((i) => i.kind === \"audioinput\"));\n  const audioOutputs = computed(() => devices.value.filter((i) => i.kind === \"audiooutput\"));\n  const isSupported = useSupported(() => navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);\n  const permissionGranted = ref(false);\n  async function update() {\n    if (!isSupported.value)\n      return;\n    devices.value = await navigator.mediaDevices.enumerateDevices();\n    onUpdated == null ? void 0 : onUpdated(devices.value);\n  }\n  async function ensurePermissions() {\n    if (!isSupported.value)\n      return false;\n    if (permissionGranted.value)\n      return true;\n    const { state, query } = usePermission(\"camera\", { controls: true });\n    await query();\n    if (state.value !== \"granted\") {\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      stream.getTracks().forEach((t) => t.stop());\n      update();\n      permissionGranted.value = true;\n    } else {\n      permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  }\n  if (isSupported.value) {\n    if (requestPermissions)\n      ensurePermissions();\n    useEventListener(navigator.mediaDevices, \"devicechange\", update);\n    update();\n  }\n  return {\n    devices,\n    ensurePermissions,\n    permissionGranted,\n    videoInputs,\n    audioInputs,\n    audioOutputs,\n    isSupported\n  };\n}\n\nfunction useDisplayMedia(options = {}) {\n  var _a;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const video = options.video;\n  const audio = options.audio;\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getDisplayMedia;\n  });\n  const constraint = { audio, video };\n  const stream = shallowRef();\n  async function _start() {\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);\n    return stream.value;\n  }\n  async function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  watch(enabled, (v) => {\n    if (v)\n      _start();\n    else\n      _stop();\n  }, { immediate: true });\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    enabled\n  };\n}\n\nfunction useDocumentVisibility({ document = defaultDocument } = {}) {\n  if (!document)\n    return ref(\"visible\");\n  const visibility = ref(document.visibilityState);\n  useEventListener(document, \"visibilitychange\", () => {\n    visibility.value = document.visibilityState;\n  });\n  return visibility;\n}\n\nvar __defProp$e = Object.defineProperty;\nvar __defProps$4 = Object.defineProperties;\nvar __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$g = Object.getOwnPropertySymbols;\nvar __hasOwnProp$g = Object.prototype.hasOwnProperty;\nvar __propIsEnum$g = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$e = (obj, key, value) => key in obj ? __defProp$e(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$e = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$g.call(b, prop))\n      __defNormalProp$e(a, prop, b[prop]);\n  if (__getOwnPropSymbols$g)\n    for (var prop of __getOwnPropSymbols$g(b)) {\n      if (__propIsEnum$g.call(b, prop))\n        __defNormalProp$e(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));\nfunction useDraggable(target, options = {}) {\n  var _a, _b, _c;\n  const draggingElement = (_a = options.draggingElement) != null ? _a : defaultWindow;\n  const draggingHandle = (_b = options.handle) != null ? _b : target;\n  const position = ref((_c = resolveUnref(options.initialValue)) != null ? _c : { x: 0, y: 0 });\n  const pressedDelta = ref();\n  const filterEvent = (e) => {\n    if (options.pointerTypes)\n      return options.pointerTypes.includes(e.pointerType);\n    return true;\n  };\n  const handleEvent = (e) => {\n    if (resolveUnref(options.preventDefault))\n      e.preventDefault();\n    if (resolveUnref(options.stopPropagation))\n      e.stopPropagation();\n  };\n  const start = (e) => {\n    var _a2;\n    if (!filterEvent(e))\n      return;\n    if (resolveUnref(options.exact) && e.target !== resolveUnref(target))\n      return;\n    const rect = resolveUnref(target).getBoundingClientRect();\n    const pos = {\n      x: e.pageX - rect.left,\n      y: e.pageY - rect.top\n    };\n    if (((_a2 = options.onStart) == null ? void 0 : _a2.call(options, pos, e)) === false)\n      return;\n    pressedDelta.value = pos;\n    handleEvent(e);\n  };\n  const move = (e) => {\n    var _a2;\n    if (!filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    position.value = {\n      x: e.pageX - pressedDelta.value.x,\n      y: e.pageY - pressedDelta.value.y\n    };\n    (_a2 = options.onMove) == null ? void 0 : _a2.call(options, position.value, e);\n    handleEvent(e);\n  };\n  const end = (e) => {\n    var _a2;\n    if (!filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    pressedDelta.value = void 0;\n    (_a2 = options.onEnd) == null ? void 0 : _a2.call(options, position.value, e);\n    handleEvent(e);\n  };\n  if (isClient) {\n    useEventListener(draggingHandle, \"pointerdown\", start, true);\n    useEventListener(draggingElement, \"pointermove\", move, true);\n    useEventListener(draggingElement, \"pointerup\", end, true);\n  }\n  return __spreadProps$4(__spreadValues$e({}, toRefs(position)), {\n    position,\n    isDragging: computed(() => !!pressedDelta.value),\n    style: computed(() => `left:${position.value.x}px;top:${position.value.y}px;`)\n  });\n}\n\nfunction useDropZone(target, onDrop) {\n  const isOverDropZone = ref(false);\n  let counter = 0;\n  if (isClient) {\n    useEventListener(target, \"dragenter\", (event) => {\n      event.preventDefault();\n      counter += 1;\n      isOverDropZone.value = true;\n    });\n    useEventListener(target, \"dragover\", (event) => {\n      event.preventDefault();\n    });\n    useEventListener(target, \"dragleave\", (event) => {\n      event.preventDefault();\n      counter -= 1;\n      if (counter === 0)\n        isOverDropZone.value = false;\n    });\n    useEventListener(target, \"drop\", (event) => {\n      var _a, _b;\n      event.preventDefault();\n      counter = 0;\n      isOverDropZone.value = false;\n      const files = Array.from((_b = (_a = event.dataTransfer) == null ? void 0 : _a.files) != null ? _b : []);\n      onDrop == null ? void 0 : onDrop(files.length === 0 ? null : files);\n    });\n  }\n  return {\n    isOverDropZone\n  };\n}\n\nvar __getOwnPropSymbols$f = Object.getOwnPropertySymbols;\nvar __hasOwnProp$f = Object.prototype.hasOwnProperty;\nvar __propIsEnum$f = Object.prototype.propertyIsEnumerable;\nvar __objRest$2 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$f.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$f)\n    for (var prop of __getOwnPropSymbols$f(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$f.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction useResizeObserver(target, callback, options = {}) {\n  const _a = options, { window = defaultWindow } = _a, observerOptions = __objRest$2(_a, [\"window\"]);\n  let observer;\n  const isSupported = useSupported(() => window && \"ResizeObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const stopWatch = watch(() => unrefElement(target), (el) => {\n    cleanup();\n    if (isSupported.value && window && el) {\n      observer = new ResizeObserver(callback);\n      observer.observe(el, observerOptions);\n    }\n  }, { immediate: true, flush: \"post\" });\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nfunction useElementBounding(target, options = {}) {\n  const {\n    reset = true,\n    windowResize = true,\n    windowScroll = true,\n    immediate = true\n  } = options;\n  const height = ref(0);\n  const bottom = ref(0);\n  const left = ref(0);\n  const right = ref(0);\n  const top = ref(0);\n  const width = ref(0);\n  const x = ref(0);\n  const y = ref(0);\n  function update() {\n    const el = unrefElement(target);\n    if (!el) {\n      if (reset) {\n        height.value = 0;\n        bottom.value = 0;\n        left.value = 0;\n        right.value = 0;\n        top.value = 0;\n        width.value = 0;\n        x.value = 0;\n        y.value = 0;\n      }\n      return;\n    }\n    const rect = el.getBoundingClientRect();\n    height.value = rect.height;\n    bottom.value = rect.bottom;\n    left.value = rect.left;\n    right.value = rect.right;\n    top.value = rect.top;\n    width.value = rect.width;\n    x.value = rect.x;\n    y.value = rect.y;\n  }\n  useResizeObserver(target, update);\n  watch(() => unrefElement(target), (ele) => !ele && update());\n  if (windowScroll)\n    useEventListener(\"scroll\", update, { passive: true });\n  if (windowResize)\n    useEventListener(\"resize\", update, { passive: true });\n  tryOnMounted(() => {\n    if (immediate)\n      update();\n  });\n  return {\n    height,\n    bottom,\n    left,\n    right,\n    top,\n    width,\n    x,\n    y,\n    update\n  };\n}\n\nfunction useRafFn(fn, options = {}) {\n  const {\n    immediate = true,\n    window = defaultWindow\n  } = options;\n  const isActive = ref(false);\n  let rafId = null;\n  function loop() {\n    if (!isActive.value || !window)\n      return;\n    fn();\n    rafId = window.requestAnimationFrame(loop);\n  }\n  function resume() {\n    if (!isActive.value && window) {\n      isActive.value = true;\n      loop();\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    if (rafId != null && window) {\n      window.cancelAnimationFrame(rafId);\n      rafId = null;\n    }\n  }\n  if (immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nvar __defProp$d = Object.defineProperty;\nvar __getOwnPropSymbols$e = Object.getOwnPropertySymbols;\nvar __hasOwnProp$e = Object.prototype.hasOwnProperty;\nvar __propIsEnum$e = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$d = (obj, key, value) => key in obj ? __defProp$d(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$d = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$e.call(b, prop))\n      __defNormalProp$d(a, prop, b[prop]);\n  if (__getOwnPropSymbols$e)\n    for (var prop of __getOwnPropSymbols$e(b)) {\n      if (__propIsEnum$e.call(b, prop))\n        __defNormalProp$d(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useElementByPoint(options) {\n  const element = ref(null);\n  const { x, y } = options;\n  const controls = useRafFn(() => {\n    element.value = document.elementFromPoint(resolveUnref(x), resolveUnref(y));\n  });\n  return __spreadValues$d({\n    element\n  }, controls);\n}\n\nfunction useElementHover(el) {\n  const isHovered = ref(false);\n  useEventListener(el, \"mouseenter\", () => isHovered.value = true);\n  useEventListener(el, \"mouseleave\", () => isHovered.value = false);\n  return isHovered;\n}\n\nfunction useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {\n  const { box = \"content-box\" } = options;\n  const width = ref(initialSize.width);\n  const height = ref(initialSize.height);\n  useResizeObserver(target, ([entry]) => {\n    const boxSize = box === \"border-box\" ? entry.borderBoxSize : box === \"content-box\" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;\n    if (boxSize) {\n      width.value = boxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);\n      height.value = boxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);\n    } else {\n      width.value = entry.contentRect.width;\n      height.value = entry.contentRect.height;\n    }\n  }, options);\n  watch(() => unrefElement(target), (ele) => {\n    width.value = ele ? initialSize.width : 0;\n    height.value = ele ? initialSize.height : 0;\n  });\n  return {\n    width,\n    height\n  };\n}\n\nfunction useElementVisibility(element, { window = defaultWindow, scrollTarget } = {}) {\n  const elementIsVisible = ref(false);\n  const testBounding = () => {\n    if (!window)\n      return;\n    const document = window.document;\n    const el = unrefElement(element);\n    if (!el) {\n      elementIsVisible.value = false;\n    } else {\n      const rect = el.getBoundingClientRect();\n      elementIsVisible.value = rect.top <= (window.innerHeight || document.documentElement.clientHeight) && rect.left <= (window.innerWidth || document.documentElement.clientWidth) && rect.bottom >= 0 && rect.right >= 0;\n    }\n  };\n  watch(() => unrefElement(element), () => testBounding(), { immediate: true, flush: \"post\" });\n  if (window) {\n    useEventListener(scrollTarget || window, \"scroll\", testBounding, {\n      capture: false,\n      passive: true\n    });\n  }\n  return elementIsVisible;\n}\n\nconst events = new Map();\n\nfunction useEventBus(key) {\n  const scope = getCurrentScope();\n  function on(listener) {\n    var _a;\n    const listeners = events.get(key) || [];\n    listeners.push(listener);\n    events.set(key, listeners);\n    const _off = () => off(listener);\n    (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);\n    return _off;\n  }\n  function once(listener) {\n    function _listener(...args) {\n      off(_listener);\n      listener(...args);\n    }\n    return on(_listener);\n  }\n  function off(listener) {\n    const listeners = events.get(key);\n    if (!listeners)\n      return;\n    const index = listeners.indexOf(listener);\n    if (index > -1)\n      listeners.splice(index, 1);\n    if (!listeners.length)\n      events.delete(key);\n  }\n  function reset() {\n    events.delete(key);\n  }\n  function emit(event, payload) {\n    var _a;\n    (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));\n  }\n  return { on, once, off, emit, reset };\n}\n\nfunction useEventSource(url, events = [], options = {}) {\n  const event = ref(null);\n  const data = ref(null);\n  const status = ref(\"CONNECTING\");\n  const eventSource = ref(null);\n  const error = ref(null);\n  const {\n    withCredentials = false\n  } = options;\n  const close = () => {\n    if (eventSource.value) {\n      eventSource.value.close();\n      eventSource.value = null;\n      status.value = \"CLOSED\";\n    }\n  };\n  const es = new EventSource(url, { withCredentials });\n  eventSource.value = es;\n  es.onopen = () => {\n    status.value = \"OPEN\";\n    error.value = null;\n  };\n  es.onerror = (e) => {\n    status.value = \"CLOSED\";\n    error.value = e;\n  };\n  es.onmessage = (e) => {\n    event.value = null;\n    data.value = e.data;\n  };\n  for (const event_name of events) {\n    useEventListener(es, event_name, (e) => {\n      event.value = event_name;\n      data.value = e.data || null;\n    });\n  }\n  tryOnScopeDispose(() => {\n    close();\n  });\n  return {\n    eventSource,\n    event,\n    data,\n    status,\n    error,\n    close\n  };\n}\n\nfunction useEyeDropper(options = {}) {\n  const { initialValue = \"\" } = options;\n  const isSupported = useSupported(() => typeof window !== \"undefined\" && \"EyeDropper\" in window);\n  const sRGBHex = ref(initialValue);\n  async function open(openOptions) {\n    if (!isSupported.value)\n      return;\n    const eyeDropper = new window.EyeDropper();\n    const result = await eyeDropper.open(openOptions);\n    sRGBHex.value = result.sRGBHex;\n    return result;\n  }\n  return { isSupported, sRGBHex, open };\n}\n\nfunction useFavicon(newIcon = null, options = {}) {\n  const {\n    baseUrl = \"\",\n    rel = \"icon\",\n    document = defaultDocument\n  } = options;\n  const favicon = resolveRef(newIcon);\n  const applyIcon = (icon) => {\n    document == null ? void 0 : document.head.querySelectorAll(`link[rel*=\"${rel}\"]`).forEach((el) => el.href = `${baseUrl}${icon}`);\n  };\n  watch(favicon, (i, o) => {\n    if (isString(i) && i !== o)\n      applyIcon(i);\n  }, { immediate: true });\n  return favicon;\n}\n\nvar __defProp$c = Object.defineProperty;\nvar __defProps$3 = Object.defineProperties;\nvar __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$d = Object.getOwnPropertySymbols;\nvar __hasOwnProp$d = Object.prototype.hasOwnProperty;\nvar __propIsEnum$d = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$c = (obj, key, value) => key in obj ? __defProp$c(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$c = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$d.call(b, prop))\n      __defNormalProp$c(a, prop, b[prop]);\n  if (__getOwnPropSymbols$d)\n    for (var prop of __getOwnPropSymbols$d(b)) {\n      if (__propIsEnum$d.call(b, prop))\n        __defNormalProp$c(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));\nconst payloadMapping = {\n  json: \"application/json\",\n  text: \"text/plain\",\n  formData: \"multipart/form-data\"\n};\nfunction isFetchOptions(obj) {\n  return containsProp(obj, \"immediate\", \"refetch\", \"initialData\", \"timeout\", \"beforeFetch\", \"afterFetch\", \"onFetchError\", \"fetch\");\n}\nfunction headersToObject(headers) {\n  if (typeof Headers !== \"undefined\" && headers instanceof Headers)\n    return Object.fromEntries([...headers.entries()]);\n  return headers;\n}\nfunction chainCallbacks(...callbacks) {\n  return (ctx) => {\n    callbacks.forEach(async (callback) => {\n      if (callback)\n        ctx = __spreadValues$c(__spreadValues$c({}, ctx), await callback(ctx));\n    });\n    return ctx;\n  };\n}\nfunction createFetch(config = {}) {\n  const _options = config.options || {};\n  const _fetchOptions = config.fetchOptions || {};\n  function useFactoryFetch(url, ...args) {\n    const computedUrl = computed(() => config.baseUrl ? joinPaths(resolveUnref(config.baseUrl), resolveUnref(url)) : resolveUnref(url));\n    let options = _options;\n    let fetchOptions = _fetchOptions;\n    if (args.length > 0) {\n      if (isFetchOptions(args[0])) {\n        options = __spreadProps$3(__spreadValues$c(__spreadValues$c({}, options), args[0]), {\n          beforeFetch: chainCallbacks(_options.beforeFetch, args[0].beforeFetch),\n          afterFetch: chainCallbacks(_options.afterFetch, args[0].afterFetch),\n          onFetchError: chainCallbacks(_options.onFetchError, args[0].onFetchError)\n        });\n      } else {\n        fetchOptions = __spreadProps$3(__spreadValues$c(__spreadValues$c({}, fetchOptions), args[0]), {\n          headers: __spreadValues$c(__spreadValues$c({}, headersToObject(fetchOptions.headers) || {}), headersToObject(args[0].headers) || {})\n        });\n      }\n    }\n    if (args.length > 1 && isFetchOptions(args[1])) {\n      options = __spreadProps$3(__spreadValues$c(__spreadValues$c({}, options), args[1]), {\n        beforeFetch: chainCallbacks(_options.beforeFetch, args[1].beforeFetch),\n        afterFetch: chainCallbacks(_options.afterFetch, args[1].afterFetch),\n        onFetchError: chainCallbacks(_options.onFetchError, args[1].onFetchError)\n      });\n    }\n    return useFetch(computedUrl, fetchOptions, options);\n  }\n  return useFactoryFetch;\n}\nfunction useFetch(url, ...args) {\n  var _a;\n  const supportsAbort = typeof AbortController === \"function\";\n  let fetchOptions = {};\n  let options = { immediate: true, refetch: false, timeout: 0 };\n  const config = {\n    method: \"GET\",\n    type: \"text\",\n    payload: void 0\n  };\n  if (args.length > 0) {\n    if (isFetchOptions(args[0]))\n      options = __spreadValues$c(__spreadValues$c({}, options), args[0]);\n    else\n      fetchOptions = args[0];\n  }\n  if (args.length > 1) {\n    if (isFetchOptions(args[1]))\n      options = __spreadValues$c(__spreadValues$c({}, options), args[1]);\n  }\n  const {\n    fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,\n    initialData,\n    timeout\n  } = options;\n  const responseEvent = createEventHook();\n  const errorEvent = createEventHook();\n  const finallyEvent = createEventHook();\n  const isFinished = ref(false);\n  const isFetching = ref(false);\n  const aborted = ref(false);\n  const statusCode = ref(null);\n  const response = shallowRef(null);\n  const error = shallowRef(null);\n  const data = shallowRef(initialData);\n  const canAbort = computed(() => supportsAbort && isFetching.value);\n  let controller;\n  let timer;\n  const abort = () => {\n    if (supportsAbort && controller)\n      controller.abort();\n  };\n  const loading = (isLoading) => {\n    isFetching.value = isLoading;\n    isFinished.value = !isLoading;\n  };\n  if (timeout)\n    timer = useTimeoutFn(abort, timeout, { immediate: false });\n  const execute = async (throwOnFailed = false) => {\n    var _a2;\n    loading(true);\n    error.value = null;\n    statusCode.value = null;\n    aborted.value = false;\n    controller = void 0;\n    if (supportsAbort) {\n      controller = new AbortController();\n      controller.signal.onabort = () => aborted.value = true;\n      fetchOptions = __spreadProps$3(__spreadValues$c({}, fetchOptions), {\n        signal: controller.signal\n      });\n    }\n    const defaultFetchOptions = {\n      method: config.method,\n      headers: {}\n    };\n    if (config.payload) {\n      const headers = headersToObject(defaultFetchOptions.headers);\n      if (config.payloadType)\n        headers[\"Content-Type\"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;\n      const payload = resolveUnref(config.payload);\n      defaultFetchOptions.body = config.payloadType === \"json\" ? JSON.stringify(payload) : payload;\n    }\n    let isCanceled = false;\n    const context = { url: resolveUnref(url), options: __spreadValues$c(__spreadValues$c({}, defaultFetchOptions), fetchOptions), cancel: () => {\n      isCanceled = true;\n    } };\n    if (options.beforeFetch)\n      Object.assign(context, await options.beforeFetch(context));\n    if (isCanceled || !fetch) {\n      loading(false);\n      return Promise.resolve(null);\n    }\n    let responseData = null;\n    if (timer)\n      timer.start();\n    return new Promise((resolve, reject) => {\n      var _a3;\n      fetch(context.url, __spreadProps$3(__spreadValues$c(__spreadValues$c({}, defaultFetchOptions), context.options), {\n        headers: __spreadValues$c(__spreadValues$c({}, headersToObject(defaultFetchOptions.headers)), headersToObject((_a3 = context.options) == null ? void 0 : _a3.headers))\n      })).then(async (fetchResponse) => {\n        response.value = fetchResponse;\n        statusCode.value = fetchResponse.status;\n        responseData = await fetchResponse[config.type]();\n        if (options.afterFetch && statusCode.value >= 200 && statusCode.value < 300)\n          ({ data: responseData } = await options.afterFetch({ data: responseData, response: fetchResponse }));\n        data.value = responseData;\n        if (!fetchResponse.ok)\n          throw new Error(fetchResponse.statusText);\n        responseEvent.trigger(fetchResponse);\n        return resolve(fetchResponse);\n      }).catch(async (fetchError) => {\n        let errorData = fetchError.message || fetchError.name;\n        if (options.onFetchError)\n          ({ data: responseData, error: errorData } = await options.onFetchError({ data: responseData, error: fetchError, response: response.value }));\n        data.value = responseData;\n        error.value = errorData;\n        errorEvent.trigger(fetchError);\n        if (throwOnFailed)\n          return reject(fetchError);\n        return resolve(null);\n      }).finally(() => {\n        loading(false);\n        if (timer)\n          timer.stop();\n        finallyEvent.trigger(null);\n      });\n    });\n  };\n  const refetch = resolveRef(options.refetch);\n  watch([\n    refetch,\n    resolveRef(url)\n  ], ([refetch2]) => refetch2 && execute(), { deep: true });\n  const shell = {\n    isFinished,\n    statusCode,\n    response,\n    error,\n    data,\n    isFetching,\n    canAbort,\n    aborted,\n    abort,\n    execute,\n    onFetchResponse: responseEvent.on,\n    onFetchError: errorEvent.on,\n    onFetchFinally: finallyEvent.on,\n    get: setMethod(\"GET\"),\n    put: setMethod(\"PUT\"),\n    post: setMethod(\"POST\"),\n    delete: setMethod(\"DELETE\"),\n    patch: setMethod(\"PATCH\"),\n    head: setMethod(\"HEAD\"),\n    options: setMethod(\"OPTIONS\"),\n    json: setType(\"json\"),\n    text: setType(\"text\"),\n    blob: setType(\"blob\"),\n    arrayBuffer: setType(\"arrayBuffer\"),\n    formData: setType(\"formData\")\n  };\n  function setMethod(method) {\n    return (payload, payloadType) => {\n      if (!isFetching.value) {\n        config.method = method;\n        config.payload = payload;\n        config.payloadType = payloadType;\n        if (isRef(config.payload)) {\n          watch([\n            refetch,\n            resolveRef(config.payload)\n          ], ([refetch2]) => refetch2 && execute(), { deep: true });\n        }\n        const rawPayload = resolveUnref(config.payload);\n        if (!payloadType && rawPayload && Object.getPrototypeOf(rawPayload) === Object.prototype)\n          config.payloadType = \"json\";\n        return __spreadProps$3(__spreadValues$c({}, shell), {\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        });\n      }\n      return void 0;\n    };\n  }\n  function waitUntilFinished() {\n    return new Promise((resolve, reject) => {\n      until(isFinished).toBe(true).then(() => resolve(shell)).catch((error2) => reject(error2));\n    });\n  }\n  function setType(type) {\n    return () => {\n      if (!isFetching.value) {\n        config.type = type;\n        return __spreadProps$3(__spreadValues$c({}, shell), {\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        });\n      }\n      return void 0;\n    };\n  }\n  if (options.immediate)\n    setTimeout(execute, 0);\n  return __spreadProps$3(__spreadValues$c({}, shell), {\n    then(onFulfilled, onRejected) {\n      return waitUntilFinished().then(onFulfilled, onRejected);\n    }\n  });\n}\nfunction joinPaths(start, end) {\n  if (!start.endsWith(\"/\") && !end.startsWith(\"/\"))\n    return `${start}/${end}`;\n  return `${start}${end}`;\n}\n\nvar __defProp$b = Object.defineProperty;\nvar __getOwnPropSymbols$c = Object.getOwnPropertySymbols;\nvar __hasOwnProp$c = Object.prototype.hasOwnProperty;\nvar __propIsEnum$c = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$b = (obj, key, value) => key in obj ? __defProp$b(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$b = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$c.call(b, prop))\n      __defNormalProp$b(a, prop, b[prop]);\n  if (__getOwnPropSymbols$c)\n    for (var prop of __getOwnPropSymbols$c(b)) {\n      if (__propIsEnum$c.call(b, prop))\n        __defNormalProp$b(a, prop, b[prop]);\n    }\n  return a;\n};\nconst DEFAULT_OPTIONS = {\n  multiple: true,\n  accept: \"*\"\n};\nfunction useFileDialog(options = {}) {\n  const {\n    document = defaultDocument\n  } = options;\n  const files = ref(null);\n  let input;\n  if (document) {\n    input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = (event) => {\n      const result = event.target;\n      files.value = result.files;\n    };\n  }\n  const open = (localOptions) => {\n    if (!input)\n      return;\n    const _options = __spreadValues$b(__spreadValues$b(__spreadValues$b({}, DEFAULT_OPTIONS), options), localOptions);\n    input.multiple = _options.multiple;\n    input.accept = _options.accept;\n    if (hasOwn(_options, \"capture\"))\n      input.capture = _options.capture;\n    input.click();\n  };\n  const reset = () => {\n    files.value = null;\n    if (input)\n      input.value = \"\";\n  };\n  return {\n    files: readonly(files),\n    open,\n    reset\n  };\n}\n\nvar __defProp$a = Object.defineProperty;\nvar __getOwnPropSymbols$b = Object.getOwnPropertySymbols;\nvar __hasOwnProp$b = Object.prototype.hasOwnProperty;\nvar __propIsEnum$b = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$a = (obj, key, value) => key in obj ? __defProp$a(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$a = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$b.call(b, prop))\n      __defNormalProp$a(a, prop, b[prop]);\n  if (__getOwnPropSymbols$b)\n    for (var prop of __getOwnPropSymbols$b(b)) {\n      if (__propIsEnum$b.call(b, prop))\n        __defNormalProp$a(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useFileSystemAccess(options = {}) {\n  const {\n    window: _window = defaultWindow,\n    dataType = \"Text\"\n  } = unref(options);\n  const window = _window;\n  const isSupported = useSupported(() => window && \"showSaveFilePicker\" in window && \"showOpenFilePicker\" in window);\n  const fileHandle = ref();\n  const data = ref();\n  const file = ref();\n  const fileName = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : \"\";\n  });\n  const fileMIME = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : \"\";\n  });\n  const fileSize = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;\n  });\n  const fileLastModified = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;\n  });\n  async function open(_options = {}) {\n    if (!isSupported.value)\n      return;\n    const [handle] = await window.showOpenFilePicker(__spreadValues$a(__spreadValues$a({}, unref(options)), _options));\n    fileHandle.value = handle;\n    await updateFile();\n    await updateData();\n  }\n  async function create(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker(__spreadValues$a(__spreadValues$a({}, unref(options)), _options));\n    data.value = void 0;\n    await updateFile();\n    await updateData();\n  }\n  async function save(_options = {}) {\n    if (!isSupported.value)\n      return;\n    if (!fileHandle.value)\n      return saveAs(_options);\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function saveAs(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker(__spreadValues$a(__spreadValues$a({}, unref(options)), _options));\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function updateFile() {\n    var _a;\n    file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());\n  }\n  async function updateData() {\n    var _a, _b;\n    if (unref(dataType) === \"Text\")\n      data.value = await ((_a = file.value) == null ? void 0 : _a.text());\n    if (unref(dataType) === \"ArrayBuffer\")\n      data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());\n    if (unref(dataType) === \"Blob\")\n      data.value = file.value;\n  }\n  watch(() => unref(dataType), updateData);\n  return {\n    isSupported,\n    data,\n    file,\n    fileName,\n    fileMIME,\n    fileSize,\n    fileLastModified,\n    open,\n    create,\n    save,\n    saveAs,\n    updateData\n  };\n}\n\nfunction useFocus(target, options = {}) {\n  const { initialValue = false } = options;\n  const activeElement = useActiveElement(options);\n  const targetElement = computed(() => unrefElement(target));\n  const focused = computed({\n    get() {\n      return isDef(activeElement.value) && isDef(targetElement.value) && activeElement.value === targetElement.value;\n    },\n    set(value) {\n      var _a, _b;\n      if (!value && focused.value)\n        (_a = targetElement.value) == null ? void 0 : _a.blur();\n      if (value && !focused.value)\n        (_b = targetElement.value) == null ? void 0 : _b.focus();\n    }\n  });\n  watch(targetElement, () => {\n    focused.value = initialValue;\n  }, { immediate: true, flush: \"post\" });\n  return { focused };\n}\n\nfunction useFocusWithin(target, options = {}) {\n  const activeElement = useActiveElement(options);\n  const targetElement = computed(() => unrefElement(target));\n  const focused = computed(() => targetElement.value && activeElement.value ? targetElement.value.contains(activeElement.value) : false);\n  return { focused };\n}\n\nfunction useFps(options) {\n  var _a;\n  const fps = ref(0);\n  if (typeof performance === \"undefined\")\n    return fps;\n  const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;\n  let last = performance.now();\n  let ticks = 0;\n  useRafFn(() => {\n    ticks += 1;\n    if (ticks >= every) {\n      const now = performance.now();\n      const diff = now - last;\n      fps.value = Math.round(1e3 / (diff / ticks));\n      last = now;\n      ticks = 0;\n    }\n  });\n  return fps;\n}\n\nconst functionsMap = [\n  [\n    \"requestFullscreen\",\n    \"exitFullscreen\",\n    \"fullscreenElement\",\n    \"fullscreenEnabled\",\n    \"fullscreenchange\",\n    \"fullscreenerror\"\n  ],\n  [\n    \"webkitRequestFullscreen\",\n    \"webkitExitFullscreen\",\n    \"webkitFullscreenElement\",\n    \"webkitFullscreenEnabled\",\n    \"webkitfullscreenchange\",\n    \"webkitfullscreenerror\"\n  ],\n  [\n    \"webkitRequestFullScreen\",\n    \"webkitCancelFullScreen\",\n    \"webkitCurrentFullScreenElement\",\n    \"webkitCancelFullScreen\",\n    \"webkitfullscreenchange\",\n    \"webkitfullscreenerror\"\n  ],\n  [\n    \"mozRequestFullScreen\",\n    \"mozCancelFullScreen\",\n    \"mozFullScreenElement\",\n    \"mozFullScreenEnabled\",\n    \"mozfullscreenchange\",\n    \"mozfullscreenerror\"\n  ],\n  [\n    \"msRequestFullscreen\",\n    \"msExitFullscreen\",\n    \"msFullscreenElement\",\n    \"msFullscreenEnabled\",\n    \"MSFullscreenChange\",\n    \"MSFullscreenError\"\n  ]\n];\nfunction useFullscreen(target, options = {}) {\n  const { document = defaultDocument, autoExit = false } = options;\n  const targetRef = target || (document == null ? void 0 : document.querySelector(\"html\"));\n  const isFullscreen = ref(false);\n  let map = functionsMap[0];\n  const isSupported = useSupported(() => {\n    if (!document) {\n      return false;\n    } else {\n      for (const m of functionsMap) {\n        if (m[1] in document) {\n          map = m;\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n  const [REQUEST, EXIT, ELEMENT, , EVENT] = map;\n  async function exit() {\n    if (!isSupported.value)\n      return;\n    if (document == null ? void 0 : document[ELEMENT])\n      await document[EXIT]();\n    isFullscreen.value = false;\n  }\n  async function enter() {\n    if (!isSupported.value)\n      return;\n    await exit();\n    const target2 = unrefElement(targetRef);\n    if (target2) {\n      await target2[REQUEST]();\n      isFullscreen.value = true;\n    }\n  }\n  async function toggle() {\n    if (isFullscreen.value)\n      await exit();\n    else\n      await enter();\n  }\n  if (document) {\n    useEventListener(document, EVENT, () => {\n      isFullscreen.value = !!(document == null ? void 0 : document[ELEMENT]);\n    }, false);\n  }\n  if (autoExit)\n    tryOnScopeDispose(exit);\n  return {\n    isSupported,\n    isFullscreen,\n    enter,\n    exit,\n    toggle\n  };\n}\n\nfunction mapGamepadToXbox360Controller(gamepad) {\n  return computed(() => {\n    if (gamepad.value) {\n      return {\n        buttons: {\n          a: gamepad.value.buttons[0],\n          b: gamepad.value.buttons[1],\n          x: gamepad.value.buttons[2],\n          y: gamepad.value.buttons[3]\n        },\n        bumper: {\n          left: gamepad.value.buttons[4],\n          right: gamepad.value.buttons[5]\n        },\n        triggers: {\n          left: gamepad.value.buttons[6],\n          right: gamepad.value.buttons[7]\n        },\n        stick: {\n          left: {\n            horizontal: gamepad.value.axes[0],\n            vertical: gamepad.value.axes[1],\n            button: gamepad.value.buttons[10]\n          },\n          right: {\n            horizontal: gamepad.value.axes[2],\n            vertical: gamepad.value.axes[3],\n            button: gamepad.value.buttons[11]\n          }\n        },\n        dpad: {\n          up: gamepad.value.buttons[12],\n          down: gamepad.value.buttons[13],\n          left: gamepad.value.buttons[14],\n          right: gamepad.value.buttons[15]\n        },\n        back: gamepad.value.buttons[8],\n        start: gamepad.value.buttons[9]\n      };\n    }\n    return null;\n  });\n}\nfunction useGamepad(options = {}) {\n  const {\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"getGamepads\" in navigator);\n  const gamepads = ref([]);\n  const onConnectedHook = createEventHook();\n  const onDisconnectedHook = createEventHook();\n  const stateFromGamepad = (gamepad) => {\n    const hapticActuators = [];\n    const vibrationActuator = \"vibrationActuator\" in gamepad ? gamepad.vibrationActuator : null;\n    if (vibrationActuator)\n      hapticActuators.push(vibrationActuator);\n    if (gamepad.hapticActuators)\n      hapticActuators.push(...gamepad.hapticActuators);\n    return {\n      id: gamepad.id,\n      hapticActuators,\n      index: gamepad.index,\n      mapping: gamepad.mapping,\n      connected: gamepad.connected,\n      timestamp: gamepad.timestamp,\n      axes: gamepad.axes.map((axes) => axes),\n      buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value }))\n    };\n  };\n  const updateGamepadState = () => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    for (let i = 0; i < _gamepads.length; ++i) {\n      const gamepad = _gamepads[i];\n      if (gamepad) {\n        const index = gamepads.value.findIndex(({ index: index2 }) => index2 === gamepad.index);\n        if (index > -1)\n          gamepads.value[index] = stateFromGamepad(gamepad);\n      }\n    }\n  };\n  const { isActive, pause, resume } = useRafFn(updateGamepadState);\n  const onGamepadConnected = (gamepad) => {\n    if (!gamepads.value.some(({ index }) => index === gamepad.index)) {\n      gamepads.value.push(stateFromGamepad(gamepad));\n      onConnectedHook.trigger(gamepad.index);\n    }\n    resume();\n  };\n  const onGamepadDisconnected = (gamepad) => {\n    gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);\n    onDisconnectedHook.trigger(gamepad.index);\n  };\n  useEventListener(\"gamepadconnected\", (e) => onGamepadConnected(e.gamepad));\n  useEventListener(\"gamepaddisconnected\", (e) => onGamepadDisconnected(e.gamepad));\n  tryOnMounted(() => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    if (_gamepads) {\n      for (let i = 0; i < _gamepads.length; ++i) {\n        const gamepad = _gamepads[i];\n        if (gamepad)\n          onGamepadConnected(gamepad);\n      }\n    }\n  });\n  pause();\n  return {\n    isSupported,\n    onConnected: onConnectedHook.on,\n    onDisconnected: onDisconnectedHook.on,\n    gamepads,\n    pause,\n    resume,\n    isActive\n  };\n}\n\nfunction useGeolocation(options = {}) {\n  const {\n    enableHighAccuracy = true,\n    maximumAge = 3e4,\n    timeout = 27e3,\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"geolocation\" in navigator);\n  const locatedAt = ref(null);\n  const error = ref(null);\n  const coords = ref({\n    accuracy: 0,\n    latitude: Infinity,\n    longitude: Infinity,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null\n  });\n  function updatePosition(position) {\n    locatedAt.value = position.timestamp;\n    coords.value = position.coords;\n    error.value = null;\n  }\n  let watcher;\n  if (isSupported.value) {\n    watcher = navigator.geolocation.watchPosition(updatePosition, (err) => error.value = err, {\n      enableHighAccuracy,\n      maximumAge,\n      timeout\n    });\n  }\n  tryOnScopeDispose(() => {\n    if (watcher && navigator)\n      navigator.geolocation.clearWatch(watcher);\n  });\n  return {\n    isSupported,\n    coords,\n    locatedAt,\n    error\n  };\n}\n\nconst defaultEvents$1 = [\"mousemove\", \"mousedown\", \"resize\", \"keydown\", \"touchstart\", \"wheel\"];\nconst oneMinute = 6e4;\nfunction useIdle(timeout = oneMinute, options = {}) {\n  const {\n    initialState = false,\n    listenForVisibilityChange = true,\n    events = defaultEvents$1,\n    window = defaultWindow,\n    eventFilter = throttleFilter(50)\n  } = options;\n  const idle = ref(initialState);\n  const lastActive = ref(timestamp());\n  let timer;\n  const onEvent = createFilterWrapper(eventFilter, () => {\n    idle.value = false;\n    lastActive.value = timestamp();\n    clearTimeout(timer);\n    timer = setTimeout(() => idle.value = true, timeout);\n  });\n  if (window) {\n    const document = window.document;\n    for (const event of events)\n      useEventListener(window, event, onEvent, { passive: true });\n    if (listenForVisibilityChange) {\n      useEventListener(document, \"visibilitychange\", () => {\n        if (!document.hidden)\n          onEvent();\n      });\n    }\n  }\n  timer = setTimeout(() => idle.value = true, timeout);\n  return { idle, lastActive };\n}\n\nvar __defProp$9 = Object.defineProperty;\nvar __getOwnPropSymbols$a = Object.getOwnPropertySymbols;\nvar __hasOwnProp$a = Object.prototype.hasOwnProperty;\nvar __propIsEnum$a = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$9 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$a.call(b, prop))\n      __defNormalProp$9(a, prop, b[prop]);\n  if (__getOwnPropSymbols$a)\n    for (var prop of __getOwnPropSymbols$a(b)) {\n      if (__propIsEnum$a.call(b, prop))\n        __defNormalProp$9(a, prop, b[prop]);\n    }\n  return a;\n};\nasync function loadImage(options) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    const { src, srcset, sizes } = options;\n    img.src = src;\n    if (srcset)\n      img.srcset = srcset;\n    if (sizes)\n      img.sizes = sizes;\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n  });\n}\nconst useImage = (options, asyncStateOptions = {}) => {\n  const state = useAsyncState(() => loadImage(resolveUnref(options)), void 0, __spreadValues$9({\n    resetOnExecute: true\n  }, asyncStateOptions));\n  watch(() => resolveUnref(options), () => state.execute(asyncStateOptions.delay), { deep: true });\n  return state;\n};\n\nconst ARRIVED_STATE_THRESHOLD_PIXELS = 1;\nfunction useScroll(element, options = {}) {\n  const {\n    throttle = 0,\n    idle = 200,\n    onStop = noop,\n    onScroll = noop,\n    offset = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    },\n    eventListenerOptions = {\n      capture: false,\n      passive: true\n    },\n    behavior = \"auto\"\n  } = options;\n  const internalX = ref(0);\n  const internalY = ref(0);\n  const x = computed({\n    get() {\n      return internalX.value;\n    },\n    set(x2) {\n      scrollTo(x2, void 0);\n    }\n  });\n  const y = computed({\n    get() {\n      return internalY.value;\n    },\n    set(y2) {\n      scrollTo(void 0, y2);\n    }\n  });\n  function scrollTo(_x, _y) {\n    var _a, _b, _c;\n    const _element = resolveUnref(element);\n    if (!_element)\n      return;\n    (_c = _element instanceof Document ? document.body : _element) == null ? void 0 : _c.scrollTo({\n      top: (_a = resolveUnref(_y)) != null ? _a : y.value,\n      left: (_b = resolveUnref(_x)) != null ? _b : x.value,\n      behavior: resolveUnref(behavior)\n    });\n  }\n  const isScrolling = ref(false);\n  const arrivedState = reactive({\n    left: true,\n    right: false,\n    top: true,\n    bottom: false\n  });\n  const directions = reactive({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  });\n  const onScrollEnd = useDebounceFn((e) => {\n    isScrolling.value = false;\n    directions.left = false;\n    directions.right = false;\n    directions.top = false;\n    directions.bottom = false;\n    onStop(e);\n  }, throttle + idle);\n  const onScrollHandler = (e) => {\n    const eventTarget = e.target === document ? e.target.documentElement : e.target;\n    const scrollLeft = eventTarget.scrollLeft;\n    directions.left = scrollLeft < internalX.value;\n    directions.right = scrollLeft > internalY.value;\n    arrivedState.left = scrollLeft <= 0 + (offset.left || 0);\n    arrivedState.right = scrollLeft + eventTarget.clientWidth >= eventTarget.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    internalX.value = scrollLeft;\n    let scrollTop = eventTarget.scrollTop;\n    if (e.target === document && !scrollTop)\n      scrollTop = document.body.scrollTop;\n    directions.top = scrollTop < internalY.value;\n    directions.bottom = scrollTop > internalY.value;\n    arrivedState.top = scrollTop <= 0 + (offset.top || 0);\n    arrivedState.bottom = scrollTop + eventTarget.clientHeight >= eventTarget.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    internalY.value = scrollTop;\n    isScrolling.value = true;\n    onScrollEnd(e);\n    onScroll(e);\n  };\n  useEventListener(element, \"scroll\", throttle ? useThrottleFn(onScrollHandler, throttle) : onScrollHandler, eventListenerOptions);\n  return {\n    x,\n    y,\n    isScrolling,\n    arrivedState,\n    directions\n  };\n}\n\nvar __defProp$8 = Object.defineProperty;\nvar __defProps$2 = Object.defineProperties;\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$9 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$9 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$8 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$9.call(b, prop))\n      __defNormalProp$8(a, prop, b[prop]);\n  if (__getOwnPropSymbols$9)\n    for (var prop of __getOwnPropSymbols$9(b)) {\n      if (__propIsEnum$9.call(b, prop))\n        __defNormalProp$8(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\nfunction useInfiniteScroll(element, onLoadMore, options = {}) {\n  var _a, _b;\n  const direction = (_a = options.direction) != null ? _a : \"bottom\";\n  const state = reactive(useScroll(element, __spreadProps$2(__spreadValues$8({}, options), {\n    offset: __spreadValues$8({\n      [direction]: (_b = options.distance) != null ? _b : 0\n    }, options.offset)\n  })));\n  watch(() => state.arrivedState[direction], async (v) => {\n    var _a2, _b2;\n    if (v) {\n      const elem = resolveUnref(element);\n      const previous = {\n        height: (_a2 = elem == null ? void 0 : elem.scrollHeight) != null ? _a2 : 0,\n        width: (_b2 = elem == null ? void 0 : elem.scrollWidth) != null ? _b2 : 0\n      };\n      await onLoadMore(state);\n      if (options.preserveScrollPosition && elem) {\n        nextTick(() => {\n          elem.scrollTo({\n            top: elem.scrollHeight - previous.height,\n            left: elem.scrollWidth - previous.width\n          });\n        });\n      }\n    }\n  });\n}\n\nfunction useIntersectionObserver(target, callback, options = {}) {\n  const {\n    root,\n    rootMargin = \"0px\",\n    threshold = 0.1,\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"IntersectionObserver\" in window);\n  let cleanup = noop;\n  const stopWatch = isSupported.value ? watch(() => ({\n    el: unrefElement(target),\n    root: unrefElement(root)\n  }), ({ el, root: root2 }) => {\n    cleanup();\n    if (!el)\n      return;\n    const observer = new IntersectionObserver(callback, {\n      root: root2,\n      rootMargin,\n      threshold\n    });\n    observer.observe(el);\n    cleanup = () => {\n      observer.disconnect();\n      cleanup = noop;\n    };\n  }, { immediate: true, flush: \"post\" }) : noop;\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nconst defaultEvents = [\"mousedown\", \"mouseup\", \"keydown\", \"keyup\"];\nfunction useKeyModifier(modifier, options = {}) {\n  const {\n    events = defaultEvents,\n    document = defaultDocument,\n    initial = null\n  } = options;\n  const state = ref(initial);\n  if (document) {\n    events.forEach((listenerEvent) => {\n      useEventListener(document, listenerEvent, (evt) => {\n        if (typeof evt.getModifierState === \"function\")\n          state.value = evt.getModifierState(modifier);\n      });\n    });\n  }\n  return state;\n}\n\nfunction useLocalStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.localStorage, options);\n}\n\nconst DefaultMagicKeysAliasMap = {\n  ctrl: \"control\",\n  command: \"meta\",\n  cmd: \"meta\",\n  option: \"alt\",\n  up: \"arrowup\",\n  down: \"arrowdown\",\n  left: \"arrowleft\",\n  right: \"arrowright\"\n};\n\nfunction useMagicKeys(options = {}) {\n  const {\n    reactive: useReactive = false,\n    target = defaultWindow,\n    aliasMap = DefaultMagicKeysAliasMap,\n    passive = true,\n    onEventFired = noop\n  } = options;\n  const current = reactive(new Set());\n  const obj = { toJSON() {\n    return {};\n  }, current };\n  const refs = useReactive ? reactive(obj) : obj;\n  const metaDeps = new Set();\n  const usedKeys = new Set();\n  function setRefs(key, value) {\n    if (key in refs) {\n      if (useReactive)\n        refs[key] = value;\n      else\n        refs[key].value = value;\n    }\n  }\n  function reset() {\n    for (const key of usedKeys)\n      setRefs(key, false);\n  }\n  function updateRefs(e, value) {\n    var _a, _b;\n    const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();\n    const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();\n    const values = [code, key].filter(Boolean);\n    if (key) {\n      if (value)\n        current.add(key);\n      else\n        current.delete(key);\n    }\n    for (const key2 of values) {\n      usedKeys.add(key2);\n      setRefs(key2, value);\n    }\n    if (key === \"meta\" && !value) {\n      metaDeps.forEach((key2) => {\n        current.delete(key2);\n        setRefs(key2, false);\n      });\n      metaDeps.clear();\n    } else if (typeof e.getModifierState === \"function\" && e.getModifierState(\"Meta\") && value) {\n      [...current, ...values].forEach((key2) => metaDeps.add(key2));\n    }\n  }\n  useEventListener(target, \"keydown\", (e) => {\n    updateRefs(e, true);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(target, \"keyup\", (e) => {\n    updateRefs(e, false);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(\"blur\", reset, { passive: true });\n  useEventListener(\"focus\", reset, { passive: true });\n  const proxy = new Proxy(refs, {\n    get(target2, prop, rec) {\n      if (typeof prop !== \"string\")\n        return Reflect.get(target2, prop, rec);\n      prop = prop.toLowerCase();\n      if (prop in aliasMap)\n        prop = aliasMap[prop];\n      if (!(prop in refs)) {\n        if (/[+_-]/.test(prop)) {\n          const keys = prop.split(/[+_-]/g).map((i) => i.trim());\n          refs[prop] = computed(() => keys.every((key) => unref(proxy[key])));\n        } else {\n          refs[prop] = ref(false);\n        }\n      }\n      const r = Reflect.get(target2, prop, rec);\n      return useReactive ? unref(r) : r;\n    }\n  });\n  return proxy;\n}\n\nvar __defProp$7 = Object.defineProperty;\nvar __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$8 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$8 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$7 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$8.call(b, prop))\n      __defNormalProp$7(a, prop, b[prop]);\n  if (__getOwnPropSymbols$8)\n    for (var prop of __getOwnPropSymbols$8(b)) {\n      if (__propIsEnum$8.call(b, prop))\n        __defNormalProp$7(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction usingElRef(source, cb) {\n  if (resolveUnref(source))\n    cb(resolveUnref(source));\n}\nfunction timeRangeToArray(timeRanges) {\n  let ranges = [];\n  for (let i = 0; i < timeRanges.length; ++i)\n    ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];\n  return ranges;\n}\nfunction tracksToArray(tracks) {\n  return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));\n}\nconst defaultOptions = {\n  src: \"\",\n  tracks: []\n};\nfunction useMediaControls(target, options = {}) {\n  options = __spreadValues$7(__spreadValues$7({}, defaultOptions), options);\n  const {\n    document = defaultDocument\n  } = options;\n  const currentTime = ref(0);\n  const duration = ref(0);\n  const seeking = ref(false);\n  const volume = ref(1);\n  const waiting = ref(false);\n  const ended = ref(false);\n  const playing = ref(false);\n  const rate = ref(1);\n  const stalled = ref(false);\n  const buffered = ref([]);\n  const tracks = ref([]);\n  const selectedTrack = ref(-1);\n  const isPictureInPicture = ref(false);\n  const muted = ref(false);\n  const supportsPictureInPicture = document && \"pictureInPictureEnabled\" in document;\n  const sourceErrorEvent = createEventHook();\n  const disableTrack = (track) => {\n    usingElRef(target, (el) => {\n      if (track) {\n        const id = isNumber(track) ? track : track.id;\n        el.textTracks[id].mode = \"disabled\";\n      } else {\n        for (let i = 0; i < el.textTracks.length; ++i)\n          el.textTracks[i].mode = \"disabled\";\n      }\n      selectedTrack.value = -1;\n    });\n  };\n  const enableTrack = (track, disableTracks = true) => {\n    usingElRef(target, (el) => {\n      const id = isNumber(track) ? track : track.id;\n      if (disableTracks)\n        disableTrack();\n      el.textTracks[id].mode = \"showing\";\n      selectedTrack.value = id;\n    });\n  };\n  const togglePictureInPicture = () => {\n    return new Promise((resolve, reject) => {\n      usingElRef(target, async (el) => {\n        if (supportsPictureInPicture) {\n          if (!isPictureInPicture.value) {\n            el.requestPictureInPicture().then(resolve).catch(reject);\n          } else {\n            document.exitPictureInPicture().then(resolve).catch(reject);\n          }\n        }\n      });\n    });\n  };\n  watchEffect(() => {\n    if (!document)\n      return;\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    const src = resolveUnref(options.src);\n    let sources = [];\n    if (!src)\n      return;\n    if (isString(src))\n      sources = [{ src }];\n    else if (Array.isArray(src))\n      sources = src;\n    else if (isObject(src))\n      sources = [src];\n    el.querySelectorAll(\"source\").forEach((e) => {\n      e.removeEventListener(\"error\", sourceErrorEvent.trigger);\n      e.remove();\n    });\n    sources.forEach(({ src: src2, type }) => {\n      const source = document.createElement(\"source\");\n      source.setAttribute(\"src\", src2);\n      source.setAttribute(\"type\", type || \"\");\n      source.addEventListener(\"error\", sourceErrorEvent.trigger);\n      el.appendChild(source);\n    });\n    el.load();\n  });\n  tryOnScopeDispose(() => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.querySelectorAll(\"source\").forEach((e) => e.removeEventListener(\"error\", sourceErrorEvent.trigger));\n  });\n  watch(volume, (vol) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.volume = vol;\n  });\n  watch(muted, (mute) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.muted = mute;\n  });\n  watch(rate, (rate2) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.playbackRate = rate2;\n  });\n  watchEffect(() => {\n    if (!document)\n      return;\n    const textTracks = resolveUnref(options.tracks);\n    const el = resolveUnref(target);\n    if (!textTracks || !textTracks.length || !el)\n      return;\n    el.querySelectorAll(\"track\").forEach((e) => e.remove());\n    textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {\n      const track = document.createElement(\"track\");\n      track.default = isDefault || false;\n      track.kind = kind;\n      track.label = label;\n      track.src = src;\n      track.srclang = srcLang;\n      if (track.default)\n        selectedTrack.value = i;\n      el.appendChild(track);\n    });\n  });\n  const { ignoreUpdates: ignoreCurrentTimeUpdates } = watchIgnorable(currentTime, (time) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    el.currentTime = time;\n  });\n  const { ignoreUpdates: ignorePlayingUpdates } = watchIgnorable(playing, (isPlaying) => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    isPlaying ? el.play() : el.pause();\n  });\n  useEventListener(target, \"timeupdate\", () => ignoreCurrentTimeUpdates(() => currentTime.value = resolveUnref(target).currentTime));\n  useEventListener(target, \"durationchange\", () => duration.value = resolveUnref(target).duration);\n  useEventListener(target, \"progress\", () => buffered.value = timeRangeToArray(resolveUnref(target).buffered));\n  useEventListener(target, \"seeking\", () => seeking.value = true);\n  useEventListener(target, \"seeked\", () => seeking.value = false);\n  useEventListener(target, \"waiting\", () => waiting.value = true);\n  useEventListener(target, \"playing\", () => waiting.value = false);\n  useEventListener(target, \"ratechange\", () => rate.value = resolveUnref(target).playbackRate);\n  useEventListener(target, \"stalled\", () => stalled.value = true);\n  useEventListener(target, \"ended\", () => ended.value = true);\n  useEventListener(target, \"pause\", () => ignorePlayingUpdates(() => playing.value = false));\n  useEventListener(target, \"play\", () => ignorePlayingUpdates(() => playing.value = true));\n  useEventListener(target, \"enterpictureinpicture\", () => isPictureInPicture.value = true);\n  useEventListener(target, \"leavepictureinpicture\", () => isPictureInPicture.value = false);\n  useEventListener(target, \"volumechange\", () => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    volume.value = el.volume;\n    muted.value = el.muted;\n  });\n  const listeners = [];\n  const stop = watch([target], () => {\n    const el = resolveUnref(target);\n    if (!el)\n      return;\n    stop();\n    listeners[0] = useEventListener(el.textTracks, \"addtrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[1] = useEventListener(el.textTracks, \"removetrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[2] = useEventListener(el.textTracks, \"change\", () => tracks.value = tracksToArray(el.textTracks));\n  });\n  tryOnScopeDispose(() => listeners.forEach((listener) => listener()));\n  return {\n    currentTime,\n    duration,\n    waiting,\n    seeking,\n    ended,\n    stalled,\n    buffered,\n    playing,\n    rate,\n    volume,\n    muted,\n    tracks,\n    selectedTrack,\n    enableTrack,\n    disableTrack,\n    supportsPictureInPicture,\n    togglePictureInPicture,\n    isPictureInPicture,\n    onSourceError: sourceErrorEvent.on\n  };\n}\n\nconst getMapVue2Compat = () => {\n  const data = reactive({});\n  return {\n    get: (key) => data[key],\n    set: (key, value) => set(data, key, value),\n    has: (key) => hasOwn(data, key),\n    delete: (key) => del(data, key),\n    clear: () => {\n      Object.keys(data).forEach((key) => {\n        del(data, key);\n      });\n    }\n  };\n};\nfunction useMemoize(resolver, options) {\n  const initCache = () => {\n    if (options == null ? void 0 : options.cache)\n      return reactive(options.cache);\n    if (isVue2)\n      return getMapVue2Compat();\n    return reactive(new Map());\n  };\n  const cache = initCache();\n  const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);\n  const _loadData = (key, ...args) => {\n    cache.set(key, resolver(...args));\n    return cache.get(key);\n  };\n  const loadData = (...args) => _loadData(generateKey(...args), ...args);\n  const deleteData = (...args) => {\n    cache.delete(generateKey(...args));\n  };\n  const clearData = () => {\n    cache.clear();\n  };\n  const memoized = (...args) => {\n    const key = generateKey(...args);\n    if (cache.has(key))\n      return cache.get(key);\n    return _loadData(key, ...args);\n  };\n  memoized.load = loadData;\n  memoized.delete = deleteData;\n  memoized.clear = clearData;\n  memoized.generateKey = generateKey;\n  memoized.cache = cache;\n  return memoized;\n}\n\nfunction useMemory(options = {}) {\n  const memory = ref();\n  const isSupported = useSupported(() => typeof performance !== \"undefined\" && \"memory\" in performance);\n  if (isSupported.value) {\n    const { interval = 1e3 } = options;\n    useIntervalFn(() => {\n      memory.value = performance.memory;\n    }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });\n  }\n  return { isSupported, memory };\n}\n\nfunction useMounted() {\n  const isMounted = ref(false);\n  onMounted(() => {\n    isMounted.value = true;\n  });\n  return isMounted;\n}\n\nfunction useMouse(options = {}) {\n  const {\n    type = \"page\",\n    touch = true,\n    resetOnTouchEnds = false,\n    initialValue = { x: 0, y: 0 },\n    window = defaultWindow,\n    eventFilter\n  } = options;\n  const x = ref(initialValue.x);\n  const y = ref(initialValue.y);\n  const sourceType = ref(null);\n  const mouseHandler = (event) => {\n    if (type === \"page\") {\n      x.value = event.pageX;\n      y.value = event.pageY;\n    } else if (type === \"client\") {\n      x.value = event.clientX;\n      y.value = event.clientY;\n    }\n    sourceType.value = \"mouse\";\n  };\n  const reset = () => {\n    x.value = initialValue.x;\n    y.value = initialValue.y;\n  };\n  const touchHandler = (event) => {\n    if (event.touches.length > 0) {\n      const touch2 = event.touches[0];\n      if (type === \"page\") {\n        x.value = touch2.pageX;\n        y.value = touch2.pageY;\n      } else if (type === \"client\") {\n        x.value = touch2.clientX;\n        y.value = touch2.clientY;\n      }\n      sourceType.value = \"touch\";\n    }\n  };\n  const mouseHandlerWrapper = (event) => {\n    return eventFilter === void 0 ? mouseHandler(event) : eventFilter(() => mouseHandler(event), {});\n  };\n  const touchHandlerWrapper = (event) => {\n    return eventFilter === void 0 ? touchHandler(event) : eventFilter(() => touchHandler(event), {});\n  };\n  if (window) {\n    useEventListener(window, \"mousemove\", mouseHandlerWrapper, { passive: true });\n    useEventListener(window, \"dragover\", mouseHandlerWrapper, { passive: true });\n    if (touch) {\n      useEventListener(window, \"touchstart\", touchHandlerWrapper, { passive: true });\n      useEventListener(window, \"touchmove\", touchHandlerWrapper, { passive: true });\n      if (resetOnTouchEnds)\n        useEventListener(window, \"touchend\", reset, { passive: true });\n    }\n  }\n  return {\n    x,\n    y,\n    sourceType\n  };\n}\n\nfunction useMouseInElement(target, options = {}) {\n  const {\n    handleOutside = true,\n    window = defaultWindow\n  } = options;\n  const { x, y, sourceType } = useMouse(options);\n  const targetRef = ref(target != null ? target : window == null ? void 0 : window.document.body);\n  const elementX = ref(0);\n  const elementY = ref(0);\n  const elementPositionX = ref(0);\n  const elementPositionY = ref(0);\n  const elementHeight = ref(0);\n  const elementWidth = ref(0);\n  const isOutside = ref(true);\n  let stop = () => {\n  };\n  if (window) {\n    stop = watch([targetRef, x, y], () => {\n      const el = unrefElement(targetRef);\n      if (!el)\n        return;\n      const {\n        left,\n        top,\n        width,\n        height\n      } = el.getBoundingClientRect();\n      elementPositionX.value = left + window.pageXOffset;\n      elementPositionY.value = top + window.pageYOffset;\n      elementHeight.value = height;\n      elementWidth.value = width;\n      const elX = x.value - elementPositionX.value;\n      const elY = y.value - elementPositionY.value;\n      isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;\n      if (handleOutside || !isOutside.value) {\n        elementX.value = elX;\n        elementY.value = elY;\n      }\n    }, { immediate: true });\n  }\n  return {\n    x,\n    y,\n    sourceType,\n    elementX,\n    elementY,\n    elementPositionX,\n    elementPositionY,\n    elementHeight,\n    elementWidth,\n    isOutside,\n    stop\n  };\n}\n\nfunction useMousePressed(options = {}) {\n  const {\n    touch = true,\n    drag = true,\n    initialValue = false,\n    window = defaultWindow\n  } = options;\n  const pressed = ref(initialValue);\n  const sourceType = ref(null);\n  if (!window) {\n    return {\n      pressed,\n      sourceType\n    };\n  }\n  const onPressed = (srcType) => () => {\n    pressed.value = true;\n    sourceType.value = srcType;\n  };\n  const onReleased = () => {\n    pressed.value = false;\n    sourceType.value = null;\n  };\n  const target = computed(() => unrefElement(options.target) || window);\n  useEventListener(target, \"mousedown\", onPressed(\"mouse\"), { passive: true });\n  useEventListener(window, \"mouseleave\", onReleased, { passive: true });\n  useEventListener(window, \"mouseup\", onReleased, { passive: true });\n  if (drag) {\n    useEventListener(target, \"dragstart\", onPressed(\"mouse\"), { passive: true });\n    useEventListener(window, \"drop\", onReleased, { passive: true });\n    useEventListener(window, \"dragend\", onReleased, { passive: true });\n  }\n  if (touch) {\n    useEventListener(target, \"touchstart\", onPressed(\"touch\"), { passive: true });\n    useEventListener(window, \"touchend\", onReleased, { passive: true });\n    useEventListener(window, \"touchcancel\", onReleased, { passive: true });\n  }\n  return {\n    pressed,\n    sourceType\n  };\n}\n\nvar __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$7 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$7 = Object.prototype.propertyIsEnumerable;\nvar __objRest$1 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$7.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$7)\n    for (var prop of __getOwnPropSymbols$7(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$7.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction useMutationObserver(target, callback, options = {}) {\n  const _a = options, { window = defaultWindow } = _a, mutationOptions = __objRest$1(_a, [\"window\"]);\n  let observer;\n  const isSupported = useSupported(() => window && \"MutationObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const stopWatch = watch(() => unrefElement(target), (el) => {\n    cleanup();\n    if (isSupported.value && window && el) {\n      observer = new MutationObserver(callback);\n      observer.observe(el, mutationOptions);\n    }\n  }, { immediate: true });\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nconst useNavigatorLanguage = (options = {}) => {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"language\" in navigator);\n  const language = ref(navigator == null ? void 0 : navigator.language);\n  useEventListener(window, \"languagechange\", () => {\n    if (navigator)\n      language.value = navigator.language;\n  });\n  return {\n    isSupported,\n    language\n  };\n};\n\nfunction useNetwork(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"connection\" in navigator);\n  const isOnline = ref(true);\n  const saveData = ref(false);\n  const offlineAt = ref(void 0);\n  const onlineAt = ref(void 0);\n  const downlink = ref(void 0);\n  const downlinkMax = ref(void 0);\n  const rtt = ref(void 0);\n  const effectiveType = ref(void 0);\n  const type = ref(\"unknown\");\n  const connection = isSupported.value && navigator.connection;\n  function updateNetworkInformation() {\n    if (!navigator)\n      return;\n    isOnline.value = navigator.onLine;\n    offlineAt.value = isOnline.value ? void 0 : Date.now();\n    onlineAt.value = isOnline.value ? Date.now() : void 0;\n    if (connection) {\n      downlink.value = connection.downlink;\n      downlinkMax.value = connection.downlinkMax;\n      effectiveType.value = connection.effectiveType;\n      rtt.value = connection.rtt;\n      saveData.value = connection.saveData;\n      type.value = connection.type;\n    }\n  }\n  if (window) {\n    useEventListener(window, \"offline\", () => {\n      isOnline.value = false;\n      offlineAt.value = Date.now();\n    });\n    useEventListener(window, \"online\", () => {\n      isOnline.value = true;\n      onlineAt.value = Date.now();\n    });\n  }\n  if (connection)\n    useEventListener(connection, \"change\", updateNetworkInformation, false);\n  updateNetworkInformation();\n  return {\n    isSupported,\n    isOnline,\n    saveData,\n    offlineAt,\n    onlineAt,\n    downlink,\n    downlinkMax,\n    effectiveType,\n    rtt,\n    type\n  };\n}\n\nvar __defProp$6 = Object.defineProperty;\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$6 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$6.call(b, prop))\n      __defNormalProp$6(a, prop, b[prop]);\n  if (__getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(b)) {\n      if (__propIsEnum$6.call(b, prop))\n        __defNormalProp$6(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useNow(options = {}) {\n  const {\n    controls: exposeControls = false,\n    interval = \"requestAnimationFrame\"\n  } = options;\n  const now = ref(new Date());\n  const update = () => now.value = new Date();\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(update, { immediate: true }) : useIntervalFn(update, interval, { immediate: true });\n  if (exposeControls) {\n    return __spreadValues$6({\n      now\n    }, controls);\n  } else {\n    return now;\n  }\n}\n\nfunction useObjectUrl(object) {\n  const url = ref();\n  const release = () => {\n    if (url.value)\n      URL.revokeObjectURL(url.value);\n    url.value = void 0;\n  };\n  watch(() => unref(object), (newObject) => {\n    release();\n    if (newObject)\n      url.value = URL.createObjectURL(newObject);\n  }, { immediate: true });\n  tryOnScopeDispose(release);\n  return readonly(url);\n}\n\nfunction useClamp(value, min, max) {\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, resolveUnref(min), resolveUnref(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, resolveUnref(min), resolveUnref(max));\n    }\n  });\n}\n\nfunction useOffsetPagination(options) {\n  const {\n    total = Infinity,\n    pageSize = 10,\n    page = 1,\n    onPageChange = noop,\n    onPageSizeChange = noop,\n    onPageCountChange = noop\n  } = options;\n  const currentPageSize = useClamp(pageSize, 1, Infinity);\n  const pageCount = computed(() => Math.max(1, Math.ceil(unref(total) / unref(currentPageSize))));\n  const currentPage = useClamp(page, 1, pageCount);\n  const isFirstPage = computed(() => currentPage.value === 1);\n  const isLastPage = computed(() => currentPage.value === pageCount.value);\n  if (isRef(page))\n    syncRef(page, currentPage);\n  if (isRef(pageSize))\n    syncRef(pageSize, currentPageSize);\n  function prev() {\n    currentPage.value--;\n  }\n  function next() {\n    currentPage.value++;\n  }\n  const returnValue = {\n    currentPage,\n    currentPageSize,\n    pageCount,\n    isFirstPage,\n    isLastPage,\n    prev,\n    next\n  };\n  watch(currentPage, () => {\n    onPageChange(reactive(returnValue));\n  });\n  watch(currentPageSize, () => {\n    onPageSizeChange(reactive(returnValue));\n  });\n  watch(pageCount, () => {\n    onPageCountChange(reactive(returnValue));\n  });\n  return returnValue;\n}\n\nfunction useOnline(options = {}) {\n  const { isOnline } = useNetwork(options);\n  return isOnline;\n}\n\nfunction usePageLeave(options = {}) {\n  const { window = defaultWindow } = options;\n  const isLeft = ref(false);\n  const handler = (event) => {\n    if (!window)\n      return;\n    event = event || window.event;\n    const from = event.relatedTarget || event.toElement;\n    isLeft.value = !from;\n  };\n  if (window) {\n    useEventListener(window, \"mouseout\", handler, { passive: true });\n    useEventListener(window.document, \"mouseleave\", handler, { passive: true });\n    useEventListener(window.document, \"mouseenter\", handler, { passive: true });\n  }\n  return isLeft;\n}\n\nfunction useParallax(target, options = {}) {\n  const {\n    deviceOrientationTiltAdjust = (i) => i,\n    deviceOrientationRollAdjust = (i) => i,\n    mouseTiltAdjust = (i) => i,\n    mouseRollAdjust = (i) => i,\n    window = defaultWindow\n  } = options;\n  const orientation = reactive(useDeviceOrientation({ window }));\n  const {\n    elementX: x,\n    elementY: y,\n    elementWidth: width,\n    elementHeight: height\n  } = useMouseInElement(target, { handleOutside: false, window });\n  const source = computed(() => {\n    if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0))\n      return \"deviceOrientation\";\n    return \"mouse\";\n  });\n  const roll = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      const value = -orientation.beta / 90;\n      return deviceOrientationRollAdjust(value);\n    } else {\n      const value = -(y.value - height.value / 2) / height.value;\n      return mouseRollAdjust(value);\n    }\n  });\n  const tilt = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      const value = orientation.gamma / 90;\n      return deviceOrientationTiltAdjust(value);\n    } else {\n      const value = (x.value - width.value / 2) / width.value;\n      return mouseTiltAdjust(value);\n    }\n  });\n  return { roll, tilt, source };\n}\n\nvar __defProp$5 = Object.defineProperty;\nvar __defProps$1 = Object.defineProperties;\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$5 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$5 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$5 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$5.call(b, prop))\n      __defNormalProp$5(a, prop, b[prop]);\n  if (__getOwnPropSymbols$5)\n    for (var prop of __getOwnPropSymbols$5(b)) {\n      if (__propIsEnum$5.call(b, prop))\n        __defNormalProp$5(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nconst defaultState = {\n  x: 0,\n  y: 0,\n  pointerId: 0,\n  pressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  width: 0,\n  height: 0,\n  twist: 0,\n  pointerType: null\n};\nconst keys = /* @__PURE__ */ Object.keys(defaultState);\nfunction usePointer(options = {}) {\n  const {\n    target = defaultWindow\n  } = options;\n  const isInside = ref(false);\n  const state = ref(options.initialValue || {});\n  Object.assign(state.value, defaultState, state.value);\n  const handler = (event) => {\n    isInside.value = true;\n    if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))\n      return;\n    state.value = objectPick(event, keys, false);\n  };\n  if (target) {\n    useEventListener(target, \"pointerdown\", handler, { passive: true });\n    useEventListener(target, \"pointermove\", handler, { passive: true });\n    useEventListener(target, \"pointerleave\", () => isInside.value = false, { passive: true });\n  }\n  return __spreadProps$1(__spreadValues$5({}, toRefs(state)), {\n    isInside\n  });\n}\n\nvar SwipeDirection;\n(function(SwipeDirection2) {\n  SwipeDirection2[\"UP\"] = \"UP\";\n  SwipeDirection2[\"RIGHT\"] = \"RIGHT\";\n  SwipeDirection2[\"DOWN\"] = \"DOWN\";\n  SwipeDirection2[\"LEFT\"] = \"LEFT\";\n  SwipeDirection2[\"NONE\"] = \"NONE\";\n})(SwipeDirection || (SwipeDirection = {}));\nfunction useSwipe(target, options = {}) {\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart,\n    passive = true,\n    window = defaultWindow\n  } = options;\n  const coordsStart = reactive({ x: 0, y: 0 });\n  const coordsEnd = reactive({ x: 0, y: 0 });\n  const diffX = computed(() => coordsStart.x - coordsEnd.x);\n  const diffY = computed(() => coordsStart.y - coordsEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return SwipeDirection.NONE;\n    if (abs(diffX.value) > abs(diffY.value)) {\n      return diffX.value > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT;\n    } else {\n      return diffY.value > 0 ? SwipeDirection.UP : SwipeDirection.DOWN;\n    }\n  });\n  const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];\n  const updateCoordsStart = (x, y) => {\n    coordsStart.x = x;\n    coordsStart.y = y;\n  };\n  const updateCoordsEnd = (x, y) => {\n    coordsEnd.x = x;\n    coordsEnd.y = y;\n  };\n  let listenerOptions;\n  const isPassiveEventSupported = checkPassiveEventSupport(window == null ? void 0 : window.document);\n  if (!passive)\n    listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };\n  else\n    listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };\n  const onTouchEnd = (e) => {\n    if (isSwiping.value)\n      onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n    isSwiping.value = false;\n  };\n  const stops = [\n    useEventListener(target, \"touchstart\", (e) => {\n      if (listenerOptions.capture && !listenerOptions.passive)\n        e.preventDefault();\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsStart(x, y);\n      updateCoordsEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }, listenerOptions),\n    useEventListener(target, \"touchmove\", (e) => {\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }, listenerOptions),\n    useEventListener(target, \"touchend\", onTouchEnd, listenerOptions),\n    useEventListener(target, \"touchcancel\", onTouchEnd, listenerOptions)\n  ];\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isPassiveEventSupported,\n    isSwiping,\n    direction,\n    coordsStart,\n    coordsEnd,\n    lengthX: diffX,\n    lengthY: diffY,\n    stop\n  };\n}\nfunction checkPassiveEventSupport(document) {\n  if (!document)\n    return false;\n  let supportsPassive = false;\n  const optionsBlock = {\n    get passive() {\n      supportsPassive = true;\n      return false;\n    }\n  };\n  document.addEventListener(\"x\", noop, optionsBlock);\n  document.removeEventListener(\"x\", noop);\n  return supportsPassive;\n}\n\nfunction usePointerSwipe(target, options = {}) {\n  const targetRef = resolveRef(target);\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart\n  } = options;\n  const posStart = reactive({ x: 0, y: 0 });\n  const updatePosStart = (x, y) => {\n    posStart.x = x;\n    posStart.y = y;\n  };\n  const posEnd = reactive({ x: 0, y: 0 });\n  const updatePosEnd = (x, y) => {\n    posEnd.x = x;\n    posEnd.y = y;\n  };\n  const distanceX = computed(() => posStart.x - posEnd.x);\n  const distanceY = computed(() => posStart.y - posEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const isPointerDown = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return SwipeDirection.NONE;\n    if (abs(distanceX.value) > abs(distanceY.value)) {\n      return distanceX.value > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT;\n    } else {\n      return distanceY.value > 0 ? SwipeDirection.UP : SwipeDirection.DOWN;\n    }\n  });\n  const filterEvent = (e) => {\n    if (options.pointerTypes)\n      return options.pointerTypes.includes(e.pointerType);\n    return true;\n  };\n  const stops = [\n    useEventListener(target, \"pointerdown\", (e) => {\n      var _a, _b;\n      if (!filterEvent(e))\n        return;\n      isPointerDown.value = true;\n      (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"none\");\n      const eventTarget = e.target;\n      eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);\n      const { clientX: x, clientY: y } = e;\n      updatePosStart(x, y);\n      updatePosEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }),\n    useEventListener(target, \"pointermove\", (e) => {\n      if (!filterEvent(e))\n        return;\n      if (!isPointerDown.value)\n        return;\n      const { clientX: x, clientY: y } = e;\n      updatePosEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }),\n    useEventListener(target, \"pointerup\", (e) => {\n      var _a, _b;\n      if (!filterEvent(e))\n        return;\n      if (isSwiping.value)\n        onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n      isPointerDown.value = false;\n      isSwiping.value = false;\n      (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"initial\");\n    })\n  ];\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isSwiping: readonly(isSwiping),\n    direction: readonly(direction),\n    posStart: readonly(posStart),\n    posEnd: readonly(posEnd),\n    distanceX,\n    distanceY,\n    stop\n  };\n}\n\nfunction usePreferredColorScheme(options) {\n  const isLight = useMediaQuery(\"(prefers-color-scheme: light)\", options);\n  const isDark = useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n  return computed(() => {\n    if (isDark.value)\n      return \"dark\";\n    if (isLight.value)\n      return \"light\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredContrast(options) {\n  const isMore = useMediaQuery(\"(prefers-contrast: more)\", options);\n  const isLess = useMediaQuery(\"(prefers-contrast: less)\", options);\n  const isCustom = useMediaQuery(\"(prefers-contrast: custom)\", options);\n  return computed(() => {\n    if (isMore.value)\n      return \"more\";\n    if (isLess.value)\n      return \"less\";\n    if (isCustom.value)\n      return \"custom\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredLanguages(options = {}) {\n  const { window = defaultWindow } = options;\n  if (!window)\n    return ref([\"en\"]);\n  const navigator = window.navigator;\n  const value = ref(navigator.languages);\n  useEventListener(window, \"languagechange\", () => {\n    value.value = navigator.languages;\n  });\n  return value;\n}\n\nfunction usePreferredReducedMotion(options) {\n  const isReduced = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return computed(() => {\n    if (isReduced.value)\n      return \"reduce\";\n    return \"no-preference\";\n  });\n}\n\nconst useScreenOrientation = (options = {}) => {\n  const {\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"screen\" in window && \"orientation\" in window.screen);\n  const screenOrientation = isSupported.value ? window.screen.orientation : {};\n  const orientation = ref(screenOrientation.type);\n  const angle = ref(screenOrientation.angle || 0);\n  if (isSupported.value) {\n    useEventListener(window, \"orientationchange\", () => {\n      orientation.value = screenOrientation.type;\n      angle.value = screenOrientation.angle;\n    });\n  }\n  const lockOrientation = (type) => {\n    if (!isSupported.value)\n      return Promise.reject(new Error(\"Not supported\"));\n    return screenOrientation.lock(type);\n  };\n  const unlockOrientation = () => {\n    if (isSupported.value)\n      screenOrientation.unlock();\n  };\n  return {\n    isSupported,\n    orientation,\n    angle,\n    lockOrientation,\n    unlockOrientation\n  };\n};\n\nconst topVarName = \"--vueuse-safe-area-top\";\nconst rightVarName = \"--vueuse-safe-area-right\";\nconst bottomVarName = \"--vueuse-safe-area-bottom\";\nconst leftVarName = \"--vueuse-safe-area-left\";\nfunction useScreenSafeArea() {\n  const top = ref(\"\");\n  const right = ref(\"\");\n  const bottom = ref(\"\");\n  const left = ref(\"\");\n  if (isClient) {\n    const topCssVar = useCssVar(topVarName);\n    const rightCssVar = useCssVar(rightVarName);\n    const bottomCssVar = useCssVar(bottomVarName);\n    const leftCssVar = useCssVar(leftVarName);\n    topCssVar.value = \"env(safe-area-inset-top, 0px)\";\n    rightCssVar.value = \"env(safe-area-inset-right, 0px)\";\n    bottomCssVar.value = \"env(safe-area-inset-bottom, 0px)\";\n    leftCssVar.value = \"env(safe-area-inset-left, 0px)\";\n    update();\n    useEventListener(\"resize\", useDebounceFn(update));\n  }\n  function update() {\n    top.value = getValue(topVarName);\n    right.value = getValue(rightVarName);\n    bottom.value = getValue(bottomVarName);\n    left.value = getValue(leftVarName);\n  }\n  return {\n    top,\n    right,\n    bottom,\n    left,\n    update\n  };\n}\nfunction getValue(position) {\n  return getComputedStyle(document.documentElement).getPropertyValue(position);\n}\n\nfunction useScriptTag(src, onLoaded = noop, options = {}) {\n  const {\n    immediate = true,\n    manual = false,\n    type = \"text/javascript\",\n    async = true,\n    crossOrigin,\n    referrerPolicy,\n    noModule,\n    defer,\n    document = defaultDocument,\n    attrs = {}\n  } = options;\n  const scriptTag = ref(null);\n  let _promise = null;\n  const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {\n    const resolveWithElement = (el2) => {\n      scriptTag.value = el2;\n      resolve(el2);\n      return el2;\n    };\n    if (!document) {\n      resolve(false);\n      return;\n    }\n    let shouldAppend = false;\n    let el = document.querySelector(`script[src=\"${resolveUnref(src)}\"]`);\n    if (!el) {\n      el = document.createElement(\"script\");\n      el.type = type;\n      el.async = async;\n      el.src = resolveUnref(src);\n      if (defer)\n        el.defer = defer;\n      if (crossOrigin)\n        el.crossOrigin = crossOrigin;\n      if (noModule)\n        el.noModule = noModule;\n      if (referrerPolicy)\n        el.referrerPolicy = referrerPolicy;\n      Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));\n      shouldAppend = true;\n    } else if (el.hasAttribute(\"data-loaded\")) {\n      resolveWithElement(el);\n    }\n    el.addEventListener(\"error\", (event) => reject(event));\n    el.addEventListener(\"abort\", (event) => reject(event));\n    el.addEventListener(\"load\", () => {\n      el.setAttribute(\"data-loaded\", \"true\");\n      onLoaded(el);\n      resolveWithElement(el);\n    });\n    if (shouldAppend)\n      el = document.head.appendChild(el);\n    if (!waitForScriptLoad)\n      resolveWithElement(el);\n  });\n  const load = (waitForScriptLoad = true) => {\n    if (!_promise)\n      _promise = loadScript(waitForScriptLoad);\n    return _promise;\n  };\n  const unload = () => {\n    if (!document)\n      return;\n    _promise = null;\n    if (scriptTag.value)\n      scriptTag.value = null;\n    const el = document.querySelector(`script[src=\"${resolveUnref(src)}\"]`);\n    if (el)\n      document.head.removeChild(el);\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnUnmounted(unload);\n  return { scriptTag, load, unload };\n}\n\nfunction preventDefault(rawEvent) {\n  const e = rawEvent || window.event;\n  if (e.touches.length > 1)\n    return true;\n  if (e.preventDefault)\n    e.preventDefault();\n  return false;\n}\nfunction useScrollLock(element, initialState = false) {\n  const isLocked = ref(initialState);\n  let stopTouchMoveListener = null;\n  let initialOverflow;\n  watch(resolveRef(element), (el) => {\n    if (el) {\n      const ele = el;\n      initialOverflow = ele.style.overflow;\n      if (isLocked.value)\n        ele.style.overflow = \"hidden\";\n    }\n  }, {\n    immediate: true\n  });\n  const lock = () => {\n    const ele = resolveUnref(element);\n    if (!ele || isLocked.value)\n      return;\n    if (isIOS) {\n      stopTouchMoveListener = useEventListener(ele, \"touchmove\", preventDefault, { passive: false });\n    }\n    ele.style.overflow = \"hidden\";\n    isLocked.value = true;\n  };\n  const unlock = () => {\n    const ele = resolveUnref(element);\n    if (!ele || !isLocked.value)\n      return;\n    isIOS && (stopTouchMoveListener == null ? void 0 : stopTouchMoveListener());\n    ele.style.overflow = initialOverflow;\n    isLocked.value = false;\n  };\n  tryOnScopeDispose(unlock);\n  return computed({\n    get() {\n      return isLocked.value;\n    },\n    set(v) {\n      if (v)\n        lock();\n      else\n        unlock();\n    }\n  });\n}\n\nfunction useSessionStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.sessionStorage, options);\n}\n\nvar __defProp$4 = Object.defineProperty;\nvar __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$4 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$4 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$4 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$4.call(b, prop))\n      __defNormalProp$4(a, prop, b[prop]);\n  if (__getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(b)) {\n      if (__propIsEnum$4.call(b, prop))\n        __defNormalProp$4(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useShare(shareOptions = {}, options = {}) {\n  const { navigator = defaultNavigator } = options;\n  const _navigator = navigator;\n  const isSupported = useSupported(() => _navigator && \"canShare\" in _navigator);\n  const share = async (overrideOptions = {}) => {\n    if (isSupported.value) {\n      const data = __spreadValues$4(__spreadValues$4({}, resolveUnref(shareOptions)), resolveUnref(overrideOptions));\n      let granted = true;\n      if (data.files && _navigator.canShare)\n        granted = _navigator.canShare({ files: data.files });\n      if (granted)\n        return _navigator.share(data);\n    }\n  };\n  return {\n    isSupported,\n    share\n  };\n}\n\nfunction useSpeechRecognition(options = {}) {\n  const {\n    interimResults = true,\n    continuous = true,\n    window = defaultWindow\n  } = options;\n  const lang = resolveRef(options.lang || \"en-US\");\n  const isListening = ref(false);\n  const isFinal = ref(false);\n  const result = ref(\"\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isListening.value) => {\n    isListening.value = value;\n  };\n  const start = () => {\n    isListening.value = true;\n  };\n  const stop = () => {\n    isListening.value = false;\n  };\n  const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);\n  const isSupported = useSupported(() => SpeechRecognition);\n  let recognition;\n  if (isSupported.value) {\n    recognition = new SpeechRecognition();\n    recognition.continuous = continuous;\n    recognition.interimResults = interimResults;\n    recognition.lang = unref(lang);\n    recognition.onstart = () => {\n      isFinal.value = false;\n    };\n    watch(lang, (lang2) => {\n      if (recognition && !isListening.value)\n        recognition.lang = lang2;\n    });\n    recognition.onresult = (event) => {\n      const transcript = Array.from(event.results).map((result2) => {\n        isFinal.value = result2.isFinal;\n        return result2[0];\n      }).map((result2) => result2.transcript).join(\"\");\n      result.value = transcript;\n      error.value = void 0;\n    };\n    recognition.onerror = (event) => {\n      error.value = event;\n    };\n    recognition.onend = () => {\n      isListening.value = false;\n      recognition.lang = unref(lang);\n    };\n    watch(isListening, () => {\n      if (isListening.value)\n        recognition.start();\n      else\n        recognition.stop();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isListening.value = false;\n  });\n  return {\n    isSupported,\n    isListening,\n    isFinal,\n    recognition,\n    result,\n    error,\n    toggle,\n    start,\n    stop\n  };\n}\n\nfunction useSpeechSynthesis(text, options = {}) {\n  const {\n    pitch = 1,\n    rate = 1,\n    volume = 1,\n    window = defaultWindow\n  } = options;\n  const synth = window && window.speechSynthesis;\n  const isSupported = useSupported(() => synth);\n  const isPlaying = ref(false);\n  const status = ref(\"init\");\n  const spokenText = resolveRef(text || \"\");\n  const lang = resolveRef(options.lang || \"en-US\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isPlaying.value) => {\n    isPlaying.value = value;\n  };\n  const bindEventsForUtterance = (utterance2) => {\n    utterance2.lang = unref(lang);\n    utterance2.voice = unref(options.voice) || null;\n    utterance2.pitch = pitch;\n    utterance2.rate = rate;\n    utterance2.volume = volume;\n    utterance2.onstart = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onpause = () => {\n      isPlaying.value = false;\n      status.value = \"pause\";\n    };\n    utterance2.onresume = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onend = () => {\n      isPlaying.value = false;\n      status.value = \"end\";\n    };\n    utterance2.onerror = (event) => {\n      error.value = event;\n    };\n  };\n  const utterance = computed(() => {\n    isPlaying.value = false;\n    status.value = \"init\";\n    const newUtterance = new SpeechSynthesisUtterance(spokenText.value);\n    bindEventsForUtterance(newUtterance);\n    return newUtterance;\n  });\n  const speak = () => {\n    synth.cancel();\n    utterance && synth.speak(utterance.value);\n  };\n  if (isSupported.value) {\n    bindEventsForUtterance(utterance.value);\n    watch(lang, (lang2) => {\n      if (utterance.value && !isPlaying.value)\n        utterance.value.lang = lang2;\n    });\n    if (options.voice) {\n      watch(options.voice, () => {\n        synth.cancel();\n      });\n    }\n    watch(isPlaying, () => {\n      if (isPlaying.value)\n        synth.resume();\n      else\n        synth.pause();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isPlaying.value = false;\n  });\n  return {\n    isSupported,\n    isPlaying,\n    status,\n    utterance,\n    error,\n    toggle,\n    speak\n  };\n}\n\nfunction useStepper(steps, initialStep) {\n  const stepsRef = ref(steps);\n  const stepNames = computed(() => Array.isArray(stepsRef.value) ? stepsRef.value : Object.keys(stepsRef.value));\n  const index = ref(stepNames.value.indexOf(initialStep != null ? initialStep : stepNames.value[0]));\n  const current = computed(() => at(index.value));\n  const isFirst = computed(() => index.value === 0);\n  const isLast = computed(() => index.value === stepNames.value.length - 1);\n  const next = computed(() => stepNames.value[index.value + 1]);\n  const previous = computed(() => stepNames.value[index.value - 1]);\n  function at(index2) {\n    if (Array.isArray(stepsRef.value))\n      return stepsRef.value[index2];\n    return stepsRef.value[stepNames.value[index2]];\n  }\n  function get(step) {\n    if (!stepNames.value.includes(step))\n      return;\n    return at(stepNames.value.indexOf(step));\n  }\n  function goTo(step) {\n    if (stepNames.value.includes(step))\n      index.value = stepNames.value.indexOf(step);\n  }\n  function goToNext() {\n    if (isLast.value)\n      return;\n    index.value++;\n  }\n  function goToPrevious() {\n    if (isFirst.value)\n      return;\n    index.value--;\n  }\n  function goBackTo(step) {\n    if (isAfter(step))\n      goTo(step);\n  }\n  function isNext(step) {\n    return stepNames.value.indexOf(step) === index.value + 1;\n  }\n  function isPrevious(step) {\n    return stepNames.value.indexOf(step) === index.value - 1;\n  }\n  function isCurrent(step) {\n    return stepNames.value.indexOf(step) === index.value;\n  }\n  function isBefore(step) {\n    return index.value < stepNames.value.indexOf(step);\n  }\n  function isAfter(step) {\n    return index.value > stepNames.value.indexOf(step);\n  }\n  return {\n    steps: stepsRef,\n    stepNames,\n    index,\n    current,\n    next,\n    previous,\n    isFirst,\n    isLast,\n    at,\n    get,\n    goTo,\n    goToNext,\n    goToPrevious,\n    goBackTo,\n    isNext,\n    isPrevious,\n    isCurrent,\n    isBefore,\n    isAfter\n  };\n}\n\nfunction useStorageAsync(key, initialValue, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const rawInit = resolveUnref(initialValue);\n  const type = guessSerializerType(rawInit);\n  const data = (shallow ? shallowRef : ref)(initialValue);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  async function read(event) {\n    if (!storage || event && event.key !== key)\n      return;\n    try {\n      const rawValue = event ? event.newValue : await storage.getItem(key);\n      if (rawValue == null) {\n        data.value = rawInit;\n        if (writeDefaults && rawInit !== null)\n          await storage.setItem(key, await serializer.write(rawInit));\n      } else {\n        data.value = await serializer.read(rawValue);\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  read();\n  if (window && listenToStorageChanges)\n    useEventListener(window, \"storage\", (e) => setTimeout(() => read(e), 0));\n  if (storage) {\n    watchWithFilter(data, async () => {\n      try {\n        if (data.value == null)\n          await storage.removeItem(key);\n        else\n          await storage.setItem(key, await serializer.write(data.value));\n      } catch (e) {\n        onError(e);\n      }\n    }, {\n      flush,\n      deep,\n      eventFilter\n    });\n  }\n  return data;\n}\n\nlet _id = 0;\nfunction useStyleTag(css, options = {}) {\n  const isLoaded = ref(false);\n  const {\n    document = defaultDocument,\n    immediate = true,\n    manual = false,\n    id = `vueuse_styletag_${++_id}`\n  } = options;\n  const cssRef = ref(css);\n  let stop = () => {\n  };\n  const load = () => {\n    if (!document)\n      return;\n    const el = document.getElementById(id) || document.createElement(\"style\");\n    el.type = \"text/css\";\n    el.id = id;\n    if (options.media)\n      el.media = options.media;\n    document.head.appendChild(el);\n    if (isLoaded.value)\n      return;\n    stop = watch(cssRef, (value) => {\n      el.innerText = value;\n    }, { immediate: true });\n    isLoaded.value = true;\n  };\n  const unload = () => {\n    if (!document || !isLoaded.value)\n      return;\n    stop();\n    document.head.removeChild(document.getElementById(id));\n    isLoaded.value = false;\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnScopeDispose(unload);\n  return {\n    id,\n    css: cssRef,\n    unload,\n    load,\n    isLoaded: readonly(isLoaded)\n  };\n}\n\nfunction useTemplateRefsList() {\n  const refs = ref([]);\n  refs.value.set = (el) => {\n    if (el)\n      refs.value.push(el);\n  };\n  onBeforeUpdate(() => {\n    refs.value.length = 0;\n  });\n  return refs;\n}\n\nfunction useTextDirection(options = {}) {\n  const {\n    document = defaultDocument,\n    selector = \"html\",\n    observe = false,\n    initialValue = \"ltr\"\n  } = options;\n  function getValue() {\n    var _a, _b;\n    return (_b = (_a = document == null ? void 0 : document.querySelector(selector)) == null ? void 0 : _a.getAttribute(\"dir\")) != null ? _b : initialValue;\n  }\n  const dir = ref(getValue());\n  tryOnMounted(() => dir.value = getValue());\n  if (observe && document) {\n    useMutationObserver(document.querySelector(selector), () => dir.value = getValue(), { attributes: true });\n  }\n  return computed({\n    get() {\n      return dir.value;\n    },\n    set(v) {\n      var _a, _b;\n      dir.value = v;\n      if (!document)\n        return;\n      if (dir.value)\n        (_a = document.querySelector(selector)) == null ? void 0 : _a.setAttribute(\"dir\", dir.value);\n      else\n        (_b = document.querySelector(selector)) == null ? void 0 : _b.removeAttribute(\"dir\");\n    }\n  });\n}\n\nfunction getRangesFromSelection(selection) {\n  var _a;\n  const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;\n  const ranges = new Array(rangeCount);\n  for (let i = 0; i < rangeCount; i++) {\n    const range = selection.getRangeAt(i);\n    ranges[i] = range;\n  }\n  return ranges;\n}\nfunction useTextSelection(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const selection = ref(null);\n  const text = computed(() => {\n    var _a, _b;\n    return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : \"\";\n  });\n  const ranges = computed(() => selection.value ? getRangesFromSelection(selection.value) : []);\n  const rects = computed(() => ranges.value.map((range) => range.getBoundingClientRect()));\n  function onSelectionChange() {\n    selection.value = null;\n    if (window)\n      selection.value = window.getSelection();\n  }\n  if (window)\n    useEventListener(window.document, \"selectionchange\", onSelectionChange);\n  return {\n    text,\n    rects,\n    ranges,\n    selection\n  };\n}\n\nfunction useTextareaAutosize(options) {\n  const textarea = ref(options == null ? void 0 : options.element);\n  const input = ref(options == null ? void 0 : options.input);\n  function triggerResize() {\n    var _a, _b;\n    if (!textarea.value)\n      return;\n    textarea.value.style.height = \"1px\";\n    textarea.value.style.height = `${(_a = textarea.value) == null ? void 0 : _a.scrollHeight}px`;\n    (_b = options == null ? void 0 : options.onResize) == null ? void 0 : _b.call(options);\n  }\n  watch([input, textarea], triggerResize, { immediate: true });\n  if (options == null ? void 0 : options.watch)\n    watch(options.watch, triggerResize, { immediate: true, deep: true });\n  return {\n    textarea,\n    input,\n    triggerResize\n  };\n}\n\nvar __defProp$3 = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$3 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$3 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$3 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$3.call(b, prop))\n      __defNormalProp$3(a, prop, b[prop]);\n  if (__getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(b)) {\n      if (__propIsEnum$3.call(b, prop))\n        __defNormalProp$3(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction useThrottledRefHistory(source, options = {}) {\n  const { throttle = 200, trailing = true } = options;\n  const filter = throttleFilter(throttle, trailing);\n  const history = useRefHistory(source, __spreadProps(__spreadValues$3({}, options), { eventFilter: filter }));\n  return __spreadValues$3({}, history);\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$2.call(b, prop))\n      __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b)) {\n      if (__propIsEnum$2.call(b, prop))\n        __defNormalProp$2(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nconst UNITS = [\n  { max: 6e4, value: 1e3, name: \"second\" },\n  { max: 276e4, value: 6e4, name: \"minute\" },\n  { max: 72e6, value: 36e5, name: \"hour\" },\n  { max: 5184e5, value: 864e5, name: \"day\" },\n  { max: 24192e5, value: 6048e5, name: \"week\" },\n  { max: 28512e6, value: 2592e6, name: \"month\" },\n  { max: Infinity, value: 31536e6, name: \"year\" }\n];\nconst DEFAULT_MESSAGES = {\n  justNow: \"just now\",\n  past: (n) => n.match(/\\d/) ? `${n} ago` : n,\n  future: (n) => n.match(/\\d/) ? `in ${n}` : n,\n  month: (n, past) => n === 1 ? past ? \"last month\" : \"next month\" : `${n} month${n > 1 ? \"s\" : \"\"}`,\n  year: (n, past) => n === 1 ? past ? \"last year\" : \"next year\" : `${n} year${n > 1 ? \"s\" : \"\"}`,\n  day: (n, past) => n === 1 ? past ? \"yesterday\" : \"tomorrow\" : `${n} day${n > 1 ? \"s\" : \"\"}`,\n  week: (n, past) => n === 1 ? past ? \"last week\" : \"next week\" : `${n} week${n > 1 ? \"s\" : \"\"}`,\n  hour: (n) => `${n} hour${n > 1 ? \"s\" : \"\"}`,\n  minute: (n) => `${n} minute${n > 1 ? \"s\" : \"\"}`,\n  second: (n) => `${n} second${n > 1 ? \"s\" : \"\"}`\n};\nconst DEFAULT_FORMATTER = (date) => date.toISOString().slice(0, 10);\nfunction useTimeAgo(time, options = {}) {\n  const {\n    controls: exposeControls = false,\n    max,\n    updateInterval = 3e4,\n    messages = DEFAULT_MESSAGES,\n    fullDateFormatter = DEFAULT_FORMATTER,\n    showSecond = false\n  } = options;\n  const { abs, round } = Math;\n  const _a = useNow({ interval: updateInterval, controls: true }), { now } = _a, controls = __objRest(_a, [\"now\"]);\n  function getTimeago(from, now2) {\n    var _a2;\n    const diff = +now2 - +from;\n    const absDiff = abs(diff);\n    if (absDiff < 6e4 && !showSecond)\n      return messages.justNow;\n    if (typeof max === \"number\" && absDiff > max)\n      return fullDateFormatter(new Date(from));\n    if (typeof max === \"string\") {\n      const unitMax = (_a2 = UNITS.find((i) => i.name === max)) == null ? void 0 : _a2.max;\n      if (unitMax && absDiff > unitMax)\n        return fullDateFormatter(new Date(from));\n    }\n    for (const unit of UNITS) {\n      if (absDiff < unit.max)\n        return format(diff, unit);\n    }\n  }\n  function applyFormat(name, val, isPast) {\n    const formatter = messages[name];\n    if (typeof formatter === \"function\")\n      return formatter(val, isPast);\n    return formatter.replace(\"{0}\", val.toString());\n  }\n  function format(diff, unit) {\n    const val = round(abs(diff) / unit.value);\n    const past = diff > 0;\n    const str = applyFormat(unit.name, val, past);\n    return applyFormat(past ? \"past\" : \"future\", str, past);\n  }\n  const timeAgo = computed(() => getTimeago(new Date(resolveUnref(time)), unref(now.value)));\n  if (exposeControls) {\n    return __spreadValues$2({\n      timeAgo\n    }, controls);\n  } else {\n    return timeAgo;\n  }\n}\n\nfunction useTimeoutPoll(fn, interval, timeoutPollOptions) {\n  const { start } = useTimeoutFn(loop, interval);\n  const isActive = ref(false);\n  async function loop() {\n    if (!isActive.value)\n      return;\n    await fn();\n    start();\n  }\n  function resume() {\n    if (!isActive.value) {\n      isActive.value = true;\n      loop();\n    }\n  }\n  function pause() {\n    isActive.value = false;\n  }\n  if (timeoutPollOptions == null ? void 0 : timeoutPollOptions.immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useTimestamp(options = {}) {\n  const {\n    controls: exposeControls = false,\n    offset = 0,\n    immediate = true,\n    interval = \"requestAnimationFrame\",\n    callback\n  } = options;\n  const ts = ref(timestamp() + offset);\n  const update = () => ts.value = timestamp() + offset;\n  const cb = callback ? () => {\n    update();\n    callback(ts.value);\n  } : update;\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\n  if (exposeControls) {\n    return __spreadValues$1({\n      timestamp: ts\n    }, controls);\n  } else {\n    return ts;\n  }\n}\n\nfunction useTitle(newTitle = null, options = {}) {\n  var _a, _b;\n  const {\n    document = defaultDocument,\n    observe = false,\n    titleTemplate = \"%s\"\n  } = options;\n  const title = resolveRef((_a = newTitle != null ? newTitle : document == null ? void 0 : document.title) != null ? _a : null);\n  const isReadonly = newTitle && isFunction(newTitle);\n  function format(t) {\n    return isFunction(titleTemplate) ? titleTemplate(t) : unref(titleTemplate).replace(\"%s\", t);\n  }\n  watch(title, (t, o) => {\n    if (isString(t) && t !== o && document)\n      document.title = format(t);\n  }, { immediate: true });\n  if (observe && document && !isReadonly) {\n    useMutationObserver((_b = document.head) == null ? void 0 : _b.querySelector(\"title\"), () => {\n      if (document && document.title !== title.value)\n        title.value = format(document.title);\n    }, { childList: true });\n  }\n  return title;\n}\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nconst _TransitionPresets = {\n  easeInSine: [0.12, 0, 0.39, 0],\n  easeOutSine: [0.61, 1, 0.88, 1],\n  easeInOutSine: [0.37, 0, 0.63, 1],\n  easeInQuad: [0.11, 0, 0.5, 0],\n  easeOutQuad: [0.5, 1, 0.89, 1],\n  easeInOutQuad: [0.45, 0, 0.55, 1],\n  easeInCubic: [0.32, 0, 0.67, 0],\n  easeOutCubic: [0.33, 1, 0.68, 1],\n  easeInOutCubic: [0.65, 0, 0.35, 1],\n  easeInQuart: [0.5, 0, 0.75, 0],\n  easeOutQuart: [0.25, 1, 0.5, 1],\n  easeInOutQuart: [0.76, 0, 0.24, 1],\n  easeInQuint: [0.64, 0, 0.78, 0],\n  easeOutQuint: [0.22, 1, 0.36, 1],\n  easeInOutQuint: [0.83, 0, 0.17, 1],\n  easeInExpo: [0.7, 0, 0.84, 0],\n  easeOutExpo: [0.16, 1, 0.3, 1],\n  easeInOutExpo: [0.87, 0, 0.13, 1],\n  easeInCirc: [0.55, 0, 1, 0.45],\n  easeOutCirc: [0, 0.55, 0.45, 1],\n  easeInOutCirc: [0.85, 0, 0.15, 1],\n  easeInBack: [0.36, 0, 0.66, -0.56],\n  easeOutBack: [0.34, 1.56, 0.64, 1],\n  easeInOutBack: [0.68, -0.6, 0.32, 1.6]\n};\nconst TransitionPresets = __spreadValues({\n  linear: identity\n}, _TransitionPresets);\nfunction createEasingFunction([p0, p1, p2, p3]) {\n  const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;\n  const b = (a1, a2) => 3 * a2 - 6 * a1;\n  const c = (a1) => 3 * a1;\n  const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n  const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);\n  const getTforX = (x) => {\n    let aGuessT = x;\n    for (let i = 0; i < 4; ++i) {\n      const currentSlope = getSlope(aGuessT, p0, p2);\n      if (currentSlope === 0)\n        return aGuessT;\n      const currentX = calcBezier(aGuessT, p0, p2) - x;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  };\n  return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);\n}\nfunction useTransition(source, options = {}) {\n  const {\n    delay = 0,\n    disabled = false,\n    duration = 1e3,\n    onFinished = noop,\n    onStarted = noop,\n    transition = identity\n  } = options;\n  const currentTransition = computed(() => {\n    const t = unref(transition);\n    return isFunction(t) ? t : createEasingFunction(t);\n  });\n  const sourceValue = computed(() => {\n    const s = unref(source);\n    return isNumber(s) ? s : s.map(unref);\n  });\n  const sourceVector = computed(() => isNumber(sourceValue.value) ? [sourceValue.value] : sourceValue.value);\n  const outputVector = ref(sourceVector.value.slice(0));\n  let currentDuration;\n  let diffVector;\n  let endAt;\n  let startAt;\n  let startVector;\n  const { resume, pause } = useRafFn(() => {\n    const now = Date.now();\n    const progress = clamp(1 - (endAt - now) / currentDuration, 0, 1);\n    outputVector.value = startVector.map((val, i) => {\n      var _a;\n      return val + ((_a = diffVector[i]) != null ? _a : 0) * currentTransition.value(progress);\n    });\n    if (progress >= 1) {\n      pause();\n      onFinished();\n    }\n  }, { immediate: false });\n  const start = () => {\n    pause();\n    currentDuration = unref(duration);\n    diffVector = outputVector.value.map((n, i) => {\n      var _a, _b;\n      return ((_a = sourceVector.value[i]) != null ? _a : 0) - ((_b = outputVector.value[i]) != null ? _b : 0);\n    });\n    startVector = outputVector.value.slice(0);\n    startAt = Date.now();\n    endAt = startAt + currentDuration;\n    resume();\n    onStarted();\n  };\n  const timeout = useTimeoutFn(start, delay, { immediate: false });\n  watch(sourceVector, () => {\n    if (unref(disabled)) {\n      outputVector.value = sourceVector.value.slice(0);\n    } else {\n      if (unref(delay) <= 0)\n        start();\n      else\n        timeout.start();\n    }\n  }, { deep: true });\n  return computed(() => {\n    const targetVector = unref(disabled) ? sourceVector : outputVector;\n    return isNumber(sourceValue.value) ? targetVector.value[0] : targetVector.value;\n  });\n}\n\nfunction useUrlSearchParams(mode = \"history\", options = {}) {\n  const {\n    initialValue = {},\n    removeNullishValues = true,\n    removeFalsyValues = false,\n    write: enableWrite = true,\n    window = defaultWindow\n  } = options;\n  if (!window)\n    return reactive(initialValue);\n  const state = reactive({});\n  function getRawParams() {\n    if (mode === \"history\") {\n      return window.location.search || \"\";\n    } else if (mode === \"hash\") {\n      const hash = window.location.hash || \"\";\n      const index = hash.indexOf(\"?\");\n      return index > 0 ? hash.slice(index) : \"\";\n    } else {\n      return (window.location.hash || \"\").replace(/^#/, \"\");\n    }\n  }\n  function constructQuery(params) {\n    const stringified = params.toString();\n    if (mode === \"history\")\n      return `${stringified ? `?${stringified}` : \"\"}${window.location.hash || \"\"}`;\n    if (mode === \"hash-params\")\n      return `${window.location.search || \"\"}${stringified ? `#${stringified}` : \"\"}`;\n    const hash = window.location.hash || \"#\";\n    const index = hash.indexOf(\"?\");\n    if (index > 0)\n      return `${hash.slice(0, index)}${stringified ? `?${stringified}` : \"\"}`;\n    return `${hash}${stringified ? `?${stringified}` : \"\"}`;\n  }\n  function read() {\n    return new URLSearchParams(getRawParams());\n  }\n  function updateState(params) {\n    const unusedKeys = new Set(Object.keys(state));\n    for (const key of params.keys()) {\n      const paramsForKey = params.getAll(key);\n      state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || \"\";\n      unusedKeys.delete(key);\n    }\n    Array.from(unusedKeys).forEach((key) => delete state[key]);\n  }\n  const { pause, resume } = pausableWatch(state, () => {\n    const params = new URLSearchParams(\"\");\n    Object.keys(state).forEach((key) => {\n      const mapEntry = state[key];\n      if (Array.isArray(mapEntry))\n        mapEntry.forEach((value) => params.append(key, value));\n      else if (removeNullishValues && mapEntry == null)\n        params.delete(key);\n      else if (removeFalsyValues && !mapEntry)\n        params.delete(key);\n      else\n        params.set(key, mapEntry);\n    });\n    write(params);\n  }, { deep: true });\n  function write(params, shouldUpdate) {\n    pause();\n    if (shouldUpdate)\n      updateState(params);\n    window.history.replaceState(window.history.state, window.document.title, window.location.pathname + constructQuery(params));\n    resume();\n  }\n  function onChanged() {\n    if (!enableWrite)\n      return;\n    write(read(), true);\n  }\n  useEventListener(window, \"popstate\", onChanged, false);\n  if (mode !== \"history\")\n    useEventListener(window, \"hashchange\", onChanged, false);\n  const initial = read();\n  if (initial.keys().next().value)\n    updateState(initial);\n  else\n    Object.assign(state, initialValue);\n  return state;\n}\n\nfunction useUserMedia(options = {}) {\n  var _a, _b;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const autoSwitch = ref((_b = options.autoSwitch) != null ? _b : true);\n  const videoDeviceId = ref(options.videoDeviceId);\n  const audioDeviceId = ref(options.audioDeviceId);\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getUserMedia;\n  });\n  const stream = shallowRef();\n  function getDeviceOptions(device) {\n    if (device.value === \"none\" || device.value === false)\n      return false;\n    if (device.value == null)\n      return true;\n    return {\n      deviceId: device.value\n    };\n  }\n  async function _start() {\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getUserMedia({\n      video: getDeviceOptions(videoDeviceId),\n      audio: getDeviceOptions(audioDeviceId)\n    });\n    return stream.value;\n  }\n  async function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  async function restart() {\n    _stop();\n    return await start();\n  }\n  watch(enabled, (v) => {\n    if (v)\n      _start();\n    else\n      _stop();\n  }, { immediate: true });\n  watch([videoDeviceId, audioDeviceId], () => {\n    if (autoSwitch.value && stream.value)\n      restart();\n  }, { immediate: true });\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    restart,\n    videoDeviceId,\n    audioDeviceId,\n    enabled,\n    autoSwitch\n  };\n}\n\nfunction useVModel(props, key, emit, options = {}) {\n  var _a, _b, _c, _d, _e;\n  const {\n    clone = false,\n    passive = false,\n    eventName,\n    deep = false,\n    defaultValue\n  } = options;\n  const vm = getCurrentInstance();\n  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));\n  let event = eventName;\n  if (!key) {\n    if (isVue2) {\n      const modelOptions = (_e = (_d = vm == null ? void 0 : vm.proxy) == null ? void 0 : _d.$options) == null ? void 0 : _e.model;\n      key = (modelOptions == null ? void 0 : modelOptions.value) || \"value\";\n      if (!eventName)\n        event = (modelOptions == null ? void 0 : modelOptions.event) || \"input\";\n    } else {\n      key = \"modelValue\";\n    }\n  }\n  event = eventName || event || `update:${key.toString()}`;\n  const cloneFn = (val) => !clone ? val : isFunction(clone) ? clone(val) : cloneFnJSON(val);\n  const getValue = () => isDef(props[key]) ? cloneFn(props[key]) : defaultValue;\n  if (passive) {\n    const initialValue = getValue();\n    const proxy = ref(initialValue);\n    watch(() => props[key], (v) => proxy.value = cloneFn(v));\n    watch(proxy, (v) => {\n      if (v !== props[key] || deep)\n        _emit(event, v);\n    }, { deep });\n    return proxy;\n  } else {\n    return computed({\n      get() {\n        return getValue();\n      },\n      set(value) {\n        _emit(event, value);\n      }\n    });\n  }\n}\n\nfunction useVModels(props, emit, options = {}) {\n  const ret = {};\n  for (const key in props)\n    ret[key] = useVModel(props, key, emit, options);\n  return ret;\n}\n\nfunction useVibrate(options) {\n  const {\n    pattern = [],\n    interval = 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => typeof navigator !== \"undefined\" && \"vibrate\" in navigator);\n  const patternRef = resolveRef(pattern);\n  let intervalControls;\n  const vibrate = (pattern2 = patternRef.value) => {\n    if (isSupported.value)\n      navigator.vibrate(pattern2);\n  };\n  const stop = () => {\n    if (isSupported.value)\n      navigator.vibrate(0);\n    intervalControls == null ? void 0 : intervalControls.pause();\n  };\n  if (interval > 0) {\n    intervalControls = useIntervalFn(vibrate, interval, {\n      immediate: false,\n      immediateCallback: false\n    });\n  }\n  return {\n    isSupported,\n    pattern,\n    intervalControls,\n    vibrate,\n    stop\n  };\n}\n\nfunction useVirtualList(list, options) {\n  const containerRef = ref();\n  const size = useElementSize(containerRef);\n  const currentList = ref([]);\n  const source = shallowRef(list);\n  const state = ref({ start: 0, end: 10 });\n  const { itemHeight, overscan = 5 } = options;\n  const getViewCapacity = (containerHeight) => {\n    if (typeof itemHeight === \"number\")\n      return Math.ceil(containerHeight / itemHeight);\n    const { start = 0 } = state.value;\n    let sum = 0;\n    let capacity = 0;\n    for (let i = start; i < source.value.length; i++) {\n      const height = itemHeight(i);\n      sum += height;\n      if (sum >= containerHeight) {\n        capacity = i;\n        break;\n      }\n    }\n    return capacity - start;\n  };\n  const getOffset = (scrollTop) => {\n    if (typeof itemHeight === \"number\")\n      return Math.floor(scrollTop / itemHeight) + 1;\n    let sum = 0;\n    let offset = 0;\n    for (let i = 0; i < source.value.length; i++) {\n      const height = itemHeight(i);\n      sum += height;\n      if (sum >= scrollTop) {\n        offset = i;\n        break;\n      }\n    }\n    return offset + 1;\n  };\n  const calculateRange = () => {\n    const element = containerRef.value;\n    if (element) {\n      const offset = getOffset(element.scrollTop);\n      const viewCapacity = getViewCapacity(element.clientHeight);\n      const from = offset - overscan;\n      const to = offset + viewCapacity + overscan;\n      state.value = {\n        start: from < 0 ? 0 : from,\n        end: to > source.value.length ? source.value.length : to\n      };\n      currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({\n        data: ele,\n        index: index + state.value.start\n      }));\n    }\n  };\n  watch([size.width, size.height, list], () => {\n    calculateRange();\n  });\n  const totalHeight = computed(() => {\n    if (typeof itemHeight === \"number\")\n      return source.value.length * itemHeight;\n    return source.value.reduce((sum, _, index) => sum + itemHeight(index), 0);\n  });\n  const getDistanceTop = (index) => {\n    if (typeof itemHeight === \"number\") {\n      const height2 = index * itemHeight;\n      return height2;\n    }\n    const height = source.value.slice(0, index).reduce((sum, _, i) => sum + itemHeight(i), 0);\n    return height;\n  };\n  const scrollTo = (index) => {\n    if (containerRef.value) {\n      containerRef.value.scrollTop = getDistanceTop(index);\n      calculateRange();\n    }\n  };\n  const offsetTop = computed(() => getDistanceTop(state.value.start));\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        width: \"100%\",\n        height: `${totalHeight.value - offsetTop.value}px`,\n        marginTop: `${offsetTop.value}px`\n      }\n    };\n  });\n  const containerStyle = { overflowY: \"auto\" };\n  return {\n    list: currentList,\n    scrollTo,\n    containerProps: {\n      ref: containerRef,\n      onScroll: () => {\n        calculateRange();\n      },\n      style: containerStyle\n    },\n    wrapperProps\n  };\n}\n\nconst useWakeLock = (options = {}) => {\n  const {\n    navigator = defaultNavigator,\n    document = defaultDocument\n  } = options;\n  let wakeLock;\n  const isSupported = useSupported(() => navigator && \"wakeLock\" in navigator);\n  const isActive = ref(false);\n  async function onVisibilityChange() {\n    if (!isSupported.value || !wakeLock)\n      return;\n    if (document && document.visibilityState === \"visible\")\n      wakeLock = await navigator.wakeLock.request(\"screen\");\n    isActive.value = !wakeLock.released;\n  }\n  if (document)\n    useEventListener(document, \"visibilitychange\", onVisibilityChange, { passive: true });\n  async function request(type) {\n    if (!isSupported.value)\n      return;\n    wakeLock = await navigator.wakeLock.request(type);\n    isActive.value = !wakeLock.released;\n  }\n  async function release() {\n    if (!isSupported.value || !wakeLock)\n      return;\n    await wakeLock.release();\n    isActive.value = !wakeLock.released;\n    wakeLock = null;\n  }\n  return {\n    isSupported,\n    isActive,\n    request,\n    release\n  };\n};\n\nconst useWebNotification = (defaultOptions = {}) => {\n  const {\n    window = defaultWindow\n  } = defaultOptions;\n  const isSupported = useSupported(() => !!window && \"Notification\" in window);\n  const notification = ref(null);\n  const requestPermission = async () => {\n    if (!isSupported.value)\n      return;\n    if (\"permission\" in Notification && Notification.permission !== \"denied\")\n      await Notification.requestPermission();\n  };\n  const onClick = createEventHook();\n  const onShow = createEventHook();\n  const onError = createEventHook();\n  const onClose = createEventHook();\n  const show = async (overrides) => {\n    if (!isSupported.value)\n      return;\n    await requestPermission();\n    const options = Object.assign({}, defaultOptions, overrides);\n    notification.value = new Notification(options.title || \"\", options);\n    notification.value.onclick = (event) => onClick.trigger(event);\n    notification.value.onshow = (event) => onShow.trigger(event);\n    notification.value.onerror = (event) => onError.trigger(event);\n    notification.value.onclose = (event) => onClose.trigger(event);\n    return notification.value;\n  };\n  const close = () => {\n    if (notification.value)\n      notification.value.close();\n    notification.value = null;\n  };\n  tryOnMounted(async () => {\n    if (isSupported.value)\n      await requestPermission();\n  });\n  tryOnScopeDispose(close);\n  if (isSupported.value && window) {\n    const document = window.document;\n    useEventListener(document, \"visibilitychange\", (e) => {\n      e.preventDefault();\n      if (document.visibilityState === \"visible\") {\n        close();\n      }\n    });\n  }\n  return {\n    isSupported,\n    notification,\n    show,\n    close,\n    onClick,\n    onShow,\n    onError,\n    onClose\n  };\n};\n\nconst DEFAULT_PING_MESSAGE = \"ping\";\nfunction resolveNestedOptions(options) {\n  if (options === true)\n    return {};\n  return options;\n}\nfunction useWebSocket(url, options = {}) {\n  const {\n    onConnected,\n    onDisconnected,\n    onError,\n    onMessage,\n    immediate = true,\n    autoClose = true,\n    protocols = []\n  } = options;\n  const data = ref(null);\n  const status = ref(\"CLOSED\");\n  const wsRef = ref();\n  let heartbeatPause;\n  let heartbeatResume;\n  let explicitlyClosed = false;\n  let retried = 0;\n  let bufferedData = [];\n  let pongTimeoutWait;\n  const close = (code = 1e3, reason) => {\n    if (!wsRef.value)\n      return;\n    explicitlyClosed = true;\n    heartbeatPause == null ? void 0 : heartbeatPause();\n    wsRef.value.close(code, reason);\n  };\n  const _sendBuffer = () => {\n    if (bufferedData.length && wsRef.value && status.value === \"OPEN\") {\n      for (const buffer of bufferedData)\n        wsRef.value.send(buffer);\n      bufferedData = [];\n    }\n  };\n  const resetHeartbeat = () => {\n    clearTimeout(pongTimeoutWait);\n  };\n  const send = (data2, useBuffer = true) => {\n    if (!wsRef.value || status.value !== \"OPEN\") {\n      if (useBuffer)\n        bufferedData.push(data2);\n      return false;\n    }\n    _sendBuffer();\n    wsRef.value.send(data2);\n    return true;\n  };\n  const _init = () => {\n    const ws = new WebSocket(url, protocols);\n    wsRef.value = ws;\n    status.value = \"CONNECTING\";\n    explicitlyClosed = false;\n    ws.onopen = () => {\n      status.value = \"OPEN\";\n      onConnected == null ? void 0 : onConnected(ws);\n      heartbeatResume == null ? void 0 : heartbeatResume();\n      _sendBuffer();\n    };\n    ws.onclose = (ev) => {\n      status.value = \"CLOSED\";\n      wsRef.value = void 0;\n      onDisconnected == null ? void 0 : onDisconnected(ws, ev);\n      if (!explicitlyClosed && options.autoReconnect) {\n        const {\n          retries = -1,\n          delay = 1e3,\n          onFailed\n        } = resolveNestedOptions(options.autoReconnect);\n        retried += 1;\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries))\n          setTimeout(_init, delay);\n        else if (typeof retries === \"function\" && retries())\n          setTimeout(_init, delay);\n        else\n          onFailed == null ? void 0 : onFailed();\n      }\n    };\n    ws.onerror = (e) => {\n      onError == null ? void 0 : onError(ws, e);\n    };\n    ws.onmessage = (e) => {\n      resetHeartbeat();\n      if (options.heartbeat) {\n        const {\n          message = DEFAULT_PING_MESSAGE\n        } = resolveNestedOptions(options.heartbeat);\n        if (e.data === message)\n          return;\n      }\n      data.value = e.data;\n      onMessage == null ? void 0 : onMessage(ws, e);\n    };\n  };\n  if (options.heartbeat) {\n    const {\n      message = DEFAULT_PING_MESSAGE,\n      interval = 1e3,\n      pongTimeout = 1e3\n    } = resolveNestedOptions(options.heartbeat);\n    const { pause, resume } = useIntervalFn(() => {\n      send(message, false);\n      pongTimeoutWait = setTimeout(() => {\n        close();\n      }, pongTimeout);\n    }, interval, { immediate: false });\n    heartbeatPause = pause;\n    heartbeatResume = resume;\n  }\n  if (immediate)\n    _init();\n  if (autoClose) {\n    useEventListener(window, \"beforeunload\", () => close());\n    tryOnScopeDispose(close);\n  }\n  const open = () => {\n    close();\n    retried = 0;\n    _init();\n  };\n  return {\n    data,\n    status,\n    close,\n    send,\n    open,\n    ws: wsRef\n  };\n}\n\nfunction useWebWorker(url, workerOptions, options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const data = ref(null);\n  const worker = shallowRef();\n  const post = function post2(val) {\n    if (!worker.value)\n      return;\n    worker.value.postMessage(val);\n  };\n  const terminate = function terminate2() {\n    if (!worker.value)\n      return;\n    worker.value.terminate();\n  };\n  if (window) {\n    worker.value = new Worker(url, workerOptions);\n    worker.value.onmessage = (e) => {\n      data.value = e.data;\n    };\n    tryOnScopeDispose(() => {\n      if (worker.value)\n        worker.value.terminate();\n    });\n  }\n  return {\n    data,\n    post,\n    terminate,\n    worker\n  };\n}\n\nconst jobRunner = (userFunc) => (e) => {\n  const userFuncArgs = e.data[0];\n  return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {\n    postMessage([\"SUCCESS\", result]);\n  }).catch((error) => {\n    postMessage([\"ERROR\", error]);\n  });\n};\n\nconst depsParser = (deps) => {\n  if (deps.length === 0)\n    return \"\";\n  const depsString = deps.map((dep) => `'${dep}'`).toString();\n  return `importScripts(${depsString})`;\n};\n\nconst createWorkerBlobUrl = (fn, deps) => {\n  const blobCode = `${depsParser(deps)}; onmessage=(${jobRunner})(${fn})`;\n  const blob = new Blob([blobCode], { type: \"text/javascript\" });\n  const url = URL.createObjectURL(blob);\n  return url;\n};\n\nconst useWebWorkerFn = (fn, options = {}) => {\n  const {\n    dependencies = [],\n    timeout,\n    window = defaultWindow\n  } = options;\n  const worker = ref();\n  const workerStatus = ref(\"PENDING\");\n  const promise = ref({});\n  const timeoutId = ref();\n  const workerTerminate = (status = \"PENDING\") => {\n    if (worker.value && worker.value._url && window) {\n      worker.value.terminate();\n      URL.revokeObjectURL(worker.value._url);\n      promise.value = {};\n      worker.value = void 0;\n      window.clearTimeout(timeoutId.value);\n      workerStatus.value = status;\n    }\n  };\n  workerTerminate();\n  tryOnScopeDispose(workerTerminate);\n  const generateWorker = () => {\n    const blobUrl = createWorkerBlobUrl(fn, dependencies);\n    const newWorker = new Worker(blobUrl);\n    newWorker._url = blobUrl;\n    newWorker.onmessage = (e) => {\n      const { resolve = () => {\n      }, reject = () => {\n      } } = promise.value;\n      const [status, result] = e.data;\n      switch (status) {\n        case \"SUCCESS\":\n          resolve(result);\n          workerTerminate(status);\n          break;\n        default:\n          reject(result);\n          workerTerminate(\"ERROR\");\n          break;\n      }\n    };\n    newWorker.onerror = (e) => {\n      const { reject = () => {\n      } } = promise.value;\n      reject(e);\n      workerTerminate(\"ERROR\");\n    };\n    if (timeout) {\n      timeoutId.value = setTimeout(() => workerTerminate(\"TIMEOUT_EXPIRED\"), timeout);\n    }\n    return newWorker;\n  };\n  const callWorker = (...fnArgs) => new Promise((resolve, reject) => {\n    promise.value = {\n      resolve,\n      reject\n    };\n    worker.value && worker.value.postMessage([[...fnArgs]]);\n    workerStatus.value = \"RUNNING\";\n  });\n  const workerFn = (...fnArgs) => {\n    if (workerStatus.value === \"RUNNING\") {\n      console.error(\"[useWebWorkerFn] You can only run one instance of the worker at a time.\");\n      return Promise.reject();\n    }\n    worker.value = generateWorker();\n    return callWorker(...fnArgs);\n  };\n  return {\n    workerFn,\n    workerStatus,\n    workerTerminate\n  };\n};\n\nfunction useWindowFocus({ window = defaultWindow } = {}) {\n  if (!window)\n    return ref(false);\n  const focused = ref(window.document.hasFocus());\n  useEventListener(window, \"blur\", () => {\n    focused.value = false;\n  });\n  useEventListener(window, \"focus\", () => {\n    focused.value = true;\n  });\n  return focused;\n}\n\nfunction useWindowScroll({ window = defaultWindow } = {}) {\n  if (!window) {\n    return {\n      x: ref(0),\n      y: ref(0)\n    };\n  }\n  const x = ref(window.pageXOffset);\n  const y = ref(window.pageYOffset);\n  useEventListener(\"scroll\", () => {\n    x.value = window.pageXOffset;\n    y.value = window.pageYOffset;\n  }, {\n    capture: false,\n    passive: true\n  });\n  return { x, y };\n}\n\nfunction useWindowSize(options = {}) {\n  const {\n    window = defaultWindow,\n    initialWidth = Infinity,\n    initialHeight = Infinity,\n    listenOrientation = true,\n    includeScrollbar = true\n  } = options;\n  const width = ref(initialWidth);\n  const height = ref(initialHeight);\n  const update = () => {\n    if (window) {\n      if (includeScrollbar) {\n        width.value = window.innerWidth;\n        height.value = window.innerHeight;\n      } else {\n        width.value = window.document.documentElement.clientWidth;\n        height.value = window.document.documentElement.clientHeight;\n      }\n    }\n  };\n  update();\n  tryOnMounted(update);\n  useEventListener(\"resize\", update, { passive: true });\n  if (listenOrientation)\n    useEventListener(\"orientationchange\", update, { passive: true });\n  return { width, height };\n}\n\nexport { DefaultMagicKeysAliasMap, StorageSerializers, SwipeDirection, TransitionPresets, computedAsync as asyncComputed, breakpointsAntDesign, breakpointsBootstrapV5, breakpointsQuasar, breakpointsSematic, breakpointsTailwind, breakpointsVuetify, cloneFnJSON, computedAsync, computedInject, createFetch, createUnrefFn, defaultDocument, defaultLocation, defaultNavigator, defaultWindow, getSSRHandler, mapGamepadToXbox360Controller, onClickOutside, onKeyDown, onKeyPressed, onKeyStroke, onKeyUp, onLongPress, onStartTyping, setSSRHandler, templateRef, unrefElement, useActiveElement, useAsyncQueue, useAsyncState, useBase64, useBattery, useBluetooth, useBreakpoints, useBroadcastChannel, useBrowserLocation, useCached, useClipboard, useCloned, useColorMode, useConfirmDialog, useCssVar, useCurrentElement, useCycleList, useDark, useDebouncedRefHistory, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDisplayMedia, useDocumentVisibility, useDraggable, useDropZone, useElementBounding, useElementByPoint, useElementHover, useElementSize, useElementVisibility, useEventBus, useEventListener, useEventSource, useEyeDropper, useFavicon, useFetch, useFileDialog, useFileSystemAccess, useFocus, useFocusWithin, useFps, useFullscreen, useGamepad, useGeolocation, useIdle, useImage, useInfiniteScroll, useIntersectionObserver, useKeyModifier, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMemoize, useMemory, useMounted, useMouse, useMouseInElement, useMousePressed, useMutationObserver, useNavigatorLanguage, useNetwork, useNow, useObjectUrl, useOffsetPagination, useOnline, usePageLeave, useParallax, usePermission, usePointer, usePointerSwipe, usePreferredColorScheme, usePreferredContrast, usePreferredDark, usePreferredLanguages, usePreferredReducedMotion, useRafFn, useRefHistory, useResizeObserver, useScreenOrientation, useScreenSafeArea, useScriptTag, useScroll, useScrollLock, useSessionStorage, useShare, useSpeechRecognition, useSpeechSynthesis, useStepper, useStorage, useStorageAsync, useStyleTag, useSupported, useSwipe, useTemplateRefsList, useTextDirection, useTextSelection, useTextareaAutosize, useThrottledRefHistory, useTimeAgo, useTimeoutPoll, useTimestamp, useTitle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useVibrate, useVirtualList, useWakeLock, useWebNotification, useWebSocket, useWebWorker, useWebWorkerFn, useWindowFocus, useWindowScroll, useWindowSize };\n","export default function () {\r\n  const readMore = (description: string, id: number, selectorElId: string, descriptionElId: string) => {\r\n    const descriptionEl = document.getElementById(`${descriptionElId}${id}`)\r\n    if (descriptionEl !== null) {\r\n      descriptionEl.innerHTML = description\r\n    }\r\n\r\n    const readMoreEl = document.getElementById(`${selectorElId}${id}`)\r\n    readMoreEl?.remove()\r\n  }\r\n\r\n  return {\r\n    readMore\r\n  }\r\n}\r\n","<template>\r\n  <section class=\"flex-col info\">\r\n    <div v-if=\"artworkDetail.users\" class=\"user-info\">\r\n      <div class=\"flex flex-row w-full\">\r\n        <nuxt-link :to=\"'/profile/'+artworkDetail.users.username\">\r\n          <img class=\"avatar\" :src=\"avatarCoverUrl(artworkDetail.users.avatar_bucket, artworkDetail.users.avatar_filename)\" @error=\"imageLoadError\">\r\n        </nuxt-link>\r\n        <div class=\"w-full name\">\r\n          <div class=\"flex flex-row justify-between\">\r\n            <div class=\"flex flex-col\">\r\n              <nuxt-link :to=\"'/profile/'+artworkDetail.users.username\" class=\"fullname\">\r\n                {{ artworkDetail.users.name }}\r\n              </nuxt-link>\r\n              <nuxt-link :to=\"'/profile/'+artworkDetail.users.username\" class=\"username\">\r\n                @{{ artworkDetail.users.username }}\r\n              </nuxt-link>\r\n            </div>\r\n\r\n            <!-- close modal button -->\r\n            <div\r\n              v-show=\"isModal\"\r\n              class=\"p-1 h-7 font-bold rounded-md border-2 cursor-pointer hover:shadow-md border-color-primary\"\r\n              style=\"font-size: 10px;\"\r\n              @click=\"closeModal(section + '-modal')\"\r\n            >\r\n              ESC\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mb-2 text-base font-bold\">\r\n      {{ artworkDetail.title }}\r\n    </div>\r\n\r\n    <div v-if=\"artworkDetail.description\" class=\"mb-4\">\r\n      <span\r\n        :id=\"'mview-'+isDesktop+'-description-'+artworkDetail.id\"\r\n        v-html=\"artworkDetail.description.length > 300 ? `${artworkDetail.description.slice(0, 300)}...` : artworkDetail.description\"\r\n      />\r\n      <a \r\n        v-if=\"artworkDetail.description.length > 300\" \r\n        :id=\"'mview-'+isDesktop+'-read-more-'+artworkDetail.id\" \r\n        class=\"href\" \r\n        @click.prevent=\"readMore(artworkDetail.description, artworkDetail.id, 'mview-'+isDesktop+'-read-more-', 'mview-'+isDesktop+'-description-')\"\r\n      >\r\n        {{ $t('readMore') }}\r\n      </a>\r\n    </div>\r\n\r\n    <div class=\"mb-4\">\r\n      <span :class=\"[\r\n        'italic text-color-secondary',\r\n        { 'font-bold text-red-400': previewMode }\r\n      ]\">\r\n        {{ !previewMode ? $t('publishedOn') : $t('willBePublishedOn') }}\r\n      </span> {{ formatDate(artworkDetail.scheduled_post) }}\r\n    </div>\r\n\r\n    <!-- tags -->\r\n    <div v-if=\"artworkDetail.artwork_has_tags && artworkDetail.artwork_has_tags.length\" class=\"tags\">\r\n      <span \r\n        v-for=\"tag in artworkDetail.artwork_has_tags\" \r\n        :key=\"tag.artwork_tags.id\" \r\n        class=\"tag\"\r\n      >\r\n        <nuxt-link :to=\"'/works/browse?tags=' + tag.artwork_tags.tag.replaceAll(' ', '+')\">\r\n          {{ tag.artwork_tags.tag }}\r\n        </nuxt-link>\r\n      </span>\r\n      \r\n      <!-- <span class=\"suggest\">\r\n        +suggest\r\n      </span> -->\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\n// composables\r\nimport useReadMore from '~/composables/useReadMore'\r\n\r\ndefineProps ({\r\n  section: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  isModal: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  artworkDetail: {\r\n    type: Object,\r\n    default: () => {}\r\n  },\r\n  previewMode: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  isDesktop: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\nconst route = useRoute()\r\n\r\n/** Read more description */\r\nconst readMore = (description, workId, selectorElId, descriptionElId) => {\r\n  useReadMore().readMore(description, workId, selectorElId, descriptionElId)\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"~/assets/css/artworks/view.scss\";\r\n</style>\r\n","<template>\r\n  <section :class=\"sectionClass\">\r\n    <span \r\n      v-for=\"work in works\" \r\n      :key=\"work.id\" \r\n      :class=\"[\r\n        'work-thumbnail theme-color-bg rounded-lg',\r\n        work._count.artwork_assets > 1 && currentWorkId != work.id ? 'work-multiple' : '',\r\n        { 'border-4 border-yellow-400': manageList.includes(work.id) || currentWorkId == work.id }\r\n      ]\"\r\n    >\r\n      <!-- Desktop -->\r\n      <a\r\n        v-if=\"!isMobile() && !isHref && !isMiniList\"\r\n        :href=\"'/a/'+work.id\"\r\n        @click.prevent=\"manageMode ? addToManageList(work.id) : view(work.id)\"\r\n        class=\"w-full h-full theme-color-bg\"\r\n      >\r\n        <div class=\"overflow-hidden relative text-center rounded-md\">\r\n          <p v-if=\"work._count.artwork_assets > 1 && !applyExplicitFilter(auth, work.is_explicit)\">{{ work._count.artwork_assets }}</p>\r\n          <span v-if=\"applyExplicitFilter(auth, work.is_explicit)\" class=\"absolute top-1/2 left-1/2 z-10 text-xl font-semibold text-white transform -translate-x-1/2 -translate-y-1/2\">{{ $t('explicitContent') }}</span>\r\n          \r\n          <a \r\n            :href=\"'/a/'+work.id\"\r\n            :class=\"[\r\n              { 'animate-wigglefast': manageMode }\r\n            ]\"\r\n          >\r\n            <img \r\n              class=\"object-cover w-full h-full unselectable\"\r\n              :class=\"{ 'blur-3xl brightness-50 unclickable': applyExplicitFilter(auth, work.is_explicit) }\"\r\n              :src=\"artworkThumb(work.artwork_assets[0].bucket, work.artwork_assets[0].filename, 'thumbnail')\"\r\n              @error=\"imageLoadError\"\r\n            >\r\n          </a>\r\n        </div>\r\n      </a>\r\n      \r\n      <!-- Mobile or smaller device -->\r\n      <nuxt-link\r\n        v-else\r\n        @click=\"manageMode ? addToManageList(work.id) : open(work.id)\"\r\n      >\r\n        <div class=\"overflow-hidden relative text-center rounded-md\">\r\n          <p v-if=\"work._count.artwork_assets > 1 && !applyExplicitFilter(auth, work.is_explicit)\">{{ work._count.artwork_assets }}</p>\r\n          <span v-if=\"applyExplicitFilter(auth, work.is_explicit)\" class=\"absolute top-1/2 left-1/2 z-10 text-xl font-semibold text-white transform -translate-x-1/2 -translate-y-1/2\">{{ $t('explicitContent') }}</span>\r\n          \r\n          <a \r\n            :href=\"'/a/'+work.id\"\r\n            @click.prevent=\"void\"\r\n            :class=\"[\r\n              { 'animate-wigglefast': manageMode }\r\n            ]\"\r\n          >\r\n            <img \r\n              class=\"object-cover w-full h-full unselectable\"\r\n              :class=\"{ 'blur-3xl brightness-50 unclickable': applyExplicitFilter(auth, work.is_explicit) }\"\r\n              :src=\"artworkThumb(work.artwork_assets[0].bucket, work.artwork_assets[0].filename, 'thumbnail')\"\r\n              @error=\"imageLoadError\"\r\n            >\r\n          </a>\r\n        </div>\r\n      </nuxt-link>\r\n    </span>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { useMediaQuery } from '@vueuse/core'\r\n\r\n// stores\r\nimport authStore from '@/stores/auth.store'\r\n\r\n// stores\r\nconst auth = authStore()\r\n\r\nconst emits = defineEmits ('feedManageList')\r\nconst props = defineProps ({\r\n  works: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  view: {\r\n    type: Function,\r\n    default: () => {}\r\n  },\r\n  sectionClass: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  isHref: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  manageMode: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  isMiniList: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  currentWorkId: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n})\r\n\r\nwatch (() => props.currentWorkId, (newWorkId) => {\r\n  currentWorkId.value = newWorkId\r\n})\r\n\r\nconst router = useRouter()\r\n\r\nconst currentWorkId = ref(props.currentWorkId)\r\nconst isLargeScreen = useMediaQuery('(min-width: 1024px)')\r\nconst open = (workId) => {\r\n  if (isLargeScreen.value && !props.isMiniList) {\r\n    currentWorkId.value = workId\r\n    props.view(workId)\r\n  } else {\r\n    if (props.isMiniList) {\r\n      currentWorkId.value = workId\r\n      props.view(workId)\r\n    } else {\r\n      router.replace({\r\n        path: '/a/'+workId\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nconst manageList = ref([])\r\nconst addToManageList = (workId) => {\r\n  if (manageList.value.includes(workId)) {\r\n    const indexOfId = manageList.value.indexOf(workId)\r\n    manageList.value.splice(indexOfId, 1)\r\n  } else {\r\n    manageList.value.push(workId)\r\n  }\r\n\r\n  emits('feedManageList', manageList.value)\r\n}\r\n\r\nwatch (() => props.manageMode, (currentState) => {\r\n  if (currentState === false) {\r\n    manageList.value = []\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"~/assets/css/artworks/view.scss\";\r\n@import \"~/assets/css/artworks/list.scss\";\r\n</style>\r\n","<template>\r\n  <div class=\"artist-works\">\r\n    <div class=\"heading\">\r\n      <span>\r\n        {{ $t('artworks.moreArtworkBy') }}\r\n        <nuxt-link v-if=\"artworkDetail.users\" :to=\"'/profile/'+artworkDetail.users.username\" class=\"text-colored\">\r\n          {{ artworkDetail.users.username }} &#60;{{ artworkDetail.users.name }}&#62;\r\n        </nuxt-link>\r\n      </span>\r\n\r\n      <nuxt-link :to=\"'/profile/'+artworkDetail.users.username\" target=\"_blank\" class=\"flex flex-row cursor-pointer\">\r\n        <Icon :name=\"'i-ci-external-link'\" />\r\n      </nuxt-link>\r\n    </div>\r\n    \r\n    <LoadingEmptyErrorMessage \r\n      :loading=\"loading\"\r\n      :error=\"isError\"\r\n      class=\"mt-2\"\r\n    />\r\n\r\n    <!-- User artwork's list -->\r\n    <WorkList \r\n      v-show=\"!loading && !isError\"\r\n      class=\"gap-2 md:gap-4\"\r\n      :class=\"[ pagination.options.nextPrevLoading ? 'animate-pulse' : '', paginationPerPage === 6 ? 'grid-cols-6' : 'grid-cols-4' ]\"\r\n      :section-class=\"'works'\"\r\n      :works=\"worksByArtist\"\r\n      :view=\"view\"\r\n      :is-href=\"isHref\"\r\n      :is-mini-list=\"true\"\r\n      :current-work-id=\"artworkDetail.id\"\r\n    />\r\n\r\n    <!-- Pagination controller -->\r\n    <div v-if=\"artworkDetail.users\" v-show=\"!loading\" class=\"pagination-controller\">\r\n      <span \r\n        @click=\"pagination.options.disableArtistPrevButton ? null : nextPrevByArtist(artworkDetail.users.id, 'prev')\"\r\n      >\r\n        <Icon :name=\"'i-ion-chevron-back'\" />\r\n      </span>\r\n      <span \r\n        @click=\"pagination.options.disableArtistNextButton ? null : nextPrevByArtist(artworkDetail.users.id, 'next')\"\r\n      >\r\n        <Icon :name=\"'i-ion-chevron-forward'\" />\r\n      </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// components\r\nimport WorkList from '~/components/artworks/WorkList.vue'\r\nimport Icon from '~/components/globals/Icon.vue'\r\nimport LoadingEmptyErrorMessage from '~/components/globals/LoadingEmptyErrorMessage.vue'\r\n\r\n/**\r\n * @props\r\n */\r\nconst props = defineProps ({\r\n  artworkDetail: {\r\n    type: Object,\r\n    default () {\r\n      return {}\r\n    }\r\n  },\r\n  keepArtistPageNumber: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  view: Function,\r\n  isHref: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  paginationPerPage: {\r\n    type: Number,\r\n    default: 4\r\n  }\r\n})\r\n\r\n// assign artwork detail from props to variable detail\r\nconst detail = props.artworkDetail\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst artworkApi = useArtwork(oApiConfiguration, fetchOptions())\r\n\r\n// \r\nconst currentViewUserId = ref(null)\r\n\r\nonMounted (() => {\r\n  if (!props.keepArtistPageNumber) {\r\n    pagination.page = -1\r\n  }\r\n  nextPrevByArtist(detail.users.id)\r\n})\r\n\r\n/** Get artist's works */\r\nconst loading = ref(true)\r\nconst worksByArtist = ref([])\r\nconst pagination = reactive({\r\n  page: 0,\r\n  perPage: props.paginationPerPage,\r\n  options: {\r\n    nextPrevLoading: false,\r\n    disableArtistNextButton: true,\r\n    disableArtistPrevButton: true\r\n  }\r\n})\r\nconst nextPrevByArtist = async (userId, mode) => {\r\n  loading.value = true\r\n  pagination.options.nextPrevLoading = true\r\n\r\n  if (userId !== currentViewUserId.value) {\r\n    currentViewUserId.value = userId\r\n    pagination.page = -1\r\n  }\r\n\r\n  if (mode === 'prev') {\r\n    pagination.page -= 1\r\n  } else {\r\n    pagination.page += 1\r\n  }\r\n\r\n  const [works, workPagination, error] = await artworkApi.getUserArtworks({\r\n    userId,\r\n    pagination: {\r\n      page: pagination.page,\r\n      perPage: pagination.perPage\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    loading.value = false\r\n    showError()\r\n  } else {\r\n    if (workPagination.next_previous.prev_page === null || workPagination.next_previous.prev_page === undefined) {\r\n      pagination.options.disableArtistPrevButton = true\r\n    } else {\r\n      pagination.options.disableArtistPrevButton = false\r\n    }\r\n\r\n    if (workPagination.next_previous.next_page === null || workPagination.next_previous.next_page === undefined) {\r\n      pagination.options.disableArtistNextButton = true\r\n    } else {\r\n      pagination.options.disableArtistNextButton = false\r\n    }\r\n    \r\n    worksByArtist.value = works\r\n  }\r\n\r\n  pagination.options.nextPrevLoading = false\r\n  loading.value = false\r\n}\r\n\r\n/** When error occured while trying to fetch user's artworks */\r\nconst isError = ref(false)\r\nconst showError = () => {\r\n  isError.value = true\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"~/assets/css/artworks/view.scss\";\r\n</style>\r\n","// @ts-nocheck\r\nimport {\r\n  CollectionsApi,\r\n  UserCountersApi\r\n} from '~/api/openapi/api'\r\nimport { workTypes } from '~/types/works'\r\n\r\nexport default function (oApiConfiguration: any, fetchOptions: any) {\r\n  const createCollection = async (\r\n    type: workTypes, \r\n    inputData: {\r\n      title: string,\r\n      description: string,\r\n      isPublic: boolean | 0 | 1\r\n    }\r\n  ) => {\r\n    try {\r\n      const { data } = await new CollectionsApi(oApiConfiguration)\r\n        .create(\r\n          {\r\n            name: inputData.title,\r\n            description: inputData.description,\r\n            is_public: inputData.isPublic ? 1 : 0,\r\n            type\r\n          },\r\n          fetchOptions\r\n        )\r\n\r\n      return [data.success, data.data, null]\r\n    } catch (error) {\r\n      return [null, null, error]\r\n    }\r\n  }\r\n\r\n  const getInfo = async (collectionId: number) => {\r\n    try {\r\n      const data = await new CollectionsApi(oApiConfiguration)\r\n        .detail(collectionId, fetchOptions)\r\n\r\n      return [data.data, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all collections of a user\r\n   * @param userId \r\n   * @param type \r\n   * @param perPage \r\n   * @param page \r\n   * @returns \r\n   */\r\n  const fetchCollections = async (params: {\r\n    userId: number,\r\n    type: string,\r\n    name?: string,\r\n    pagination: {\r\n      page: number,\r\n      perPage: number,\r\n    }\r\n  }) => {\r\n    try {\r\n      const { data } = await new CollectionsApi(oApiConfiguration)\r\n        .listUserCollections(\r\n          params.userId,\r\n          params.type,\r\n          params.pagination.page,\r\n          params.pagination.perPage,\r\n          params.name,\r\n          fetchOptions\r\n        )\r\n\r\n      const collections: any = data.data.collections\r\n      const pagination: any = data.data.pagination\r\n\r\n      let showLoadMore: boolean = true\r\n      if (pagination.current_page === pagination.total_page) {\r\n        showLoadMore = false\r\n      }\r\n\r\n      return [collections, showLoadMore, null]\r\n    } catch (error) {\r\n      return [null, false, error]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get items of a collection\r\n   * @param params \r\n   * @returns \r\n   */\r\n  const listCollectionItems = async (params: {\r\n    collectionId: number,\r\n    pagination: {\r\n      page: number,\r\n      perPage: number\r\n    }\r\n  }) => {\r\n    try {\r\n      const { data } = await new CollectionsApi(oApiConfiguration)\r\n        .listCollectionItems(\r\n          params.collectionId,\r\n          params.pagination.perPage,\r\n          params.pagination.page,\r\n          fetchOptions\r\n        )\r\n\r\n      const pagination: any = data.data.pagination\r\n      \r\n      let showLoadMore: boolean = true\r\n      if (pagination.current_page === pagination.total_page) {\r\n        showLoadMore = false\r\n      }\r\n\r\n      return [data.data.items, showLoadMore, null]\r\n    } catch (error) {\r\n      return [null, false, error]\r\n    }\r\n  }\r\n\r\n  // todo\r\n  const update = async (inputData: {\r\n    id: number,\r\n    name: string,\r\n    description?: string,\r\n    isPublic: 0 | 1\r\n  }) => {\r\n    try {\r\n      const { data } = await new CollectionsApi(oApiConfiguration)\r\n        .updateCollection(\r\n          {\r\n            id: inputData.id,\r\n            name: inputData.name,\r\n            description: inputData.description,\r\n            is_public: inputData.isPublic\r\n          },\r\n          fetchOptions\r\n        )\r\n    \r\n      return [data.success, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const getCurrentSaveInfo = async (type: workTypes, workId: number) => {\r\n    try {\r\n      const { data } = await new CollectionsApi(oApiConfiguration)\r\n        .getCurrentSaveInfo(type, workId, fetchOptions)\r\n\r\n      return [data.data, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const addItem = async (params: {\r\n    collectionId: number,\r\n    type: workTypes,\r\n    workId: number\r\n  }) => {\r\n    try {\r\n      await new CollectionsApi(oApiConfiguration)\r\n        .addItemToCollection(\r\n          params.type,\r\n          params.collectionId,\r\n          {\r\n            id: params.workId\r\n          },\r\n          fetchOptions\r\n        )\r\n\r\n      return [true, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const removeItem = async (params: {\r\n    collectionId: number,\r\n    type: workTypes,\r\n    workId: number\r\n  }) => {\r\n    try {\r\n      const { data } = await new CollectionsApi(oApiConfiguration)\r\n        .removeItemFromCollection(\r\n          params.type,\r\n          params.collectionId,\r\n          {\r\n            id: params.workId\r\n          },\r\n          fetchOptions\r\n        )\r\n      \r\n      return [data.success, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const deleteCollection = async (collectionId: number) => {\r\n    try {\r\n      const { data } = await new CollectionsApi(oApiConfiguration)\r\n        .collectionsIdDelete(collectionId, fetchOptions)\r\n\r\n      return [data.success, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Count how many collection do user have (all collection types)\r\n   * @param userId \r\n   * @returns \r\n   */\r\n  const countCollections = async (userId: number) => {\r\n    try {\r\n      const { data } = await new UserCountersApi(oApiConfiguration)\r\n        .countUserCollections(\r\n          userId,\r\n          fetchOptions\r\n        )\r\n\r\n      return [data.data.total, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Count how many artwork collection do user have (only for artwork type)\r\n   * @param userId \r\n   * @returns \r\n   */\r\n  const countArtworkCollections = async (userId: number) => {\r\n    try {\r\n      const { data } = await new UserCountersApi(oApiConfiguration)\r\n        .countUserArtworkCollections(\r\n          userId,\r\n          fetchOptions\r\n        )\r\n\r\n      return [data.data.total, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  return {\r\n    createCollection,\r\n    getInfo,\r\n    countCollections,\r\n    countArtworkCollections,\r\n    fetchCollections,\r\n    listCollectionItems,\r\n    getCurrentSaveInfo,\r\n    addItem,\r\n    removeItem,\r\n    update,\r\n    deleteCollection\r\n  }\r\n}\r\n","<template>\r\n  <div>\r\n    <div class=\"w-full modal-layer xl:w-3/12 lg:w-2/5\">\r\n      <div>\r\n        <div class=\"flex flex-row justify-between w-full\">\r\n          <span class=\"title\">{{ $t('collections.addItem.form.title') }}</span>\r\n          \r\n          <div class=\"flex float-right flex-row gap-2 mb-2 cursor-pointer\">\r\n            <div class=\"modal-close\" @click=\"cancel()\">\r\n              <Icon :name=\"'close'\" class=\"text-2xl\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-show=\"!config.loading && !isError && !isEmpty\" class=\"list\">\r\n          <div class=\"overflow-y-scroll pr-2 max-h-60\">\r\n            <div \r\n              v-for=\"(collection, index) in collections\"\r\n              :key=\"collection.id\"\r\n              class=\"item\"\r\n              :class=\"[{ 'mt-2': index !== 0 }, selectedCollections.includes(collection.id) ? 'button-color text-white' : 'theme-color-secondary']\"\r\n              @click=\"selectUnselect(collection.id)\" \r\n            >\r\n              <div class=\"flex flex-row justify-between\">\r\n                <span>{{ collection.name }}</span>\r\n                <span class=\"ml-2 font-bold\" :class=\"selectedCollections.includes(collection.id) ? 'text-white' : 'text-colored'\">{{ collection._count.collection_has_artworks }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div v-show=\"showLoadMoreButton\" class=\"mt-2 primary-button\" @click=\"loadMore()\">\r\n            <Icon :name=\"'chevron-down-outline'\" class=\"mr-2\" />\r\n            {{ $t('loadMore') }}\r\n          </div>\r\n\r\n          <div class=\"flex float-right flex-row gap-2 mt-4\">\r\n            <button class=\"cancel-button\" @click=\"cancel()\">\r\n              {{ $t('cancel') }}\r\n            </button>\r\n            <button class=\"primary-button\" @click=\"save()\">\r\n              {{ $t('save') }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- new collection -->\r\n        <div v-show=\"!config.loading && !isError && !isEmpty\">\r\n          <input \r\n            v-model=\"newCollectionInput\" \r\n            type=\"text\" \r\n            class=\"mt-4 mb-0 form-input theme-color-secondary\" \r\n            :class=\"{ 'border border-red-400': createCollectionFailureAlert }\"\r\n            :placeholder=\"$t('collections.createNewCollection')\"\r\n          >\r\n\r\n          <div class=\"flex flex-row justify-between mt-2\">\r\n            <div>\r\n              <span \r\n                v-show=\"collectionCreatedAlert\"\r\n                class=\"font-bold text-green-400 transition-all duration-200 ease-in-out\"\r\n              >\r\n                {{ $t('collections.collectionCreated') }}\r\n              </span>\r\n              <span \r\n                v-show=\"createCollectionFailureAlert\"\r\n                class=\"font-bold text-red-400 transition-all duration-200 ease-in-out\"\r\n              >\r\n                {{ $t('collections.failedToCreateCollection') }}\r\n              </span>\r\n            </div>\r\n            <button v-show=\"newCollectionInput && newCollectionInput.length > 0\" class=\"primary-button\" @click=\"create()\">\r\n              {{ $t('create') }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- On loading, empty or error occured -->\r\n      <LoadingEmptyErrorMessage\r\n        :loading=\"config.loading\"\r\n        :empty=\"isEmpty\"\r\n        :error=\"isError\"\r\n        :fetch=\"fetchCollection\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// API\r\nimport {\r\n  CollectionsApi\r\n} from '~/api/openapi/api'\r\n\r\n// stores\r\nimport useAuthStore from '@/stores/auth.store'\r\n\r\n// components\r\nimport Icon from '~/components/globals/Icon.vue'\r\nimport LoadingEmptyErrorMessage from '~/components/globals/LoadingEmptyErrorMessage.vue'\r\n\r\n// composables\r\nimport useCollection from '~/composables/users/useCollection'\r\n\r\n/**\r\n * @stores\r\n */\r\nconst auth = useAuthStore()\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst collectionApi = useCollection(oApiConfiguration, fetchOptions())\r\n\r\nconst emits = defineEmits (['save'])\r\nconst props = defineProps ({\r\n  modalId: {\r\n    type: String,\r\n    default: 'collection-selection-modal'\r\n  },\r\n  workId: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n})\r\n\r\nonMounted (() => {\r\n  fetchCollection()\r\n  fetchCurrentSaved()\r\n})\r\n\r\n/**\r\n * @methods\r\n */\r\nconst config = ref({\r\n  pagination: {\r\n    page: 0,\r\n    perPage: 10\r\n  },\r\n  loading: false\r\n})\r\nconst isError = ref(false)\r\nconst isEmpty = ref(false)\r\nconst collections = ref([])\r\nconst fetchCollection = async (isLoadMore = false) => {\r\n  collections.value = []\r\n\r\n  if (!isLoadMore) {\r\n    config.value.loading = true\r\n  }\r\n\r\n  const [data, showLoadMore, error] = await collectionApi.fetchCollections({\r\n    userId: auth.user.id,\r\n    type: 'artwork',\r\n    pagination: {\r\n      page: config.value.pagination.page,\r\n      perPage: config.value.pagination.perPage\r\n    }\r\n  })\r\n  \r\n  config.value.loading = false\r\n\r\n  if (error) {\r\n    isError.value = true\r\n  }\r\n\r\n  if (!error) {\r\n    if (data && data.length > 0) {\r\n      if (!showLoadMore) {\r\n        showLoadMoreButton.value = false\r\n      } else {\r\n        config.value.pagination.page += 1\r\n        showLoadMoreButton.value = true\r\n      }\r\n\r\n      data.forEach((collection) => {\r\n        collections.value.push(collection)\r\n      })\r\n    } else {\r\n      isEmpty.value = true\r\n    }\r\n  }\r\n}\r\n\r\nconst currentSaved = ref([])\r\nconst fetchCurrentSaved = async () => {\r\n  isError.value = false\r\n\r\n  currentSaved.value = []\r\n  selectedCollections.value = []\r\n  unselectedCollections.value = []\r\n\r\n  await setTimeout(async () => {\r\n    const [data, error] = await collectionApi.getCurrentSaveInfo(\r\n      'artwork',\r\n      props.workId\r\n    )\r\n\r\n    if (error) {\r\n      isError.value = true\r\n    } else {\r\n      for (const collection of data) {\r\n        selectedCollections.value.push(collection.collection_id)\r\n        currentSaved.value.push(collection.collection_id)\r\n      }\r\n    }\r\n  }, 300)\r\n}\r\n\r\n/** LOAD MORE FUNCTION */\r\nconst showLoadMoreButton = ref(true)\r\nconst loadMore = async () => {\r\n  await fetchCollection({\r\n    isLoadMore: true\r\n  })\r\n  await fetchCurrentSaved()\r\n}\r\n\r\nconst selectedCollections = ref([])\r\nconst unselectedCollections = ref([])\r\nconst selectUnselect = (collectionId) => {\r\n  if (selectedCollections.value.includes(collectionId)) {\r\n    unselectedCollections.value.push(collectionId)\r\n    \r\n    // remove from selected collection list\r\n    const indexOfId = selectedCollections.value.indexOf(collectionId)\r\n    selectedCollections.value.splice(indexOfId, 1)\r\n  } else {\r\n    selectedCollections.value.push(collectionId)\r\n\r\n    // remove from unselected collection list\r\n    if (unselectedCollections.value.includes(collectionId)) {\r\n      const indexOfId = unselectedCollections.value.indexOf(collectionId)\r\n      unselectedCollections.value.splice(indexOfId, 1)\r\n    }\r\n  }\r\n}\r\n\r\nconst save = async () => {\r\n  try {\r\n    // save to collection(s)\r\n    for (const collectionId of selectedCollections.value) {\r\n      await collectionApi.addItem({\r\n        collectionId,\r\n        type: 'artwork',\r\n        workId: props.workId\r\n      })\r\n    }\r\n\r\n    // remove from collection(s)\r\n    if (unselectedCollections.value.length) {\r\n      for (const collectionId of unselectedCollections.value) {\r\n        await collectionApi.removeItem({\r\n          collectionId,\r\n          type: 'artwork',\r\n          workId: props.workId\r\n        })\r\n      }\r\n    }\r\n\r\n    let unsaved = false\r\n    if (selectedCollections.value.length === 0 && currentSaved.value.length === unselectedCollections.value.length) {\r\n      unsaved = true\r\n    }\r\n\r\n    await fetchCurrentSaved()\r\n    useModal().closeModal(props.modalId)\r\n    emits('save', unsaved)\r\n  } catch (error) {\r\n    // todo: handle error when failed to save\r\n  }\r\n}\r\n\r\nconst newCollectionInput = ref('')\r\nconst createCollectionFailureAlert = ref(false)\r\nconst create = async () => {\r\n  createCollectionFailureAlert.value = false\r\n\r\n  const [success, data, error] = await collectionApi.createCollection(\r\n    'artwork',\r\n    {\r\n      title: newCollectionInput.value,\r\n      isPublic: 1,\r\n      description: ''\r\n    }\r\n  )\r\n\r\n  if (success) {\r\n    collections.value = []\r\n    clear()\r\n\r\n    config.value.pagination.page = 0\r\n    await fetchCollection()\r\n    await fetchCurrentSaved()\r\n    \r\n    newCollectionInput.value = ''\r\n\r\n    showCollectionCreatedAlert()\r\n  } else {\r\n    // show error alert when failed to create collection\r\n    createCollectionFailureAlert.value = true\r\n  }\r\n}\r\n\r\nconst collectionCreatedAlert = ref(false)\r\nconst showCollectionCreatedAlert = () => {\r\n  collectionCreatedAlert.value = true\r\n\r\n  setInterval(() => {\r\n    collectionCreatedAlert.value = false\r\n  }, 5000)\r\n}\r\n\r\nconst clear = () => {\r\n  selectedCollections.value = []\r\n}\r\n\r\nconst cancel = () => {\r\n  useModal().closeModal(props.modalId)\r\n  clear()\r\n}\r\n\r\n/**\r\n * @expose\r\n */\r\ndefineExpose ({\r\n  fetchCollection,\r\n  fetchCurrentSaved\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\n.list {\r\n  @apply my-4;\r\n\r\n  .item {\r\n    @apply p-3 rounded cursor-pointer align-middle;\r\n\r\n    label {\r\n      @apply inline-flex items-center w-full;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","// @ts-nocheck\r\nimport {\r\n  AlbumsApi,\r\n  UserCountersApi\r\n} from '~/api/openapi/api'\r\nimport { workTypes } from '~/types/works'\r\n\r\nexport default function (oApiConfiguration: any, fetchOptions: any) {\r\n  const createAlbum = async (\r\n    type: workTypes, \r\n    inputData: {\r\n      title: string,\r\n      description: string,\r\n      isPublic: boolean | 0 | 1\r\n    }\r\n  ) => {\r\n    try {\r\n      const { data } = await new AlbumsApi(oApiConfiguration)\r\n        .createAlbum(\r\n          {\r\n            name: inputData.title,\r\n            description: inputData.description,\r\n            is_public: inputData.isPublic ? 1 : 0,\r\n            type\r\n          },\r\n          fetchOptions\r\n        )\r\n\r\n      return [data.success, data.data, null]\r\n    } catch (error) {\r\n      return [null, null, error]\r\n    }\r\n  }\r\n\r\n  const getInfo = async (albumId: number) => {\r\n    try {\r\n      const data = await new AlbumsApi(oApiConfiguration)\r\n        .getAlbumById(albumId, fetchOptions)\r\n\r\n      return [data.data, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const countAlbums = async (userId: number) => {\r\n    try {\r\n      const { data } = await new UserCountersApi(oApiConfiguration)\r\n        .countUserAlbums(\r\n          userId,\r\n          fetchOptions\r\n        )\r\n\r\n      return [data.data.total, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const countArtworkAlbums = async (userId: number) => {\r\n    try {\r\n      const { data } = await new UserCountersApi(oApiConfiguration)\r\n        .countUserArtworkAlbums(\r\n          userId,\r\n          fetchOptions\r\n        )\r\n\r\n      return [data.data.total, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const fetchAlbums = async (\r\n    userId: number,\r\n    type: string,\r\n    perPage: number,\r\n    page: number\r\n  ) => {\r\n    try {\r\n      const { data } = await new AlbumsApi(oApiConfiguration)\r\n        .listUserAlbums(\r\n          userId,\r\n          perPage,\r\n          page,\r\n          type,\r\n          fetchOptions\r\n        )\r\n\r\n      const pagination: any = data.data.pagination\r\n\r\n      let showLoadMore: boolean = true\r\n      if (pagination.current_page === pagination.total_page) {\r\n        showLoadMore = false\r\n      }\r\n\r\n      return [data.data.albums, showLoadMore, null]\r\n    } catch (error) {\r\n      return [null, false, error]\r\n    }\r\n  }\r\n\r\n  const listAlbumItems = async (params: {\r\n    albumId: number,\r\n    pagination: {\r\n      page: number,\r\n      perPage: number\r\n    }\r\n  }) => {\r\n    try {\r\n      const { data } = await new AlbumsApi(oApiConfiguration)\r\n        .getAlbumItems(\r\n          params.albumId,\r\n          params.pagination.perPage,\r\n          params.pagination.page,\r\n          fetchOptions\r\n        )\r\n\r\n      const pagination: any = data.data.pagination\r\n      \r\n      let showLoadMore: boolean = true\r\n      if (pagination.current_page === pagination.total_page) {\r\n        showLoadMore = false\r\n      }\r\n\r\n      return [data.data.works, showLoadMore, null]\r\n    } catch (error) {\r\n      return [null, false, error]\r\n    }\r\n  }\r\n\r\n  const update = async (inputData: {\r\n    id: number,\r\n    name: string,\r\n    description?: string,\r\n    isPublic: 0 | 1\r\n  }) => {\r\n    try {\r\n      const { data } = await new AlbumsApi(oApiConfiguration)\r\n        .updateAlbum(\r\n          {\r\n            id: inputData.id,\r\n            name: inputData.name,\r\n            description: inputData.description,\r\n            is_public: inputData.isPublic\r\n          },\r\n          fetchOptions\r\n        )\r\n    \r\n      return [data.success, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const getCurrentSaveInfo = async (type: workTypes, workId: number) => {\r\n    try {\r\n      const { data } = await new AlbumsApi(oApiConfiguration)\r\n        .getCurrentAlbumSaveInfo(type, workId, fetchOptions)\r\n\r\n      return [data.data, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const addItems = async (albumIds: number[], workIds: number[]) => {\r\n    try {\r\n      for (const albumId of albumIds) {\r\n        await new AlbumsApi(oApiConfiguration)\r\n          .addWorkToAlbum({\r\n            album_id: albumId,\r\n            work_ids: workIds\r\n          }, fetchOptions)\r\n      }\r\n\r\n      return [true, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const removeItems = async (albumId: number, workList: number[]) => {\r\n    try {\r\n      const { data } = await new AlbumsApi(oApiConfiguration)\r\n        .removeWorkFromAlbum({\r\n          album_id: albumId,\r\n          work_ids: workList\r\n        }, fetchOptions)\r\n      \r\n      return [data.success, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  const deleteAlbum = async (albumId: number) => {\r\n    try {\r\n      const { data } = await new AlbumsApi(oApiConfiguration)\r\n        .deleteAlbum(albumId, fetchOptions)\r\n\r\n      return [data.success, null]\r\n    } catch (error) {\r\n      return [null, error]\r\n    }\r\n  }\r\n\r\n  return {\r\n    createAlbum,\r\n    getInfo,\r\n    countAlbums,\r\n    countArtworkAlbums,\r\n    fetchAlbums,\r\n    listAlbumItems,\r\n    getCurrentSaveInfo,\r\n    addItems,\r\n    removeItems,\r\n    update,\r\n    deleteAlbum\r\n  }\r\n}\r\n","<template>\r\n  <div>\r\n    <div class=\"w-full modal-layer xl:w-3/12 lg:w-2/5\">\r\n      <div>\r\n        <div class=\"flex flex-row justify-between w-full\">\r\n          <span class=\"title\">{{ $t('albums.selectAlbums') }}</span>\r\n          \r\n          <div class=\"flex float-right flex-row gap-2 mb-2 cursor-pointer\">\r\n            <div class=\"modal-close\" @click=\"cancel()\">\r\n              <Icon :name=\"'close'\" class=\"text-2xl\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"list\">\r\n          <div v-show=\"!loading && !isEmpty && !isError\">\r\n            <div class=\"overflow-y-scroll pr-2 max-h-60\">\r\n              <div \r\n                v-for=\"(album, index) in albums\"\r\n                :key=\"album.id\"\r\n                class=\"item\"\r\n                :class=\"[{ 'mt-2': index !== 0 }, selectedAlbums.includes(album.id) ? 'button-color text-white' : 'theme-color-secondary']\"\r\n                @click=\"selectUnselect(album.id)\" \r\n              >\r\n                <span>{{ album.name }}</span>\r\n                <span\r\n                  :class=\"[\r\n                    'ml-2 font-bold',\r\n                    selectedAlbums.includes(album.id) ? 'text-white' : 'text-colored'\r\n                  ]\"\r\n                >\r\n                  {{ album._count.album_has_artworks }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div v-show=\"config.showLoadMore\" class=\"mt-2 primary-button\" @click=\"loadMore()\">\r\n              Load More\r\n            </div>\r\n\r\n            <div class=\"flex float-right flex-row gap-2 mt-4\">\r\n              <button class=\"cancel-button\" @click=\"cancel()\">\r\n                {{ $t('cancel') }}\r\n              </button>\r\n              <button class=\"primary-button\" @click=\"save()\">\r\n                {{ $t('save') }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- On loading, empty or error occured -->\r\n      <LoadingEmptyErrorMessage\r\n        :loading=\"loading\"\r\n        :empty=\"isEmpty\"\r\n        :error=\"isError\"\r\n        :fetch=\"fetchTop\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// stores\r\nimport authStore from '@/stores/auth.store'\r\n\r\n// components\r\nimport LoadingEmptyErrorMessage from '~/components/globals/LoadingEmptyErrorMessage.vue'\r\nimport Icon from '~/components/globals/Icon.vue'\r\n\r\n// composables\r\nimport useAlbum from '~/composables/users/useAlbum'\r\n\r\nconst emits = defineEmits (['addedToAlbum'])\r\nconst props = defineProps ({\r\n  modalId: {\r\n    type: String,\r\n    default: 'album-selection-modal'\r\n  },\r\n  workId: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  workIds: {\r\n    type: Array,\r\n    default: () => []\r\n  }\r\n})\r\n\r\nonMounted (() => {\r\n  fetchAlbums()\r\n  if (!props.workIds.length) {\r\n    fetchCurrentSaved()\r\n  }\r\n})\r\n\r\nconst auth = authStore()\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst album = useAlbum(oApiConfiguration, fetchOptions())\r\n\r\nconst fetchTop = async () => {\r\n  albums.value = []\r\n  config.value.pagination.page = 0\r\n  resetLoadingEmptyErrorMessage()\r\n\r\n  await fetchAlbums()\r\n}\r\n\r\nconst albums = ref([])\r\nconst config = ref({\r\n  pagination: {\r\n    perPage: 10,\r\n    page: 0,\r\n    firstLoad: 10\r\n  },\r\n  showLoadMore: true\r\n})\r\nconst loading = ref(true)\r\nconst isError = ref(false)\r\nconst isEmpty = ref(false)\r\nconst fetchAlbums = async () => {\r\n  resetLoadingEmptyErrorMessage()\r\n  loading.value = true\r\n\r\n  const [data, showLoadMore, error] = await album.fetchAlbums(\r\n    auth.user.id,\r\n    'artwork',\r\n    config.value.pagination.page === 0 ? config.value.pagination.firstLoad : config.value.pagination.perPage,\r\n    config.value.pagination.page\r\n  )\r\n  \r\n  if (error) {\r\n    isError.value = true\r\n  }\r\n\r\n  if (!data.length) {\r\n    isEmpty.value = true\r\n  } else {\r\n    if (!showLoadMore) {\r\n      config.value.showLoadMore = false\r\n    } else {\r\n      config.value.pagination.page += 1\r\n      config.value.showLoadMore = true\r\n    }\r\n\r\n    data.forEach((album) => {\r\n      albums.value.push(album)\r\n    })\r\n  }\r\n\r\n  loading.value = false\r\n}\r\n\r\nconst resetLoadingEmptyErrorMessage = () => {\r\n  isEmpty.value = false\r\n  isError.value = false\r\n}\r\n\r\nconst currentSaved = ref([])\r\nconst fetchCurrentSaved = async () => {\r\n  currentSaved.value = []\r\n  selectedAlbums.value = []\r\n  unselectedAlbums.value = []\r\n\r\n  const [data, error] = await album.getCurrentSaveInfo(\r\n    'artwork',\r\n    props.workId\r\n  )\r\n  \r\n  for (const album of data) {\r\n    selectedAlbums.value.push(album.album_id)\r\n    currentSaved.value.push(album.album_id)\r\n  }\r\n}\r\n\r\n/** LOAD MORE FUNCTION */\r\nconst loadMore = async () => {\r\n  await fetchAlbums()\r\n  await fetchCurrentSaved()\r\n}\r\n\r\nconst selectedAlbums = ref([])\r\nconst unselectedAlbums = ref([])\r\nconst selectUnselect = (albumId) => {\r\n  if (selectedAlbums.value.includes(albumId)) {\r\n    unselectedAlbums.value.push(albumId)\r\n    \r\n    // remove from selected album list\r\n    const indexOfId = selectedAlbums.value.indexOf(albumId)\r\n    selectedAlbums.value.splice(indexOfId, 1)\r\n  } else {\r\n    selectedAlbums.value.push(albumId)\r\n\r\n    // remove from unselected album list\r\n    if (unselectedAlbums.value.includes(albumId)) {\r\n      const indexOfId = unselectedAlbums.value.indexOf(albumId)\r\n      unselectedAlbums.value.splice(indexOfId, 1)\r\n    }\r\n  }\r\n}\r\n\r\nconst save = async () => {\r\n  const [success, error] = await album.addItems(\r\n    selectedAlbums.value,\r\n    props.workIds.length ? props.workIds : [props.workId]\r\n  )\r\n\r\n  // if it's a single item, any albums that previously were selected and are now unselected will remove the item from those albums\r\n  if (!props.workIds.length) {\r\n    if (unselectedAlbums.value.length) {\r\n      for (const albumId of unselectedAlbums.value) {\r\n        await album.removeItems(\r\n          albumId,\r\n          [props.workId]\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (success) {\r\n    let unsaved = false\r\n    if (!props.workIds.length) {\r\n      if (selectedAlbums.value.length === 0 && (currentSaved.value.length === unselectedAlbums.value.length)) {\r\n        unsaved = true\r\n      }\r\n    }\r\n    \r\n    clear()\r\n    useModal().closeModal(props.modalId)\r\n    emits('addedToAlbum', props.workIds.length ? true : unsaved)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\nconst clear = () => {\r\n  selectedAlbums.value = []\r\n}\r\n\r\nconst cancel = () => {\r\n  useModal().closeModal(props.modalId)\r\n  clear()\r\n}\r\n\r\ndefineExpose ({\r\n  fetchCurrentSaved,\r\n  fetchAlbums\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\n.list {\r\n  @apply my-4;\r\n\r\n  .item {\r\n    @apply p-3 rounded flex flex-row cursor-pointer justify-between align-middle;\r\n\r\n    label {\r\n      @apply inline-flex items-center w-full;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div>\r\n    <div class=\"w-full modal-layer xl:w-1/4 lg:w-2/5\">\r\n      <p class=\"mb-4\">{{ message }}</p>\r\n      \r\n      <div class=\"flex flex-row justify-end gap-2\">\r\n        <button class=\"cancel-button\" @click=\"close(false)\">\r\n          {{ $t('no') }}\r\n        </button>\r\n        <button class=\"danger-button\" @click=\"close(true)\">\r\n          {{ $t('yes') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nconst emits = defineEmits ('onAccept')\r\nconst props = defineProps ({\r\n  modalId: {\r\n    type: String,\r\n    default: 'confirmation-dialog-modal'\r\n  },\r\n  message: {\r\n    type: String,\r\n    default: 'Are you sure?'\r\n  },\r\n  onAccept: {\r\n    type: Function,\r\n    default: () => {}\r\n  }\r\n})\r\n\r\nconst close = (accept) => {\r\n  if (accept) {\r\n    emits('onAccept', true)\r\n  }\r\n\r\n  useModal().closeModal(props.modalId)\r\n}\r\n</script>","<template>\r\n  <div>\r\n    <div class=\"opt-modal modal-layer\">\r\n      <!-- title -->\r\n      <div class=\"opt-modal__title\">\r\n        <h1>{{ reportSubmitted ? $t('reports.reportSubmitted') : reportStatus.id ? $t('reports.alreadyReported') : $t('reports.title') }}</h1>\r\n\r\n        <!-- close modal button -->\r\n        <div class=\"flex float-right flex-row gap-2 mb-2 cursor-pointer\">\r\n          <div class=\"modal-close\" @click=\"close()\">\r\n            <Icon :name=\"'i-ion-close'\" class=\"text-2xl\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- content -->\r\n      <div class=\"opt-modal__content\">\r\n        <div v-show=\"!reportSubmitted && !reportStatus.id\" class=\"report\">\r\n          <!-- report reason options -->\r\n          <div class=\"report__reason_opt\">\r\n            <div class=\"report__title\">{{ $t('reports.selectReasons') }}</div>\r\n            <span\r\n              v-for=\"reason in reasonList\"\r\n              :key=\"reason\"\r\n              :class=\"[input.selectedReasons.includes(reason) ? 'button-color' : 'theme-color-secondary']\"\r\n              @click=\"toggleSelectedReason(reason)\"\r\n            >\r\n              <div>\r\n                <Icon v-show=\"!input.selectedReasons.includes(reason)\" :name=\"'i-ion-square-outline'\" class=\"text-color-secondary\" />\r\n                <Icon v-show=\"input.selectedReasons.includes(reason)\" :name=\"'i-ion-checkbox-outline'\" class=\"text-green-300\" />\r\n              </div>\r\n\r\n              <div class=\"reason\" :class=\"[input.selectedReasons.includes(reason) ? 'text-white' : 'text-color-secondary']\">\r\n                {{ $t('reports.reasons.'+reason) }}\r\n              </div>\r\n            </span>\r\n          </div>\r\n\r\n          <!-- report reason -->\r\n          <div>\r\n            <div class=\"report__title\">{{ $t('reports.describeReason') }}</div>\r\n            <textarea \r\n              v-model=\"input.reasonDescription\"\r\n              class=\"report__reason_description\"\r\n              :placeholder=\"$t('reports.describeText')\"\r\n              cols=\"5\" \r\n              rows=\"5\"\r\n            />\r\n          </div>\r\n\r\n          <!-- buttons -->\r\n          <div class=\"report__buttons\">\r\n            <button class=\"cancel-button\" @click=\"close()\">\r\n              {{ $t('cancel') }}\r\n            </button>\r\n            <button \r\n              :class=\"input.enableSubmit ? 'primary-button' : 'disabled-button'\" \r\n              @click=\"input.enableSubmit ? submitReport() : null\"\r\n            >\r\n              {{ $t('report') }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- On report submitted -->\r\n        <div v-show=\"reportSubmitted\">\r\n          <div class=\"text-justify\">\r\n            {{ $t('reports.reportSubmittedMessage') }}\r\n          </div>\r\n          <div class=\"mt-2\">\r\n            <div>\r\n              <i>Your report ID:</i>&nbsp;\r\n              <b>#{{ reportedData.id }}</b>\r\n            </div>\r\n            <div>\r\n              <i>Report date:</i>&nbsp;\r\n              <b>{{ formatDate(reportedData.created_at) }}</b>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- if post already reported -->\r\n        <div v-show=\"reportStatus.id\">\r\n          {{ $t('reports.alreadyReportedDescription') }}\r\n          <nuxt-link class=\"underline href\" :to=\"'/reports'\">{{ $t('reports.reportStatus') }}</nuxt-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// components\r\nimport Icon from '~/components/globals/Icon.vue'\r\n\r\n// composable\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst reportApi = useReport(oApiConfiguration, fetchOptions())\r\n\r\n/**\r\n * @props\r\n */\r\nconst props = defineProps ({\r\n  type: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  postId: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  reportStatus: {\r\n    type: Object,\r\n    default: () => {}\r\n  }\r\n})\r\n\r\n/**\r\n * @input\r\n */\r\n/**\r\n * Input refs\r\n */\r\nconst reasonList = ref([\r\n  'stolen',\r\n  'spam',\r\n  'hateSpeech',\r\n  'harassment',\r\n  'falseInfo',\r\n  'suicide',\r\n  'graphic',\r\n  'terrorism',\r\n  'somethingElse'\r\n])\r\n\r\nconst input = ref({\r\n  selectedReasons: [],\r\n  reasonDescription: '',\r\n  enableSubmit: computed(() => {\r\n    if (input.value.selectedReasons.length > 0 && input.value.reasonDescription !== '') {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n})\r\n/**\r\n * @input\r\n */\r\n\r\n/**\r\n * @reportAction\r\n */\r\n/**\r\n * Toggle select and unselect report reason\r\n */\r\nconst toggleSelectedReason = (reason) => {\r\n  if (!input.value.selectedReasons.includes(reason)) {\r\n    input.value.selectedReasons.push(reason)\r\n  } else {\r\n    const indexOfUnselectedReason = input.value.selectedReasons.indexOf(reason)\r\n    input.value.selectedReasons.splice(indexOfUnselectedReason, 1)\r\n  }\r\n}\r\n\r\n/**\r\n * Submit selected reasons and filled description to moderator\r\n */\r\nconst reportSubmitted = ref(false)\r\nconst reportedData = ref({})\r\nconst submitReport = async () => {\r\n  reportSubmitted.value = false\r\n  reportedData.value = {}\r\n\r\n  const [success, data, error] = await reportApi.createNewReport({\r\n    type: props.type,\r\n    postId: props.postId,\r\n    reasons: input.value.selectedReasons.join(','),\r\n    description: input.value.reasonDescription\r\n  })\r\n\r\n  if (error && !success) {\r\n    // todo: handle error\r\n  } else {\r\n    reportSubmitted.value = true\r\n    reportedData.value = data\r\n  }\r\n}\r\n/**\r\n * @reportAction\r\n */\r\n\r\n/**\r\n * @modalClose\r\n */\r\nconst close = () => {\r\n  useModal().closeModal('report-modal')\r\n  \r\n  // reset form on modal closed\r\n  reset()\r\n}\r\n\r\nconst reset = () => {\r\n  input.value.selectedReasons = []\r\n  input.value.reasonDescription = ''\r\n  reportSubmitted.value = false\r\n}\r\n/**\r\n * @modalClose\r\n */\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\n.opt-modal {\r\n  @apply w-full xl:w-3/12 lg:w-2/5;\r\n\r\n  .opt-modal__title {\r\n    @apply flex flex-row justify-between mb-4 text-tiny;\r\n  }\r\n\r\n  .opt-modal__content {\r\n    // \r\n  }\r\n}\r\n\r\n.report {\r\n  @apply gap-2;\r\n\r\n  .report__title {\r\n    @apply italic mb-1;\r\n  }\r\n\r\n  .report__reason_opt {\r\n    @apply flex flex-col mb-2;\r\n\r\n    span {\r\n      @apply pt-2 pb-1 px-3 cursor-pointer rounded-md mb-2 flex flex-row w-full align-middle;\r\n\r\n      .icon {\r\n        @apply mr-2;\r\n      }\r\n\r\n      .reason {\r\n      }\r\n    }\r\n  }\r\n\r\n  .report__reason_description {\r\n    @apply form-input input textarea;\r\n  }\r\n\r\n  .report__buttons {\r\n    @apply flex flex-row justify-between md:justify-end gap-2;\r\n\r\n    button {\r\n      @apply w-full md:w-auto;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div>\r\n    <div class=\"w-full modal-layer xl:w-1/4 lg:w-2/5\">\r\n      <!-- title -->\r\n      <span class=\"title\">{{ $t('feeds.share.artwork.title') }}</span>\r\n\r\n      <!-- form -->\r\n      <div class=\"mt-2\">\r\n        <div v-show=\"posted\" class=\"alert-success\">\r\n          <span class=\"italic\">{{ $t('feeds.share.artwork.success') }}</span>\r\n        </div>\r\n\r\n        <div v-show=\"posting\" class=\"flex flex-row p-2 mb-2 text-white rounded-md button-color\">\r\n          <Spinner class=\"mr-2\" />\r\n          {{ $t('feeds.form.postingYourUpdate') }}\r\n        </div>\r\n\r\n        <div v-show=\"isError\" class=\"alert-danger\">\r\n          {{ $t('feeds.form.postFailure') }}\r\n        </div>\r\n\r\n        <textarea\r\n          v-model=\"feedInput\"\r\n          class=\"input form-input textarea\"\r\n          :placeholder=\"$t('typeSomething')\"\r\n          cols=\"30\"\r\n          rows=\"2\"\r\n          data-gramm=\"false\"\r\n          maxlength=\"2000\"\r\n        />\r\n\r\n        <div class=\"flex float-right flex-row gap-2\">\r\n          <button class=\"cancel-button\" @click=\"cancel()\">\r\n            {{ $t('cancel') }}\r\n          </button>\r\n          <button\r\n            :class=\"[\r\n              'primary-button'\r\n              // feedInput !== '' ? 'primary-button' : 'disabled-button'\r\n            ]\"\r\n            @click=\"shareToFeed()\"\r\n          >\r\n            {{ $t('share') }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// components\r\nimport Spinner from '~/components/globals/Spinner.vue'\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst feedApi = useFeed(oApiConfiguration, fetchOptions())\r\n\r\nconst props = defineProps ({\r\n  postId: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n})\r\n\r\nconst clear = () => {\r\n  feedInput.value = ''\r\n}\r\n\r\nconst cancel = () => {\r\n  isError.value = false\r\n  posting.value = false\r\n  posted.value = false\r\n\r\n  useModal().closeModal('share-to-feed-modal')\r\n  clear()\r\n}\r\n\r\nconst feedInput = ref('')\r\nconst isError = ref(false)\r\nconst posting = ref(false)\r\nconst posted = ref(false)\r\nconst shareToFeed = async () => {\r\n  isError.value = false\r\n  posting.value = true\r\n  posted.value = false\r\n\r\n  const [success, data, error] = await feedApi.shareArtworkToFeed({\r\n    text: feedInput.value,\r\n    workId: props.postId\r\n  })\r\n\r\n  if (success) {\r\n    posted.value = true\r\n\r\n    setTimeout(() => {\r\n      // clear input and close the modal\r\n      cancel()\r\n    }, 500)\r\n  } else {\r\n    isError.value = true\r\n  }\r\n\r\n  posting.value = false\r\n}\r\n</script>","<template>\r\n  <div\r\n    v-show=\"loading && !isMobile() && isModal\"\r\n    class=\"mx-auto w-full align-middle work-view md:w-1/2\"\r\n  >\r\n    <LoadingEmptyErrorMessage\r\n      :loading=\"loading\"\r\n    />\r\n  </div>\r\n\r\n  <div\r\n    v-show=\"!loading\"\r\n    class=\"work-container work-view\"\r\n    :class=\"!isModal ? 'w-full' : 'w-full 2xl:w-4/6 2xl:mx-auto p-2 md:p-6 theme-color'\"\r\n  >\r\n    <!-- Left side: Image view; total of views, likes, comments, and other works by user -->\r\n    <div class=\"left-side\" :class=\"{ 'overflow-y-scroll mr-6': isModal }\">\r\n      <div v-if=\"previewMode && !deleteSuccess\" class=\"p-4 mb-4 w-full text-center text-black bg-yellow-200 rounded-md theme-color-secondary\">\r\n        <div class=\"flex flex-row justify-center mb-2\">\r\n          <Icon :name=\"'i-ion-alert-outline'\" />\r\n          <div>You are currently viewing the preview mode, this work isn't published yet.</div>\r\n        </div>\r\n        <div class=\"font-bold cursor-pointer\">\r\n          <span class=\"text-red-500\" @click=\"deleteConfirmationDialog = true\">\r\n            {{ $t('artworks.deleteArtwork') }}\r\n          </span>\r\n\r\n          <!-- Delete confirmation -->\r\n          <div v-show=\"deleteConfirmationDialog\">\r\n            <span class=\"mr-2 font-normal\">\r\n              {{ $t('alert.areYouSure') }} <span class=\"italic\">({{ $t('alert.youCannotUndoThisAction') }})</span>\r\n            </span>\r\n\r\n            <span class=\"mr-2 text-red-500 hover:underline\" @click=\"deleteWork(artworkDetail.id)\">\r\n              {{ $t('yes') }}\r\n            </span>\r\n            <span class=\"hover:underline\" @click=\"deleteConfirmationDialog = false\">\r\n              {{ $t('no') }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"deleteSuccess\" class=\"alert-success\">\r\n        {{ $t('artworks.successDelete') }}\r\n      </div>\r\n\r\n      <div v-show=\"showExplicitAlert\" class=\"flex flex-row justify-between p-3 mb-2 text-black align-middle bg-yellow-200 rounded\">\r\n        <span class=\"mr-4\">{{ auth.loggedIn ? $t('explicitContentAlert') : $t('explicitContentAlertForGuest') }}</span>\r\n\r\n        <button class=\"primary-button\" @click.prevent=\"removeFilter()\">\r\n          {{ $t('show') }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Image list -->\r\n      <div class=\"image-list\">\r\n        <viewer \r\n          :options=\"{\r\n            url: 'data-source'\r\n          }\"\r\n          :images=\"images\"\r\n          class=\"overflow-hidden rounded-md\"\r\n        >\r\n          <template \r\n            @click.prevent=\"null\"\r\n            v-for=\"(src, index) in images\"\r\n            :key=\"src.thumbnail\"\r\n          >\r\n            <img \r\n              loading=\"lazy\"\r\n              v-lazy=\"src.thumbnail\"\r\n              :src=\"src.thumbnail\"\r\n              :data-source=\"src.source\"\r\n              :class=\"[\r\n                'overflow-hidden mb-2 rounded cursor-pointer image image-layer unselectable',\r\n                { 'blur-lg unclickable': showExplicitAlert }, \r\n                showExplicitAlert ? 'brightness-50' : 'brightness-100'\r\n              ]\"\r\n              @error=\"imageLoadError\"\r\n            />\r\n          </template>\r\n        </viewer>\r\n      </div>\r\n\r\n      <!-- Intereaction area -->\r\n      <div \r\n        class=\"interactions\"\r\n      >\r\n        <!-- Counter -->\r\n        <div class=\"reaction-counters\">\r\n          <span\r\n            v-if=\"artworkDetail.is_explicit\"\r\n            :class=\"[\r\n              'py-1 px-2 mr-2 font-bold rounded-md text-xxs',\r\n              isModal ? 'theme-color-secondary' : 'bg-tag'\r\n            ]\"\r\n          >E</span>\r\n\r\n          <!-- Total of views -->\r\n          <span\r\n            v-show=\"artworkDetail.views > 0\" \r\n            class=\"counter\"\r\n          >\r\n            <b>{{ shortNumber(artworkDetail.views) }}</b> {{ $t('count.views') }}\r\n          </span>\r\n          \r\n          <!-- Total of likes -->\r\n          <span \r\n            v-if=\"artworkDetail._count\"\r\n            v-show=\"artworkDetail._count.artwork_likes > 0\" \r\n            class=\"counter\"\r\n          >\r\n            <b>{{ thousand(artworkDetail._count.artwork_likes) }}</b> {{ $t('count.likes') }}\r\n          </span>\r\n\r\n          <!-- Total of comments -->\r\n          <span \r\n            v-if=\"artworkDetail._count\"\r\n            v-show=\"artworkDetail._count.artwork_comments > 0\" \r\n            class=\"counter\"\r\n          >\r\n            <b>{{ thousand(artworkDetail._count.artwork_comments) }}</b> {{ $t('count.comments') }}\r\n          </span>\r\n          \r\n          <!-- Total of saves -->\r\n          <span \r\n            v-if=\"artworkDetail._count\"\r\n            v-show=\"artworkDetail._count.artwork_collection_has_works\" \r\n            class=\"counter\"\r\n          >\r\n            <b>{{ thousand(artworkDetail._count.artwork_collection_has_works) }}</b>\r\n          </span>\r\n        </div>\r\n\r\n        <!-- Reactions -->\r\n        <div v-if=\"!previewMode\" class=\"reactions\">\r\n          <!-- Like -->\r\n          <span\r\n            v-if=\"auth.loggedIn\"\r\n            @click=\"liked ? unlike() : like()\"\r\n          >\r\n            <Icon \r\n              v-show=\"liked\"\r\n              id=\"like-button\"\r\n              :name=\"'i-ion-heart'\" \r\n              class=\"text-red-500 hover:text-red-500\"\r\n            />\r\n            <Icon \r\n              v-show=\"!liked\"\r\n              :name=\"'i-ion-heart-outline'\" \r\n              class=\"hover:text-red-500\"\r\n            />\r\n          </span>\r\n\r\n          <!-- Save -->\r\n          <span \r\n            v-if=\"auth.loggedIn\"\r\n            @click=\"showCollectionSelectionModal()\"\r\n          >\r\n            <Icon \r\n              v-show=\"saved\"\r\n              id=\"save-to-collection-button\"\r\n              :name=\"'i-majesticons-bookmark'\" \r\n              class=\"text-blue-500 hover:text-blue-500\"\r\n            />\r\n            <Icon \r\n              v-show=\"!saved\"\r\n              :name=\"'i-majesticons-bookmark-line'\" \r\n              class=\"hover:text-blue-500\"\r\n            />\r\n          </span>\r\n\r\n          <!-- Add to album -->\r\n          <span \r\n            v-if=\"auth.loggedIn && (artworkDetail.users && auth.user.id === artworkDetail.users.id)\"\r\n            @click=\"showAlbumSelectionModal()\"\r\n          >\r\n            <Icon \r\n              v-show=\"inAlbum\"\r\n              id=\"save-to-album-button\"\r\n              :name=\"'i-ion-folder-open'\" \r\n              class=\"text-green-500 hover:text-green-500\"\r\n            />\r\n            <Icon \r\n              v-show=\"!inAlbum\"\r\n              :name=\"'i-bx-photo-album'\" \r\n              class=\"hover:text-blue-500\"\r\n            />\r\n          </span>\r\n\r\n          <!-- share to feed -->\r\n          <span v-if=\"auth.loggedIn\" @click=\"showShareToFeedModal()\">\r\n            <Icon \r\n              :name=\"'i-uil-share'\" \r\n              class=\"hover:text-blue-500\"\r\n            />\r\n          </span>\r\n\r\n          <!-- ellipsis other interaction -->\r\n          <div class=\"inline-block relative z-30 dropdown\">\r\n            <button \r\n              type=\"button\" \r\n              aria-haspopup=\"true\" \r\n              aria-expanded=\"true\" \r\n              aria-controls=\"headlessui-menu-items-feed-more-options\"\r\n            >\r\n              <span>\r\n                <Icon\r\n                  :name=\"'i-ion-ellipsis-vertical-outline'\" \r\n                  class=\"align-middle icon icon-color\"\r\n                />\r\n              </span>\r\n            </button>\r\n            <div class=\"invisible rounded-md opacity-0 transition-all duration-300 transform origin-top-right scale-95 -translate-y-2 dropdown-menu\">\r\n              <div \r\n                id=\"headlessui-menu-items-feed-more-options\"\r\n                class=\"absolute right-0 p-1 mt-2 w-56 rounded-md shadow-lg origin-top-right outline-none theme-color\"\r\n                aria-labelledby=\"headlessui-menu-button-1\" \r\n                role=\"menu\"\r\n              >\r\n                <!-- Open / Open in New Tab (Only show in modal view) -->\r\n                <nuxt-link \r\n                  v-if=\"isModal\" \r\n                  :to=\"'/a/'+artworkDetail.id\" \r\n                  class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                >\r\n                  <Icon :name=\"'i-fluent-arrow-enter-20-filled'\" class=\"mr-2 text-base\" /> {{ $t('open') }}\r\n                </nuxt-link>\r\n                <nuxt-link \r\n                  v-if=\"isModal\" \r\n                  :to=\"'/a/'+artworkDetail.id\" \r\n                  target=\"_blank\" \r\n                  class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                >\r\n                  <Icon :name=\"'i-ci-external-link'\" class=\"mr-2 text-base\" /> {{ $t('openInNewTab') }}\r\n                </nuxt-link>\r\n                \r\n                <div v-if=\"isModal\" class=\"custom-divider\" />\r\n\r\n                <div\r\n                  v-if=\"auth.loggedIn && artworkDetail.users && auth.user.id != artworkDetail.users.id && !auth.user.is_admin && !auth.user.is_moderator\"\r\n                  :to=\"'#'\" \r\n                  class=\"flex py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                  :class=\"{ 'rounded-t-md': !isModal }\"\r\n                  @click=\"showReportModal()\"\r\n                >\r\n                  <Icon :name=\"'i-akar-icons-flag'\" class=\"mr-2 text-base\" /> {{ $t('report') }}\r\n                </div>\r\n\r\n                <div\r\n                  class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 cursor-pointer theme-color hover:button-color parent-icon hover:text-white\"\r\n                  @click=\"copyLink('/a/'+artworkDetail.id)\" \r\n                >\r\n                  <Icon :name=\"'i-icon-park-outline-copy'\" class=\"mr-2 text-base\" /> {{ $t('copySharableLink') }}\r\n                </div>\r\n\r\n                <div v-if=\"auth.loggedIn && artworkDetail.users && auth.user.id === artworkDetail.users.id\" class=\"custom-divider\" />\r\n\r\n                <nuxt-link \r\n                  v-if=\"auth.loggedIn && artworkDetail.users && auth.user.id === artworkDetail.users.id\"\r\n                  :to=\"'/works/update/'+artworkDetail.id\"\r\n                  class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                >\r\n                  <Icon :name=\"'i-ion-settings-outline'\" class=\"mr-2 text-base\" /> {{ $t('update') }}\r\n                </nuxt-link>\r\n                <!-- <div\r\n                  v-if=\"auth.loggedIn && artworkDetail.users && auth.user.id === artworkDetail.users.id\"\r\n                  :to=\"'/works/update/'+artworkDetail.id\"\r\n                  class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 cursor-pointer theme-color hover:button-color parent-icon hover:text-white\"\r\n                  @click=\"unpublish()\"\r\n                >\r\n                  <Icon :name=\"'i-ion-eye-off-outline'\" class=\"mr-2 text-base\" /> {{ $t('unpublish') }}\r\n                </div> -->\r\n                <div \r\n                  v-if=\"auth.loggedIn && artworkDetail.users && auth.user.id === artworkDetail.users.id\" \r\n                  :to=\"'/a/'+artworkDetail.id\" \r\n                  class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 cursor-pointer bg-danger hover:button-color parent-icon hover:text-white\"\r\n                  @click=\"openModal('work-deletion-confirm-modal')\"\r\n                >\r\n                  <Icon :name=\"'i-ion-trash-outline'\" class=\"mr-2 text-base\" /> {{ $t('delete') }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- section info -->\r\n      <ModalViewInfo\r\n        :section=\"section\"\r\n        class=\"flex-md-hidden\"\r\n        :is-modal=\"isModal\"\r\n        :artwork-detail=\"artworkDetail\"\r\n        :preview-mode=\"previewMode\"\r\n        :is-desktop=\"true\"\r\n      />\r\n\r\n      <!-- Other artworks by user that currently viewing (show only on desktop) -->\r\n      <keep-alive>\r\n        <ArtistWorks\r\n          v-if=\"!loading\"\r\n          class=\"mb-6 hidden-md-flex\"\r\n          :artwork-detail=\"artworkDetail\"\r\n          :view=\"view\"\r\n          :is-href=\"!isModal\"\r\n          :keep-artist-page-number=\"true\"\r\n          :pagination-per-page=\"isModal ? 4 : 4\"\r\n        />\r\n      </keep-alive>\r\n    </div>\r\n\r\n    <!-- Right side: artwork information, comment section -->\r\n    <div class=\"right-side\" :class=\"{ 'pr-3 overflow-y-scroll': isModal }\">\r\n      <!-- section info -->\r\n      <ModalViewInfo\r\n        :section=\"section\"\r\n        class=\"hidden-md-flex\"\r\n        :is-modal=\"isModal\"\r\n        :artwork-detail=\"artworkDetail\"\r\n        :preview-mode=\"previewMode\"\r\n        :is-desktop=\"false\"\r\n      />\r\n\r\n      <!-- other artworks by user (only show in smaller or mobile device) -->\r\n      <ArtistWorks \r\n        v-if=\"!loading\"\r\n        class=\"flex-md-hidden\"\r\n        :artwork-detail=\"artworkDetail\"\r\n        :view=\"view\"\r\n        :is-href=\"!isModal\"\r\n        :keep-artist-page-number=\"true\"\r\n        :pagination-per-page=\"isModal ? 4 : 4\"\r\n      />\r\n\r\n      <!-- comment section -->\r\n      <section class=\"comments\">\r\n        <!-- comment text box -->\r\n        <div v-if=\"auth.loggedIn && !previewMode\" class=\"comment-box\">\r\n          <div class=\"flex flex-col\">\r\n            <div class=\"flex relative flex-col\">\r\n              <textarea\r\n                v-model=\"commentInput\"\r\n                class=\"input form-input\"\r\n                :class=\"[{ 'cursor-not-allowed': submitCommentLoading }, { 'theme-color-secondary textarea': isModal }]\"\r\n                :readonly=\"submitCommentLoading\"\r\n                cols=\"30\"\r\n                :rows=\"commentInput != null && commentInput != '' ? '8' : '0'\"\r\n                :placeholder=\"$t('comments.inputPlaceholder')\"\r\n                :maxlength=\"commentMaxChar\"\r\n                data-gramm=\"false\"\r\n              />\r\n              <span \r\n                v-show=\"commentInput != null && commentInput != ''\" \r\n                class=\"absolute left-4 bottom-6 py-1 px-2 text-white rounded-md button-color\"\r\n              >\r\n                {{ commentCharLeft }}\r\n              </span>\r\n              <span class=\"absolute right-2 bottom-5 py-1 px-2\" @click.prevent=\"submitComment()\">\r\n                <Icon \r\n                  v-show=\"commentInput != null && commentInput != '' && !submitCommentLoading\"\r\n                  :name=\"'i-ion-prism'\" \r\n                  class=\"text-xl transition-all duration-100 rotate-90 cursor-pointer text-colored\"\r\n                />\r\n                <Spinner v-show=\"submitCommentLoading\" />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"!auth.loggedIn\" class=\"p-4 mb-4 text-center rounded-md theme-color-secondary\">\r\n          {{ $t('comments.loginOrRegisterToLeaveComment') }}\r\n        </div>\r\n\r\n        <!-- comment list -->\r\n        <div class=\"comment-content\">\r\n          <div \r\n            v-auto-animate\r\n            v-for=\"comment in comments\" \r\n            :key=\"comment.id\" \r\n            class=\"flex flex-row w-full comment-item\"\r\n          >\r\n            <nuxt-link class=\"mr-2\" :to=\"'/profile/'+comment.users.username\">\r\n              <img\r\n                class=\"w-10 h-10 avatar\"\r\n                :src=\"avatarCoverUrl(comment.users.avatar_bucket, comment.users.avatar_filename)\"\r\n                @error=\"imageLoadError\"\r\n              >\r\n            </nuxt-link>\r\n            <div class=\"w-full\">\r\n              <div \r\n                class=\"p-3 w-full rounded-md\"\r\n                :class=\"!isModal ? 'theme-color' : 'theme-color-secondary'\"\r\n              >\r\n                <!-- profile info -->\r\n                <div class=\"flex justify-between\">\r\n                  <nuxt-link :to=\"'/profile/'+comment.users.username\" class=\"mb-2 text-xs font-semibold transition-all duration-150 cursor-pointer\">\r\n                    {{ comment.users.name }}\r\n                  </nuxt-link>\r\n                  <div class=\"comment-time\">\r\n                    {{ formatDate(comment.created_at, true) }}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div>\r\n                  {{ comment.comment }}\r\n                </div>\r\n\r\n                <!-- comment reactions -->\r\n                <div class=\"mt-4 reactions\">\r\n                  <!-- left side: X replies -->\r\n                  <div \r\n                    class=\"cursor-pointer hover:underline\"\r\n                    @click=\"activeReplyTray == comment.id ? hideReplies(comment.id) : showReplies(comment.id)\"\r\n                  >\r\n                    <span v-if=\"comment._count.artwork_comment_has_replies > 0\">\r\n                      <b>{{ shortNumber(comment._count.artwork_comment_has_replies) }}</b> \r\n                      {{ comment._count.artwork_comment_has_replies > 1 ? $t('comments.replies.replies').toLowerCase() : $t('comments.replies.reply').toLowerCase() }} \r\n                    </span>\r\n                  </div>\r\n\r\n                  <!-- right side: interaction buttons -->\r\n                  <div v-if=\"auth.loggedIn\" class=\"flex flex-row\">\r\n                    <!-- like a comment button -->\r\n                    <span class=\"reaction\" @click=\"likedComments.includes(comment.id) ? unlikeComment(comment.id) : likeComment(comment.id)\">\r\n                      <Icon v-show=\"!likedComments.includes(comment.id)\" :name=\"'i-ion-heart-outline'\" class=\"text-gray-500 hover:text-red-500\" />\r\n                      <Icon v-show=\"likedComments.includes(comment.id)\" :id=\"'comment-like-button-'+comment.id\" :name=\"'i-ion-heart'\" class=\"text-red-500 hover:text-red-500\" />\r\n                      {{ shortNumber(comment._count.artwork_comment_has_likes) }}\r\n                    </span>\r\n\r\n                    <!-- reply a comment button -->\r\n                    <span class=\"reaction\" @click=\"showReplyInput(comment.id)\">\r\n                      <Icon :name=\"'i-quill-reply'\" class=\"text-gray-500 hover:text-blue-500\" />\r\n                    </span>\r\n\r\n                    <!-- Other comment interaction buttons -->\r\n                    <div class=\"inline-block relative ml-2 dropdown\">\r\n                      <button \r\n                        type=\"button\" \r\n                        aria-haspopup=\"true\" \r\n                        aria-expanded=\"true\" \r\n                        aria-controls=\"headlessui-menu-items-feed-more-options\"\r\n                        @click=\"showReplyInputId = 0\"\r\n                      >\r\n                        <span>\r\n                          <Icon\r\n                            :name=\"'i-ion-ellipsis-vertical-outline'\" \r\n                            class=\"align-middle icon icon-color\"\r\n                          />\r\n                        </span>\r\n                      </button>\r\n\r\n                      <!-- ellipsis element -->\r\n                      <div class=\"invisible z-50 rounded-md opacity-0 transition-all duration-300 transform origin-top-right scale-95 -translate-y-2 cursor-pointer dropdown-menu\">\r\n                        <div \r\n                          id=\"headlessui-menu-items-feed-more-options\"\r\n                          class=\"absolute right-0 p-1 mt-2 w-56 rounded-md border shadow-lg origin-top-right outline-none border-color theme-color\"\r\n                          aria-labelledby=\"headlessui-menu-button-1\"\r\n                          role=\"menu\"\r\n                        >\r\n                          <!-- view profile -->\r\n                          <nuxt-link \r\n                            :to=\"'/profile/'+comment.users.username\" \r\n                            class=\"flex py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                            @click.prevent \r\n                          >\r\n                            <Icon :name=\"'i-fluent-person-32-regular'\" class=\"mr-2 text-base\" /> {{ $t('viewProfile') }}\r\n                          </nuxt-link>\r\n\r\n                          <!-- delete comment -->\r\n                          <div\r\n                            v-if=\"auth.loggedIn && auth.user.id === comment.users.id\"\r\n                            class=\"flex py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                            @click=\"deleteComment(comment.id)\"\r\n                          >\r\n                            <Icon :name=\"'i-ion-trash-outline'\" class=\"mr-2 text-base\" /> {{ $t('delete') }}\r\n                          </div>\r\n\r\n                          <!-- report -->\r\n                          <!-- <nuxt-link \r\n                            v-if=\"auth.loggedIn && auth.user.id !== comment.users.id\"\r\n                            :to=\"'#'\" \r\n                            class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                            @click.prevent \r\n                          >\r\n                            <Icon :name=\"'i-akar-icons-flag'\" class=\"mr-2 text-base\" /> {{ $t('report') }}\r\n                          </nuxt-link> -->\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Reply input -->\r\n              <div \r\n                v-if=\"auth.loggedIn\" \r\n                v-show=\"showReplyInputId === comment.id\"\r\n                class=\"-mb-4 comment-box\"\r\n              >\r\n                <div class=\"flex flex-col\">\r\n                  <div class=\"flex relative flex-col\">\r\n                    <textarea\r\n                      :id=\"'reply-'+comment.id\"\r\n                      v-model=\"replyInput\"\r\n                      class=\"mt-2 w-full input form-input\"\r\n                      :class=\"[{ 'cursor-not-allowed': submitReplyLoading }, { 'theme-color-secondary textarea': isModal }]\"\r\n                      :readonly=\"submitReplyLoading\"\r\n                      cols=\"30\"\r\n                      :rows=\"replyInput != null && replyInput != '' ? '5' : '0'\"\r\n                      :placeholder=\"$t('comments.replies.write')\"\r\n                      :maxlength=\"replyMaxChar\"\r\n                      data-gramm=\"false\"\r\n                    />\r\n                    <span \r\n                      v-show=\"replyInput != null && replyInput != ''\" \r\n                      class=\"absolute left-4 bottom-6 py-1 px-2 text-white rounded-md button-color\"\r\n                    >\r\n                      {{ replyCharLeft }}\r\n                    </span>\r\n                    <span class=\"absolute right-2 bottom-5 py-1 px-2\" @click.prevent=\"submitReply(comment.id)\">\r\n                      <Icon \r\n                        v-show=\"replyInput != null && replyInput != '' && !submitReplyLoading\"\r\n                        :name=\"'i-ion-prism'\" \r\n                        class=\"text-xl transition-all duration-100 rotate-90 cursor-pointer text-colored\"\r\n                      />\r\n                      <Spinner v-show=\"submitReplyLoading\" />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <!-- Comment replies -->\r\n              <div \r\n                :id=\"'comment-replies-'+comment.id\"\r\n                class=\"hidden flex-col mt-2\"\r\n              > \r\n                <div \r\n                  v-if=\"commentReplies[comment.id] && commentReplies[comment.id].length\"\r\n                  class=\"w-full\"\r\n                >\r\n                  <span class=\"float-left mb-2 text-xs italic text-color-secondary\">{{ $t('comments.replies.replies') }}</span>\r\n                  <span \r\n                    class=\"float-right text-xs cursor-pointer hover:font-semibold\"\r\n                    @click=\"hideReplies(comment.id)\" \r\n                  >\r\n                    {{ $t('hide') }}\r\n                  </span>\r\n                </div>\r\n                <div \r\n                  v-for=\"reply in commentReplies[comment.id]\"\r\n                  :key=\"reply.id\"\r\n                  class=\"p-3 mb-2 w-full rounded-md border-l-4\"\r\n                  :class=\"!isModal ? 'theme-color' : 'theme-color-secondary'\"\r\n                >\r\n                  <div \r\n                    class=\"flex flex-row justify-between\"\r\n                  >\r\n                    <nuxt-link :to=\"'/profile/'+reply.users.username\" class=\"flex flex-row leading-6\">\r\n                      <img class=\"mr-2 w-6 h-6 rounded-full\" :src=\"avatarCoverUrl(reply.users.avatar_bucket, reply.users.avatar_filename)\" @error=\"imageLoadError\">\r\n                      <span class=\"transition-all duration-150 cursor-pointer hover:font-bold\">{{ reply.users.name }}</span>\r\n                    </nuxt-link>\r\n                    <span class=\"leading-6 comment-time\">\r\n                      {{ formatDate(reply.created_at, true) }}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <!-- The reply -->\r\n                  <div class=\"mt-2\">\r\n                    {{ reply.content }}\r\n                  </div>\r\n\r\n                  <!-- Reactions -->\r\n                  <div v-if=\"auth.loggedIn\" class=\"mt-2 reactions\">\r\n                    <span />\r\n                    <div class=\"flex flex-row\">\r\n                      <span class=\"reaction\" @click=\"likedReplies.includes(reply.id) ? unlikeReply(reply.id) : likeReply(reply.id)\">\r\n                        <Icon v-show=\"likedReplies.includes(reply.id)\" :id=\"'reply-like-button-'+reply.id\" :name=\"'i-ion-heart'\" class=\"text-red-500 hover:text-red-500\" />\r\n                        <Icon v-show=\"!likedReplies.includes(reply.id)\" :name=\"'i-ion-heart-outline'\" class=\"text-gray-500 hover:text-red-500\" />\r\n                        {{ shortNumber(reply._count.artwork_comment_reply_has_likes) }}\r\n                      </span>\r\n                      \r\n                      <!-- Other reply interaction buttons -->\r\n                      <div class=\"inline-block relative ml-2 dropdown\">\r\n                        <button \r\n                          type=\"button\" \r\n                          aria-haspopup=\"true\" \r\n                          aria-expanded=\"true\" \r\n                          aria-controls=\"headlessui-menu-items-feed-more-options\"\r\n                        >\r\n                          <span>\r\n                            <Icon\r\n                              :name=\"'i-ion-ellipsis-vertical-outline'\" \r\n                              class=\"align-middle icon icon-color\"\r\n                            />\r\n                          </span>\r\n                        </button>\r\n                        <div class=\"invisible z-50 rounded-md opacity-0 transition-all duration-300 transform origin-top-right scale-95 -translate-y-2 cursor-pointer dropdown-menu\">\r\n                          <div \r\n                            id=\"headlessui-menu-items-feed-more-options\" \r\n                            class=\"absolute right-0 z-50 p-1 mt-2 w-56 rounded-md border shadow-lg origin-top-right outline-none border-color theme-color\"\r\n                            aria-labelledby=\"headlessui-menu-button-1\" \r\n                            role=\"menu\"\r\n                          >\r\n                            <!-- view profile -->\r\n                            <nuxt-link \r\n                              :to=\"'/profile/'+reply.users.id\" \r\n                              class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                              @click.prevent \r\n                            >\r\n                              <Icon :name=\"'i-fluent-person-32-regular'\" class=\"mr-2 text-base\" /> {{ $t('viewProfile') }}\r\n                            </nuxt-link>\r\n\r\n                            <!-- delete reply -->\r\n                            <div\r\n                              v-if=\"auth.loggedIn && auth.user.id === reply.users.id\"\r\n                              class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                              @click=\"deleteReply(comment.id, reply.id)\"\r\n                            >\r\n                              <Icon :name=\"'i-ion-trash-outline'\" class=\"mr-2 text-base\" /> {{ $t('delete') }}\r\n                            </div>\r\n\r\n                            <!-- report -->\r\n                            <!-- <nuxt-link \r\n                              v-if=\"auth.loggedIn && auth.user.id !== reply.users.id\"\r\n                              :to=\"'#'\" \r\n                              class=\"flex z-50 py-2 px-3 w-full rounded-md transition-all duration-150 theme-color hover:button-color parent-icon hover:text-white\"\r\n                              @click.prevent \r\n                            >\r\n                              <Icon :name=\"'i-akar-icons-flag'\" class=\"mr-2 text-base\" /> {{ $t('report') }}\r\n                            </nuxt-link> -->\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div \r\n                  v-if=\"commentReplies[comment.id] && showLoadMoreReplies\" \r\n                  class=\"mb-1 text-center transition ease-in-out delay-75 cursor-pointer hover:font-semibold hover:underline text-color-secondary href\"\r\n                  @click=\"loadMoreReplies(comment.id)\"\r\n                >\r\n                  {{ $t('comments.replies.loadMore') }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          v-if=\"artworkDetail._count\"\r\n          v-show=\"artworkDetail._count.artwork_comments > 3 && showLoadOlderComments\"\r\n          class=\"text-center capitalize href\"\r\n          @click.prevent=\"loadMoreComments(artworkDetail.id)\"\r\n        >\r\n          {{ $t('comments.loadOlder') }}\r\n        </div>\r\n\r\n        <div v-show=\"comments.length && !showLoadOlderComments\" class=\"w-full text-xs italic text-center\">\r\n          {{ $t('comments.reachedTheEnd') }}\r\n        </div>\r\n\r\n        <div v-if=\"auth.loggedIn && !comments.length && !previewMode\" class=\"mt-4 w-full text-xs italic text-center\">\r\n          {{ $t('comments.noCommentYet') }}\r\n        </div>\r\n      </section>\r\n      <!-- end of comment section -->\r\n    </div>\r\n\r\n    <!-- add or remove from selected collection(s) -->\r\n    <ManageSave \r\n      v-if=\"!loading\"\r\n      id=\"collection-selection-modal\"\r\n      :modal-id=\"'collection-selection-modal'\"\r\n      ref=\"collectionSelectionModalRef\"\r\n      :work-id=\"artworkDetail.id\"\r\n      class=\"modal\"\r\n      @save=\"save\"\r\n    />\r\n\r\n    <!-- add or remove from selected album(s) -->\r\n    <ManageAlbum\r\n      v-if=\"!loading && (auth.loggedIn && artworkDetail.users && auth.user.id == artworkDetail.users.id)\"\r\n      id=\"album-selection-modal\"\r\n      ref=\"albumSelectionModalRef\"\r\n      :modal-id=\"'album-selection-modal'\"\r\n      :work-id=\"artworkDetail.id\"\r\n      class=\"modal\"\r\n      @addedToAlbum=\"addedToAlbum\"\r\n    />\r\n\r\n    <!-- Work deletion confirmation dialog -->\r\n    <ConfirmationDialog\r\n      id=\"work-deletion-confirm-modal\"\r\n      :modal-id=\"'work-deletion-confirm-modal'\"\r\n      :message=\"`${$t('alert.areYouSure')} ${$t('alert.youCannotUndoThisAction')}`\"\r\n      class=\"modal\"\r\n      @onAccept=\"deleteWork(artworkDetail.id)\"\r\n    />\r\n\r\n    <!-- Report modal -->\r\n    <ReportModal \r\n      id=\"report-modal\"\r\n      ref=\"reportModalRef\"\r\n      class=\"modal\"\r\n      :type=\"'artwork'\"\r\n      :post-id=\"artworkDetail.id\"\r\n      :report-status=\"reportStatus\"\r\n    />\r\n\r\n    <!-- Share to Feed -->\r\n    <ShareArtworkToFeedModal\r\n      id=\"share-to-feed-modal\"\r\n      ref=\"shareToFeedModalRef\"\r\n      class=\"modal\"\r\n      :post-id=\"artworkDetail.id\"\r\n    />\r\n    \r\n    <!-- Link copied notification -->\r\n    <SplashAlert \r\n      v-show=\"copied\"\r\n      id=\"copy-alert\"\r\n      :text=\"$t('linkCopied')\"\r\n      :icon=\"'i-bi-check-all'\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport 'viewerjs/dist/viewer.css'\r\n\r\nimport { useClipboard } from '@vueuse/core'\r\n\r\n// stores\r\nimport useAuthStore from '@/stores/auth.store'\r\n\r\n// composables\r\nimport useImage from '~/composables/useImage'\r\n\r\n// components\r\nimport ModalViewInfo from './ModalViewInfo.vue'\r\nimport ArtistWorks from '~/components/artworks/views/ArtistWorks.vue'\r\nimport Icon from '~/components/globals/Icon.vue'\r\nimport Spinner from '~/components/globals/Spinner.vue'\r\nimport ManageSave from '~/components/artworks/ManageSave.vue'\r\nimport ManageAlbum from '~/components/albums/ManageAlbum'\r\nimport ConfirmationDialog from '~/components/globals/ConfirmationDialog.vue'\r\nimport SplashAlert from '~/components/globals/SplashAlert.vue'\r\nimport ReportModal from '~/components/reports/ReportModal.vue'\r\nimport ShareArtworkToFeedModal from '~~/components/feeds/ShareArtworkToFeedModal.vue'\r\nimport LoadingEmptyErrorMessage from '~/components/globals/LoadingEmptyErrorMessage.vue'\r\n\r\n// stores\r\nconst auth = useAuthStore()\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst { applyExplicitFilter, removeExplicitFilter, generateSemiCompressedArtworkUrl } = useImage()\r\nconst artworkApi = useArtwork(oApiConfiguration, fetchOptions())\r\nconst reportApi = useReport(oApiConfiguration, fetchOptions())\r\n\r\n/**\r\n * @meta\r\n */\r\ndefinePageMeta ({\r\n  // keepalive: true\r\n})\r\n\r\n/**\r\n * @emits\r\n */\r\nconst emits = defineEmits([\r\n  'stopLoading',\r\n  'showEmpty',\r\n'showError'\r\n])\r\n\r\n/**\r\n * @props\r\n */\r\nconst props = defineProps ({\r\n  id: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  section: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\nconst runtimeConfig = useRuntimeConfig()\r\nconst { $router } = useNuxtApp()\r\nconst route = useRoute()\r\n\r\n/**\r\n * @watchers\r\n */\r\nwatch (() => route.query, () => {\r\n  // close modal on changing route or going back to previous page\r\n  closeArtworkModals()\r\n\r\n  // close collection selection modal\r\n  useModal().closeModal('collection-selection-modal')\r\n\r\n  // close album selection modal\r\n  useModal().closeModal('album-selection-modal')\r\n\r\n  // close report modal\r\n  useModal().closeModal('report-modal')\r\n})\r\n\r\nonMounted (() => {\r\n  if (props.id !== '') {\r\n    view(props.id)\r\n  }\r\n\r\n  window.addEventListener('keydown', (e) => {\r\n    const collectionSelectorModalEl = document.getElementById('collection-selection-modal')\r\n    const albumSelectorModalEl = document.getElementById('album-selection-modal')\r\n    const reportModalEl = document.getElementById('report-modal')\r\n    const viewerModalEl = document.querySelectorAll('.viewer-in')\r\n\r\n    if (e.key === 'Escape' \r\n        && (!collectionSelectorModalEl || collectionSelectorModalEl.style.display != 'flex')\r\n        && (!albumSelectorModalEl || albumSelectorModalEl.style.display != 'flex')\r\n        && (!reportModalEl || reportModalEl.style.display != 'flex')\r\n        && !viewerModalEl.length\r\n    ) {\r\n      closeArtworkModals()\r\n    }\r\n  })\r\n})\r\n\r\nconst closeArtworkModals = () => {\r\n  useModal().closeModal(`${props.section}-modal`)\r\n}\r\n\r\nconst showExplicitAlert = ref(false)\r\nconst removeFilter = () => {\r\n  showExplicitAlert.value = false\r\n  removeExplicitFilter()\r\n}\r\n\r\nconst isModal = props.id === ''\r\n\r\n/** Increase view count */\r\nconst increaseView = async (workId) => {\r\n  await artworkApi.incraseViewCount(workId)\r\n}\r\n\r\n/** Open the modal view function */\r\nconst previewMode = ref(false)\r\n\r\nconst loading = ref(true)\r\n\r\nconst artworkDetail = ref({})\r\nconst liked = ref(false)\r\nconst saved = ref(false)\r\nconst inAlbum = ref(false)\r\n\r\nconst images = ref([])\r\nconst vViewerOptions = {\r\n  url: 'data-src'\r\n}\r\n\r\nconst view = async (selectedWorkId) => {\r\n  commentInput.value = ''\r\n  comments.value = []\r\n  commentReplies.value = []\r\n  \r\n  loading.value = true\r\n\r\n  // fetch artwork detail\r\n  const [data, error] = await artworkApi.getWorkById(selectedWorkId)\r\n\r\n  if (error) {\r\n    if (error == 'Work not found') {\r\n      emits('showEmpty')\r\n    } else {\r\n      emits('showError')\r\n    }\r\n  } else {\r\n    artworkDetail.value = data\r\n\r\n    images.value = []\r\n    data.artwork_assets.forEach((asset) => {                                                    \r\n      images.value.push({\r\n        thumbnail: generateSemiCompressedArtworkUrl(asset.bucket, asset.filename, true),\r\n        source: generateSemiCompressedArtworkUrl(asset.bucket, asset.filename, false)\r\n      })\r\n    })\r\n    \r\n    if ((!auth.loggedIn && data.is_explicit) || (data.is_explicit && !auth.user.user_settings.show_explicit)) {\r\n      showExplicitAlert.value = true\r\n      applyExplicitFilter()\r\n    } else {\r\n      showExplicitAlert.value = false\r\n    }\r\n\r\n    liked.value = data.liked\r\n    saved.value = data.saved\r\n    inAlbum.value = data.in_album\r\n\r\n    // get publish status, if it's not published yet, redirect non-authorized user to homepage, otherwise show the artwork\r\n    const isPublished = useDate().formatApiToWeb(data.scheduled_post) < useDate().currentUtcTime()\r\n    if (!isPublished) {\r\n      if (auth.user.id !== data.users.id) {\r\n        $router.push('/')\r\n      } else {\r\n        previewMode.value = true\r\n      }\r\n    } else {\r\n      // fetch comments\r\n      await getComments(selectedWorkId)\r\n\r\n      // Get report status if user is logged in, if user alreadey reported the post, then prevent user to re-report it\r\n      if (auth.loggedIn) {\r\n        await getReportStatus(selectedWorkId)\r\n      }\r\n\r\n      // increase view count\r\n      if (!auth.loggedIn || auth.user.id !== data.users.id) {\r\n        await increaseView(selectedWorkId)\r\n      }\r\n    }\r\n  }\r\n\r\n  loading.value = false\r\n  emits('stopLoading')\r\n}\r\n\r\nconst reportStatus = ref({})\r\nconst getReportStatus = async (workId) => {\r\n  const [report, error] = await reportApi.getReportStatus({\r\n    type: 'artwork',\r\n    postId: workId\r\n  })\r\n\r\n  if (error) {\r\n    // todo: handle error\r\n  } else if (report.length) {\r\n    reportStatus.value = report[0]\r\n  } else {\r\n    reportStatus.value = {}\r\n  }\r\n}\r\n\r\n/** Likes */\r\nconst like = async () => {\r\n  const [success, error] = await artworkApi.like({\r\n    workId: artworkDetail.value.id\r\n  })\r\n  \r\n  if (success) {\r\n    liked.value = true\r\n\r\n    // animate\r\n    const artworkLikeButtonEl = document.getElementById('like-button')\r\n    artworkLikeButtonEl.classList.add('animate-bounce')\r\n    setInterval(() => {\r\n      artworkLikeButtonEl.classList.remove('animate-bounce')\r\n    }, 2500)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\nconst unlike = async () => {\r\n  const [success, error] = await artworkApi.unlike({\r\n    workId: artworkDetail.value.id\r\n  })\r\n  \r\n  if (success) {\r\n    liked.value = false\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\n/** Comments */\r\n// comments\r\nconst comments = ref([])\r\nconst commentPagination = reactive({\r\n  perPage: 3,\r\n  page: 0\r\n})\r\nconst commentIndexes = ref([])\r\n\r\nconst fetchComments = async (workId) => {\r\n  const [data, error] = await artworkApi.getComments({\r\n    workId,\r\n    pagination: {\r\n      page: commentPagination.page,\r\n      perPage: commentPagination.perPage\r\n    }\r\n  })\r\n\r\n  if (data) {\r\n    if (data.pagination.current_page === data.pagination.first_last.last_page) {\r\n      showLoadOlderComments.value = false\r\n    } else {\r\n      showLoadOlderComments.value = true\r\n    }\r\n\r\n    // collect liked artwork by current user logon\r\n    data.comments.forEach((comment) => {\r\n      if (comment.liked) {\r\n        likedComments.value.push(comment.id)\r\n      }\r\n\r\n      // push comment id to comment indexes, used to remove the comment from comments ref when deleting a comment\r\n      commentIndexes.value.push(comment.id)\r\n    })\r\n\r\n    return data.comments\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\n/** Get first few comments */\r\nconst getComments = async (workId) => {\r\n  try {\r\n    const firstFewComments = await fetchComments(workId)\r\n\r\n    firstFewComments.forEach(comment => comments.value.push(comment))\r\n  } catch (error) {\r\n    // \r\n  } \r\n}\r\n\r\n/** Load more comments (comment pagination) */\r\nconst showLoadOlderComments = ref(false)\r\nconst loadMoreComments = async (workId) => {\r\n  try {\r\n    commentPagination.page += 1\r\n    const moreComments = await fetchComments(workId)\r\n\r\n    moreComments.forEach(comment => comments.value.push(comment))\r\n  } catch (error) {\r\n    // \r\n  }\r\n}\r\n\r\nconst commentInput = ref()\r\nconst commentMaxChar = 200\r\nconst commentCharLeft = computed(() => (commentInput.value != null && commentInput.value !== '') ? commentMaxChar - commentInput.value.length : commentMaxChar)\r\n\r\n/** Submit a comment */\r\nconst submitCommentLoading = ref(false)\r\nconst submitComment = async () => {\r\n  submitCommentLoading.value = true\r\n\r\n  try {\r\n    const [success, data, error] = await artworkApi.addComment({\r\n      workId: artworkDetail.value.id,\r\n      comment: commentInput.value\r\n    })\r\n\r\n    if (success) {\r\n      commentInput.value = ''\r\n      comments.value.splice(0, 0, data)\r\n      comments.value.join()\r\n\r\n      // push comment id to comment indexes\r\n      commentIndexes.value.splice(0, 0, data.id)\r\n      commentIndexes.value.join()\r\n    } else {\r\n      // todo: handle error\r\n    }\r\n  } catch (error) {\r\n    // \r\n  }\r\n\r\n  submitCommentLoading.value = false\r\n}\r\n\r\nconst deleteComment = async (commentId) => {\r\n  const [success, error] = await artworkApi.deleteComment({\r\n    commentId\r\n  })\r\n\r\n  // remove deleted comment from `comments` ref\r\n  if (success) {\r\n    const indexOfIdToRemove = commentIndexes.value.indexOf(commentId)\r\n    comments.value.splice(indexOfIdToRemove, 1)\r\n\r\n    commentIndexes.value.splice(indexOfIdToRemove, 1)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\nconst likedComments = ref([])\r\nconst likeComment = async (commentId) => {\r\n  const [success, error] = await artworkApi.likeComment({\r\n    commentId\r\n  })\r\n  \r\n  if (success) {\r\n    likedComments.value.push(commentId)\r\n\r\n    // animate\r\n    const commentLikeButtonEl = document.getElementById(`comment-like-button-${commentId}`)\r\n    commentLikeButtonEl.classList.add('animate-bounce')\r\n    setInterval(() => {\r\n      commentLikeButtonEl.classList.remove('animate-bounce')\r\n    }, 2500)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\nconst unlikeComment = async (commentId) => {\r\n  const [success, error] = await artworkApi.unlikeComment({\r\n    commentId\r\n  })\r\n\r\n  if (success) {\r\n    const indexOfIdToRemove = likedComments.value.indexOf(commentId)\r\n    likedComments.value.splice(indexOfIdToRemove, 1)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\n/** Replies */\r\nconst commentReplyPagination = reactive({\r\n  perPage: 2,\r\n  page: 0\r\n})\r\nconst commentReplies = ref([])\r\nconst commentReplyIndexes = ref([])\r\nconst showLoadMoreReplies = ref(true)\r\n\r\nconst fetchReplies = async (commentId) => {\r\n  const [replies, pagination, error] = await artworkApi.getCommentReplies({\r\n    commentId,\r\n    pagination: {\r\n      page: commentReplyPagination.page,\r\n      perPage: commentReplyPagination.perPage\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    // todo: handle error\r\n  } else {\r\n    if (pagination.current_page === pagination.first_last.last_page) {\r\n      showLoadMoreReplies.value = false\r\n    }\r\n\r\n    // push reply id to reply indexes, used for delete reply function\r\n    replies.map(reply => commentReplyIndexes.value.push(reply.id))\r\n\r\n    return replies\r\n  }\r\n}\r\n\r\nconst activeReplyTray = ref(0)\r\nconst showReplies = async (commentId) => {\r\n  showLoadMoreReplies.value = true\r\n  commentReplyIndexes.value = []\r\n\r\n  try {\r\n    const data = await fetchReplies(commentId)\r\n    commentReplies.value = {\r\n      [commentId]: data\r\n    }\r\n\r\n    // collect liked replies\r\n    data.forEach((reply) => {\r\n      if (reply.liked) {\r\n        likedReplies.value.push(reply.id)\r\n      }\r\n    })\r\n\r\n    if (activeReplyTray.value) {\r\n      hideReplies(activeReplyTray.value)\r\n    }\r\n\r\n    const commentReplyEl = document.getElementById(`comment-replies-${commentId}`)\r\n    commentReplyEl.classList.add('flex')\r\n    commentReplyEl.classList.remove('hidden')\r\n\r\n    activeReplyTray.value = commentId\r\n  } catch (error) {\r\n    // \r\n  }\r\n}\r\n\r\nconst hideReplies = (commentId) => {\r\n  const commentReplyEl = document.getElementById(`comment-replies-${commentId}`)\r\n  commentReplyEl.classList.remove('flex')\r\n  commentReplyEl.classList.add('hidden')\r\n\r\n  activeReplyTray.value = 0\r\n}\r\n\r\nconst loadMoreReplies = async (commentId) => {\r\n  commentReplyPagination.page += 1\r\n  try {\r\n    const data = await fetchReplies(commentId)\r\n    data.forEach((reply) => {\r\n      commentReplies.value[commentId].push(reply)\r\n    })\r\n  } catch (error) {\r\n    // \r\n  }\r\n}\r\n\r\nconst showReplyInputId = ref(0)\r\nconst showReplyInput = async (commentId) => {\r\n  await showReplies(commentId)\r\n  showReplyInputId.value = commentId\r\n}\r\n\r\nconst replyInput = ref()\r\nconst replyMaxChar = 200\r\nconst replyCharLeft = computed(() => (replyInput.value != null && replyInput.value !== '') ? replyMaxChar - replyInput.value.length : replyMaxChar)\r\n\r\n/** Submit reply */\r\nconst submitReplyLoading = ref(false)\r\nconst submitReply = async (commentId) => {\r\n  submitReplyLoading.value = true\r\n\r\n  try {\r\n    const [success, data, error] = await artworkApi.addReply({\r\n      commentId,\r\n      reply: replyInput.value\r\n    })\r\n\r\n    if (success) {\r\n      // expand replies div\r\n      showReplies(commentId)\r\n      \r\n      replyInput.value = ''\r\n      commentReplies.value[commentId].splice(0, 0, data)\r\n      commentReplies.value[commentId].join()\r\n\r\n      showReplyInputId.value = 0\r\n\r\n      // push reply id to reply indexes\r\n      commentReplyIndexes.value.splice(0, 0, data.id)\r\n      commentReplyIndexes.value.join()\r\n    } else {\r\n      // todo: handle error\r\n    }\r\n  } catch (error) {\r\n    // \r\n  }\r\n\r\n  submitReplyLoading.value = false\r\n}\r\n\r\nconst deleteReply = async (commentId, replyId) => {\r\n  const [success, error] = await artworkApi.deleteReply({\r\n    replyId\r\n  })\r\n\r\n  if (success) {\r\n    const indexOfIdToRemove = commentReplyIndexes.value.indexOf(replyId)\r\n    commentReplies.value[commentId].splice(indexOfIdToRemove, 1)\r\n\r\n    commentReplyIndexes.value.splice(indexOfIdToRemove, 1)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\nconst likedReplies = ref([])\r\nconst likeReply = async (replyId) => {\r\n  const [success, error] = await artworkApi.likeReply({\r\n    replyId\r\n  })\r\n\r\n  if (success) {\r\n    likedReplies.value.push(replyId)\r\n    \r\n    // animate\r\n    const replyCommentLikeButtonEl = document.getElementById(`reply-like-button-${replyId}`)\r\n    replyCommentLikeButtonEl.classList.add('animate-bounce')\r\n    setInterval(() => {\r\n      replyCommentLikeButtonEl.classList.remove('animate-bounce')\r\n    }, 2500)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\nconst unlikeReply = async (replyId) => {\r\n  const [success, error] = await artworkApi.unlikeReply({\r\n    replyId\r\n  })\r\n  \r\n  if (success) {\r\n    const indexOfIdToRemove = likedReplies.value.indexOf(replyId)\r\n    likedReplies.value.splice(indexOfIdToRemove, 1)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\n/** Cancel publish or delete work */\r\nconst deleteConfirmationDialog = ref(false)\r\nconst deleteSuccess = ref(false)\r\nconst deleteWork = async (workId) => {\r\n  const [success, error] = await artworkApi.deleteWork({\r\n    workId: [workId]\r\n  })\r\n\r\n  if (success) {\r\n    deleteSuccess.value = true\r\n\r\n    setTimeout(() => {\r\n      $router.push('/')\r\n    }, 1500)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\n/** \r\n * ====================================================================================================================\r\n * COLLECTIONS\r\n * ====================================================================================================================\r\n*/\r\n/**\r\n * Show collection selection modal\r\n * When triggering this action it will automatically fetch where the item were saved, and\r\n * automatically select the selected collections.\r\n */\r\nconst collectionSelectionModalRef = ref(null)\r\nconst showCollectionSelectionModal = () => {\r\n  useModal().openModal('collection-selection-modal')\r\n\r\n  collectionSelectionModalRef.value.fetchCollection()\r\n  collectionSelectionModalRef.value.fetchCurrentSaved()\r\n}\r\n\r\n/**\r\n * This method will be triggered via event handling called `@save` on component `ManageSave` \r\n * once the user selects a collection and clicks the save button, and it will automatically close \r\n * the modal and update the collection selection.\r\n */\r\nconst save = (unsaved) => {\r\n  if (unsaved) {\r\n    saved.value = false\r\n  } else {\r\n    saved.value = true\r\n  }\r\n\r\n  // animate\r\n  useBounceAnimation().animate('save-to-collection-button')\r\n}\r\n\r\n/** \r\n * ====================================================================================================================\r\n * ALBUMS\r\n * ====================================================================================================================\r\n*/\r\n\r\n/**\r\n * Show album selection modal\r\n * When triggering this action it will automatically fetch where the item were saved and \r\n * automatically select the selected albums.\r\n */\r\nconst albumSelectionModalRef = ref(null)\r\nconst showAlbumSelectionModal = () => {\r\n  useModal().openModal('album-selection-modal')\r\n  albumSelectionModalRef.value.fetchCurrentSaved()\r\n}\r\n\r\n/**\r\n * This method will be triggered via event handling called `@addedToAlbum` on component `ManageAlbum` \r\n * once the user selects an album and clicks the save button, and it will automatically close \r\n * the modal and update the album selection.\r\n */\r\nconst addedToAlbum = (unsaved) => {\r\n  if (unsaved) {\r\n    inAlbum.value = false\r\n  } else {\r\n    inAlbum.value = true\r\n  }\r\n\r\n  // animate\r\n  useBounceAnimation().animate('save-to-album-button')\r\n}\r\n\r\n/**\r\n * =\r\n * SHARE TO FEED\r\n * =\r\n */\r\nconst showShareToFeedModal = () => {\r\n  useModal().openModal('share-to-feed-modal')\r\n}\r\n\r\n/**\r\n * ====================================================================================================================\r\n * MISC\r\n * ====================================================================================================================\r\n */\r\n// Copy current work url to clipboard\r\nconst copied = ref(false)\r\nlet splashInterval\r\nconst copyLink = (link) => {\r\n  const source = ref(runtimeConfig.public.appUrl + link)\r\n  const { copy } = useClipboard({ source })\r\n  copy()\r\n\r\n  // show splash notification\r\n  useSplash().splash(splashInterval, copied, 'copy-alert')\r\n}\r\n\r\n/**\r\n * @reportModal\r\n * Show report modal\r\n */\r\nconst reportModalRef = ref(null)\r\nconst showReportModal = () => {\r\n  useModal().openModal('report-modal')\r\n}\r\n\r\ndefineExpose({\r\n  view\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"~/assets/css/artworks/view.scss\";\r\n</style>\r\n"],"names":["AlbumsApiAxiosParamCreator","configuration","body","options","localVarPath","localVarUrlObj","baseOptions","localVarRequestOptions","localVarHeaderParameter","localVarQueryParameter","query","key","headersFromBaseOptions","needsSerialization","id","RequiredError","perPage","page","type","workId","userId","AlbumsApiFp","localVarAxiosArgs","axios","globalAxios","basePath","BASE_PATH","axiosRequestArgs","AlbumsApi","BaseAPI","request","CollectionsApiAxiosParamCreator","collectionId","name","CollectionsApiFp","CollectionsApi","useBounceAnimation","elementId","el","useSplash","splash","interval","ref","splashId","hide","splashEl","isClient","isString","val","noop","resolveUnref","r","unref","identity","arg","tryOnScopeDispose","fn","getCurrentScope","onScopeDispose","resolveRef","computed","tryOnMounted","sync","getCurrentInstance","nextTick","useTimeoutFn","cb","immediate","isPending","timer","clear","stop","start","args","unrefElement","elRef","_a","plain","defaultWindow","defaultNavigator","useEventListener","target","event","listener","cleanup","stopWatch","watch","useSupported","callback","isSupported","update","useMediaQuery","window","mediaQuery","matches","watchEffect","useClipboard","navigator","read","source","copiedDuring","events","text","copied","timeout","updateText","value","copy","_global","globalKey","SwipeDirection","SwipeDirection2","__defProp","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","__spreadValues","a","b","prop","_TransitionPresets","useReadMore","description","selectorElId","descriptionElId","descriptionEl","readMoreEl","useRoute","readMore","auth","authStore","props","newWorkId","currentWorkId","router","useRouter","isLargeScreen","open","manageList","addToManageList","indexOfId","emits","currentState","detail","oApiConfiguration","fetchOptions","useApiFetch","artworkApi","useArtwork","currentViewUserId","onMounted","pagination","nextPrevByArtist","loading","worksByArtist","reactive","mode","works","workPagination","error","showError","isError","useCollection","inputData","data","UserCountersApi","params","collections","showLoadMore","useAuthStore","collectionApi","fetchCollection","fetchCurrentSaved","config","isEmpty","isLoadMore","showLoadMoreButton","collection","currentSaved","selectedCollections","unselectedCollections","loadMore","selectUnselect","save","unsaved","useModal","newCollectionInput","createCollectionFailureAlert","create","success","showCollectionCreatedAlert","collectionCreatedAlert","cancel","expose","useAlbum","albumId","albumIds","workIds","workList","fetchAlbums","album","fetchTop","albums","resetLoadingEmptyErrorMessage","selectedAlbums","unselectedAlbums","close","accept","reportApi","useReport","reasonList","input","toggleSelectedReason","reason","indexOfUnselectedReason","reportSubmitted","reportedData","submitReport","reset","feedApi","useFeed","feedInput","posting","posted","shareToFeed","applyExplicitFilter","removeExplicitFilter","generateSemiCompressedArtworkUrl","useImage","runtimeConfig","useRuntimeConfig","$router","useNuxtApp","route","closeArtworkModals","view","e","collectionSelectorModalEl","albumSelectorModalEl","reportModalEl","viewerModalEl","showExplicitAlert","removeFilter","isModal","increaseView","previewMode","artworkDetail","liked","saved","inAlbum","images","selectedWorkId","commentInput","comments","commentReplies","asset","useDate","getComments","getReportStatus","reportStatus","report","like","artworkLikeButtonEl","unlike","commentPagination","commentIndexes","fetchComments","showLoadOlderComments","comment","likedComments","loadMoreComments","commentMaxChar","commentCharLeft","submitCommentLoading","submitComment","deleteComment","commentId","indexOfIdToRemove","likeComment","commentLikeButtonEl","unlikeComment","commentReplyPagination","commentReplyIndexes","showLoadMoreReplies","fetchReplies","replies","reply","activeReplyTray","showReplies","likedReplies","hideReplies","commentReplyEl","loadMoreReplies","showReplyInputId","showReplyInput","replyInput","replyMaxChar","replyCharLeft","submitReplyLoading","submitReply","deleteReply","replyId","likeReply","replyCommentLikeButtonEl","unlikeReply","deleteConfirmationDialog","deleteSuccess","deleteWork","collectionSelectionModalRef","showCollectionSelectionModal","albumSelectionModalRef","showAlbumSelectionModal","addedToAlbum","showShareToFeedModal","splashInterval","copyLink","link","reportModalRef","showReportModal"],"mappings":"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"}
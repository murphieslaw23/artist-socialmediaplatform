import{B as P,a as w,b as y,R as p}from"../server.mjs";const F=function(d){return{commentFeed:async(e,a={})=>{const s="/feeds/comment",r=new URL(s,"https://example.com");let t;d&&(t=d.baseOptions);const n={method:"POST",...t,...a},c={},h={};c["Content-Type"]="application/json";const i=new URLSearchParams(r.search);for(const l in h)i.set(l,h[l]);for(const l in a.params)i.set(l,a.params[l]);r.search=new URLSearchParams(i).toString();let u=t&&t.headers?t.headers:{};n.headers={...c,...u,...a.headers};const o=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=o?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}},createFeed:async(e,a={})=>{const s="/feeds/create",r=new URL(s,"https://example.com");let t;d&&(t=d.baseOptions);const n={method:"POST",...t,...a},c={},h={};c["Content-Type"]="application/json";const i=new URLSearchParams(r.search);for(const l in h)i.set(l,h[l]);for(const l in a.params)i.set(l,a.params[l]);r.search=new URLSearchParams(i).toString();let u=t&&t.headers?t.headers:{};n.headers={...c,...u,...a.headers};const o=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=o?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}},getFeedById:async(e,a={})=>{if(e==null)throw new p("feedId","Required parameter feedId was null or undefined when calling getFeedById.");const s="/feeds/{feedId}".replace("{feedId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;d&&(t=d.baseOptions);const n={method:"GET",...t,...a},c={},h={},i=new URLSearchParams(r.search);for(const o in h)i.set(o,h[o]);for(const o in a.params)i.set(o,a.params[o]);r.search=new URLSearchParams(i).toString();let u=t&&t.headers?t.headers:{};return n.headers={...c,...u,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},getFeedComments:async(e,a,s,r={})=>{if(e==null)throw new p("feedId","Required parameter feedId was null or undefined when calling getFeedComments.");if(a==null)throw new p("page","Required parameter page was null or undefined when calling getFeedComments.");if(s==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getFeedComments.");const t="/feeds/{feedId}/comments".replace("{feedId}",encodeURIComponent(String(e))),n=new URL(t,"https://example.com");let c;d&&(c=d.baseOptions);const h={method:"GET",...c,...r},i={},u={};a!==void 0&&(u.page=a),s!==void 0&&(u.per_page=s);const o=new URLSearchParams(n.search);for(const m in u)o.set(m,u[m]);for(const m in r.params)o.set(m,r.params[m]);n.search=new URLSearchParams(o).toString();let l=c&&c.headers?c.headers:{};return h.headers={...i,...l,...r.headers},{url:n.pathname+n.search+n.hash,options:h}},getFeeds:async(e,a,s,r={})=>{if(e==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getFeeds.");if(a==null)throw new p("page","Required parameter page was null or undefined when calling getFeeds.");const t="/feeds",n=new URL(t,"https://example.com");let c;d&&(c=d.baseOptions);const h={method:"GET",...c,...r},i={},u={};e!==void 0&&(u.per_page=e),a!==void 0&&(u.page=a),s!==void 0&&(u.mode=s);const o=new URLSearchParams(n.search);for(const m in u)o.set(m,u[m]);for(const m in r.params)o.set(m,r.params[m]);n.search=new URLSearchParams(o).toString();let l=c&&c.headers?c.headers:{};return h.headers={...i,...l,...r.headers},{url:n.pathname+n.search+n.hash,options:h}},getFeedsByUserId:async(e,a,s,r={})=>{if(e==null)throw new p("userId","Required parameter userId was null or undefined when calling getFeedsByUserId.");if(a==null)throw new p("page","Required parameter page was null or undefined when calling getFeedsByUserId.");if(s==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getFeedsByUserId.");const t="/feeds/user/{userId}".replace("{userId}",encodeURIComponent(String(e))),n=new URL(t,"https://example.com");let c;d&&(c=d.baseOptions);const h={method:"GET",...c,...r},i={},u={};a!==void 0&&(u.page=a),s!==void 0&&(u.per_page=s);const o=new URLSearchParams(n.search);for(const m in u)o.set(m,u[m]);for(const m in r.params)o.set(m,r.params[m]);n.search=new URLSearchParams(o).toString();let l=c&&c.headers?c.headers:{};return h.headers={...i,...l,...r.headers},{url:n.pathname+n.search+n.hash,options:h}},getFollowingFeed:async(e,a,s={})=>{if(e==null)throw new p("page","Required parameter page was null or undefined when calling getFollowingFeed.");if(a==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getFollowingFeed.");const r="/feeds/following",t=new URL(r,"https://example.com");let n;d&&(n=d.baseOptions);const c={method:"GET",...n,...s},h={},i={};e!==void 0&&(i.page=e),a!==void 0&&(i.per_page=a);const u=new URLSearchParams(t.search);for(const l in i)u.set(l,i[l]);for(const l in s.params)u.set(l,s.params[l]);t.search=new URLSearchParams(u).toString();let o=n&&n.headers?n.headers:{};return c.headers={...h,...o,...s.headers},{url:t.pathname+t.search+t.hash,options:c}},getLatestFeeds:async(e,a,s={})=>{if(e==null)throw new p("page","Required parameter page was null or undefined when calling getLatestFeeds.");if(a==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getLatestFeeds.");const r="/feeds/latest",t=new URL(r,"https://example.com");let n;d&&(n=d.baseOptions);const c={method:"GET",...n,...s},h={},i={};e!==void 0&&(i.page=e),a!==void 0&&(i.per_page=a);const u=new URLSearchParams(t.search);for(const l in i)u.set(l,i[l]);for(const l in s.params)u.set(l,s.params[l]);t.search=new URLSearchParams(u).toString();let o=n&&n.headers?n.headers:{};return c.headers={...h,...o,...s.headers},{url:t.pathname+t.search+t.hash,options:c}},likeFeed:async(e,a={})=>{if(e==null)throw new p("feedId","Required parameter feedId was null or undefined when calling likeFeed.");const s="/feeds/like/{feedId}".replace("{feedId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;d&&(t=d.baseOptions);const n={method:"POST",...t,...a},c={},h={},i=new URLSearchParams(r.search);for(const o in h)i.set(o,h[o]);for(const o in a.params)i.set(o,a.params[o]);r.search=new URLSearchParams(i).toString();let u=t&&t.headers?t.headers:{};return n.headers={...c,...u,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},likeFeedComment:async(e,a={})=>{if(e==null)throw new p("commentId","Required parameter commentId was null or undefined when calling likeFeedComment.");const s="/feeds/{commentId}/like".replace("{commentId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;d&&(t=d.baseOptions);const n={method:"POST",...t,...a},c={},h={},i=new URLSearchParams(r.search);for(const o in h)i.set(o,h[o]);for(const o in a.params)i.set(o,a.params[o]);r.search=new URLSearchParams(i).toString();let u=t&&t.headers?t.headers:{};return n.headers={...c,...u,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},unlikeFeed:async(e,a={})=>{if(e==null)throw new p("feedId","Required parameter feedId was null or undefined when calling unlikeFeed.");const s="/feeds/unlike/{feedId}".replace("{feedId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;d&&(t=d.baseOptions);const n={method:"POST",...t,...a},c={},h={},i=new URLSearchParams(r.search);for(const o in h)i.set(o,h[o]);for(const o in a.params)i.set(o,a.params[o]);r.search=new URLSearchParams(i).toString();let u=t&&t.headers?t.headers:{};return n.headers={...c,...u,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},unlikeFeedComment:async(e,a={})=>{if(e==null)throw new p("commentId","Required parameter commentId was null or undefined when calling unlikeFeedComment.");const s="/feeds/{commentId}/unlike".replace("{commentId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;d&&(t=d.baseOptions);const n={method:"POST",...t,...a},c={},h={},i=new URLSearchParams(r.search);for(const o in h)i.set(o,h[o]);for(const o in a.params)i.set(o,a.params[o]);r.search=new URLSearchParams(i).toString();let u=t&&t.headers?t.headers:{};return n.headers={...c,...u,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},updateFeedPost:async(e,a={})=>{const s="/feeds/update",r=new URL(s,"https://example.com");let t;d&&(t=d.baseOptions);const n={method:"POST",...t,...a},c={},h={};c["Content-Type"]="application/json";const i=new URLSearchParams(r.search);for(const l in h)i.set(l,h[l]);for(const l in a.params)i.set(l,a.params[l]);r.search=new URLSearchParams(i).toString();let u=t&&t.headers?t.headers:{};n.headers={...c,...u,...a.headers};const o=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=o?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}}}},g=function(d){return{async commentFeed(e,a){const s=await F(d).commentFeed(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async createFeed(e,a){const s=await F(d).createFeed(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async getFeedById(e,a){const s=await F(d).getFeedById(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async getFeedComments(e,a,s,r){const t=await F(d).getFeedComments(e,a,s,r);return(n=w,c=y)=>{const h={...t.options,url:c+t.url};return n.request(h)}},async getFeeds(e,a,s,r){const t=await F(d).getFeeds(e,a,s,r);return(n=w,c=y)=>{const h={...t.options,url:c+t.url};return n.request(h)}},async getFeedsByUserId(e,a,s,r){const t=await F(d).getFeedsByUserId(e,a,s,r);return(n=w,c=y)=>{const h={...t.options,url:c+t.url};return n.request(h)}},async getFollowingFeed(e,a,s){const r=await F(d).getFollowingFeed(e,a,s);return(t=w,n=y)=>{const c={...r.options,url:n+r.url};return t.request(c)}},async getLatestFeeds(e,a,s){const r=await F(d).getLatestFeeds(e,a,s);return(t=w,n=y)=>{const c={...r.options,url:n+r.url};return t.request(c)}},async likeFeed(e,a){const s=await F(d).likeFeed(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async likeFeedComment(e,a){const s=await F(d).likeFeedComment(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async unlikeFeed(e,a){const s=await F(d).unlikeFeed(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async unlikeFeedComment(e,a){const s=await F(d).unlikeFeedComment(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async updateFeedPost(e,a){const s=await F(d).updateFeedPost(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}}}};class R extends P{async commentFeed(e,a){return g(this.configuration).commentFeed(e,a).then(s=>s(this.axios,this.basePath))}async createFeed(e,a){return g(this.configuration).createFeed(e,a).then(s=>s(this.axios,this.basePath))}async getFeedById(e,a){return g(this.configuration).getFeedById(e,a).then(s=>s(this.axios,this.basePath))}async getFeedComments(e,a,s,r){return g(this.configuration).getFeedComments(e,a,s,r).then(t=>t(this.axios,this.basePath))}async getFeeds(e,a,s,r){return g(this.configuration).getFeeds(e,a,s,r).then(t=>t(this.axios,this.basePath))}async getFeedsByUserId(e,a,s,r){return g(this.configuration).getFeedsByUserId(e,a,s,r).then(t=>t(this.axios,this.basePath))}async getFollowingFeed(e,a,s){return g(this.configuration).getFollowingFeed(e,a,s).then(r=>r(this.axios,this.basePath))}async getLatestFeeds(e,a,s){return g(this.configuration).getLatestFeeds(e,a,s).then(r=>r(this.axios,this.basePath))}async likeFeed(e,a){return g(this.configuration).likeFeed(e,a).then(s=>s(this.axios,this.basePath))}async likeFeedComment(e,a){return g(this.configuration).likeFeedComment(e,a).then(s=>s(this.axios,this.basePath))}async unlikeFeed(e,a){return g(this.configuration).unlikeFeed(e,a).then(s=>s(this.axios,this.basePath))}async unlikeFeedComment(e,a){return g(this.configuration).unlikeFeedComment(e,a).then(s=>s(this.axios,this.basePath))}async updateFeedPost(e,a){return g(this.configuration).updateFeedPost(e,a).then(s=>s(this.axios,this.basePath))}}function V(d,e){return{postFeed:async o=>{try{const{data:l}=await new R(d).createFeed({text:o.text,visibility:o.visibility,who_can_reply:o.whoCanReply},e);return[l.success,l.data,null]}catch(l){return[null,null,l]}},shareArtworkToFeed:async o=>{try{const{data:l}=await new R(d).createFeed({text:o.text,visibility:o.visibility,who_can_reply:o.whoCanReply,work_id:o.workId},e);return[l.success,l.data,null]}catch(l){return[null,null,l]}},feedDetail:async o=>{try{const{data:l}=await new R(d).getFeedById(o.id,e);return[l.data,null]}catch(l){return[null,l]}},getChronologicalFeeds:async o=>{try{const{data:l}=await new R(d).getFeeds(o.pagination.perPage,o.pagination.page,o.explicitMode,e);return[l.data,null]}catch(l){return[null,l]}},getFeedByUserId:async o=>{try{const{data:l}=await new R(d).getFeedsByUserId(o.userId,o.pagination.page,o.pagination.perPage,e);return[l.data,null]}catch(l){return[null,l]}},like:async o=>{try{const{data:l}=await new R(d).likeFeed(o.feedId,e);return[l.success,null]}catch(l){return[null,l]}},unlike:async o=>{try{const{data:l}=await new R(d).unlikeFeed(o.feedId,e);return[l.success,null]}catch(l){return[null,l]}},fetchComments:async o=>{try{const{data:l,error:m}=await new R(d).getFeedComments(o.feedId,o.pagination.page,o.pagination.perPage,e);return[l.data,m]}catch(l){return[null,l]}},comment:async o=>{try{const{data:l}=await new R(d).commentFeed({feed_id:o.feedId,comment:o.comment},e);return[l.success,l.data,null]}catch(l){return[null,null,l]}}}}export{V as u};
//# sourceMappingURL=useFeed.0a870d4a.js.map

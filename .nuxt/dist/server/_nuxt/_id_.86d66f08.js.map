{"version":3,"file":"_id_.86d66f08.js","sources":["../../../../components/artworks/forms/UpdateForm.vue","../../../../pages/works/update/[id].vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"mb-4 text-base font-bold\">\r\n      {{ $t('artworks.update.form.title') }} \r\n      <span class=\"text-xs italic font-bold href\">\r\n        <nuxt-link :to=\"'/a/'+id\">\r\n          (ID: {{ id }})\r\n        </nuxt-link>\r\n      </span>\r\n    </div>\r\n\r\n    <div v-show=\"isErrorFetching\" class=\"alert-danger\">\r\n      {{ $t('artworks.update.form.fetchFailure') }}\r\n    </div>\r\n    \r\n    <div v-show=\"updated\" class=\"alert-success\">\r\n      {{ $t('artworks.update.form.updated') }}\r\n      <span class=\"italic\">{{ $t('artworks.update.form.successRedirect') }}</span>\r\n    </div>\r\n\r\n    <div v-show=\"saving\" class=\"flex flex-row p-2 mb-6 text-white rounded-md button-color\">\r\n      <Spinner class=\"mr-1\" />\r\n      {{ $t('saving') }}\r\n    </div>\r\n\r\n    <div v-show=\"isError\" class=\"alert-danger\">\r\n      {{ $t('artworks.add.form.uploadFailure') }}\r\n    </div>\r\n\r\n    <form v-show=\"!isErrorFetching\" enctype=\"multipart/form-data\" @submit.prevent=\"update\">\r\n      <div class=\"input-block\">\r\n        <input \r\n          v-model=\"inputData.title\" \r\n          type=\"text\" \r\n          class=\"form-input input\" \r\n          :class=\"{ 'pointer-events-none cursor-not-allowed': saving || updated }\"\r\n          :placeholder=\"$t('title')\"\r\n        >\r\n      </div>\r\n\r\n      <div class=\"input-block -mt-2\">\r\n        <VueEditor\r\n          v-model=\"inputData.description\"\r\n          :editorToolbar=\"[\r\n            [{ 'size': ['normal', 'large'] }],\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            ['link'],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            ['clean']\r\n          ]\"\r\n          :class=\"[\r\n            { 'pointer-events-none cursor-not-allowed': saving || updated }\r\n          ]\"\r\n          :placeholder=\"$t('description')\"\r\n        />\r\n        <!-- <textarea \r\n          v-model=\"inputData.description\" \r\n          class=\"form-input input\" \r\n          :class=\"{ 'pointer-events-none cursor-not-allowed': saving || updated }\"\r\n          rows=\"8\"\r\n          cols=\"0\"\r\n          :placeholder=\"$t('description')\"\r\n          data-gramm=\"false\"\r\n        /> -->\r\n      </div>\r\n\r\n      <div class=\"input-block\">\r\n        <tags-input \r\n          v-model=\"tags\"\r\n          :placeholder=\"$t('tagsInputPlaceholder')\"\r\n          :typeahead=\"true\"\r\n          :typeahead-style=\"'dropdown'\"\r\n          :typeahead-activation-threshold=\"2\"\r\n          :typeahead-show-on-focus=\"true\"\r\n          :typeahead-hide-discard=\"true\"\r\n          :typeahead-url=\"apiUrl+'/artworks/tags/search?keyword=:search'\"\r\n          :add-tags-on-comma=\"true\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"input-block\">\r\n        <div class=\"mb-4\">\r\n          <label :for=\"!inputData.isExplicit ? 'checked' : 'unchecked'\" class=\"inline-flex items-center mt-2\">\r\n            <span class=\"relative cursor-pointer\" @click=\"inputData.isExplicit = !inputData.isExplicit\">\r\n              <span class=\"block w-10 h-6 bg-gray-300 rounded-full shadow-inner\" />\r\n              <span v-if=\"!inputData.isExplicit\" class=\"block absolute inset-y-0 left-0 mt-1 ml-1 w-4 h-4 bg-white rounded-full shadow transition-transform duration-300 ease-in-out focus-within:shadow-outline\">\r\n                <input id=\"unchecked\" type=\"checkbox\" class=\"absolute w-0 h-0 opacity-0\">\r\n              </span>\r\n              \r\n              <span v-if=\"inputData.isExplicit\" class=\"block absolute inset-y-0 left-0 mt-1 ml-1 w-4 h-4 rounded-full shadow transition-transform duration-300 ease-in-out transform translate-x-full focus-within:shadow-outline button-color\">\r\n                <input id=\"checked\" type=\"checkbox\" class=\"absolute w-0 h-0 opacity-0\">\r\n              </span>\r\n            </span>\r\n            <span class=\"ml-2\">{{ $t('explicitContent') }}</span>\r\n          </label>\r\n\r\n          <div v-show=\"inputData.isExplicit\" class=\"flex flex-row p-2 mt-2 text-white bg-red-400 rounded\">\r\n            <Icon :name=\"'alert-outline'\" class=\"mr-1 text-white\" /> \r\n            <span>{{ $t('artworks.add.form.prohibitChildExplicitContent') }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button class=\"float-right primary-button\" :class=\"{ 'pointer-events-none cursor-not-allowed': saving || updated }\">\r\n        <div class=\"flex flex-row\">\r\n          <Spinner v-if=\"saving\" class=\"mr-1\" />\r\n          {{ !saving ? $t('save') : $t('saving') }}\r\n        </div>\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// vue3-editor\r\nimport { VueEditor } from 'vue3-editor'\r\n\r\n// stores\r\nimport useAuthStore from '@/stores/auth.store';\r\n\r\n// components\r\nimport Spinner from '~/components/globals/Spinner.vue'\r\nimport Icon from '~/components/globals/Icon.vue'\r\n\r\n\r\nconst props = defineProps ({\r\n  id: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\nconst auth = useAuthStore()\r\nconst { $router } = useNuxtApp()\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst artworkApi = useArtwork(oApiConfiguration, fetchOptions())\r\n\r\nconst runtimeConfig = useRuntimeConfig()\r\nconst apiUrl = runtimeConfig.public.apiUrl\r\n\r\nonMounted (() => {\r\n  if (!auth.loggedIn) {\r\n    $router.push('/')\r\n  }\r\n\r\n  fetchWorkInfo()\r\n})\r\n\r\n/**\r\n * Retrieve current work info\r\n */\r\nconst isErrorFetching = ref(false)\r\nconst fetchWorkInfo = async () => {\r\n  const [data, error] = await artworkApi.getWorkById(props.id)\r\n\r\n  if (error) {\r\n    isErrorFetching.value = true\r\n  } else {\r\n    inputData.value.title = data.title\r\n    inputData.value.description = data.description.split('<br><br>').join(' \\n').split('<br>').join('')\r\n    data.artwork_has_tags.forEach((tag) => {\r\n      tags.value.push({\r\n        key: tag.artwork_tags.id,\r\n        value: tag.artwork_tags.tag\r\n      })\r\n    })\r\n    inputData.value.isExplicit = !!data.is_explicit\r\n  }\r\n}\r\n\r\n// \r\nconst inputData = ref({\r\n  title: '',\r\n  description: '',\r\n  tags: '',\r\n  isExplicit: false\r\n})\r\nconst tags = ref([])\r\n\r\nconst saving = ref(false)\r\nconst updated = ref(false)\r\nconst isError = ref(false)\r\nconst update = async () => {\r\n  // collect picked tags and convert to acceptable API format\r\n  const tagValues = []\r\n  tags.value.forEach((tag) => {\r\n    tagValues.push(tag.value)\r\n  })\r\n\r\n  // proceed to send data to API\r\n  saving.value = true\r\n  updated.value = false\r\n\r\n  try {\r\n    // remove tag keys and collect tag values\r\n    const tagValues = []\r\n    tags.value.forEach((tag) => {\r\n      tagValues.push(tag.value)\r\n    })\r\n\r\n    const [success, error] = await artworkApi.updateInfo({\r\n      id: props.id,\r\n      title: inputData.value.title,\r\n      description: inputData.value.description,\r\n      isExplicit: inputData.value.isExplicit,\r\n      tags: tagValues.toString()\r\n    })\r\n\r\n    if (error) {\r\n      isError.value = true\r\n    } else {\r\n      updated.value = true\r\n      setTimeout(() => {\r\n        $router.push(`/a/${props.id}`)\r\n      }, 1000)\r\n    }\r\n  } catch (error) {\r\n    isError.value = true\r\n  }\r\n\r\n  saving.value = false\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\nform {\r\n  .input-block {\r\n    @apply mb-4;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <Layout\r\n    :with-footer=\"true\"\r\n    :h-screen=\"true\"\r\n  >\r\n    <UpdateForm\r\n      :id=\"id\"\r\n    />\r\n\r\n    <template #right-side>\r\n      <h1 class=\"mb-3 text-base font-bold\">Current Info</h1>\r\n\r\n      <div class=\"mt-2\">\r\n        <label class=\"italic font-medium text-color-secondary\">Title</label>\r\n        <p>{{ currentInfo.title }}</p>\r\n      </div>\r\n      <!-- <div class=\"mt-2\">\r\n        <label class=\"italic font-medium text-color-secondary\">Description</label>\r\n        <p v-html=\"currentInfo.description\" class=\"text-justify\" />\r\n      </div> -->\r\n      <div class=\"mt-2\">\r\n        <label class=\"italic font-medium text-color-secondary\">Explicit</label>\r\n        <p>{{ currentInfo.is_explicit ? 'Yes' : 'No' }}</p>\r\n      </div>\r\n      <div v-if=\"currentInfo.artwork_has_tags && currentInfo.artwork_has_tags.length\" class=\"mt-2\">\r\n        <label class=\"italic font-medium text-color-secondary\">Tags</label>\r\n        <div class=\"tags\">\r\n          <span\r\n            v-for=\"tag in currentInfo.artwork_has_tags\"\r\n            :key=\"tag.artwork_tags.id\"\r\n            class=\"tag\"\r\n          >\r\n            {{ tag.artwork_tags.tag }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-2\">\r\n        <label class=\"italic font-medium text-color-secondary\">Publish Date</label>\r\n        <p>{{ formatDate(currentInfo.scheduled_post) }}</p>\r\n      </div>\r\n    </template>\r\n  </Layout>\r\n</template>\r\n\r\n<script setup>\r\n// stores\r\nimport useAuthStore from '@/stores/auth.store'\r\n\r\n// components\r\nimport Layout from '~/components/layouts/Layout.vue'\r\nimport UpdateForm from '~/components/artworks/forms/UpdateForm'\r\n\r\n// stores\r\nconst auth = useAuthStore()\r\n\r\n// composition\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst artworkApi = useArtwork(oApiConfiguration, fetchOptions())\r\n\r\nconst { $router } = useNuxtApp()\r\nconst router = useRouter()\r\n\r\nconst { id } = $router.currentRoute.value.params\r\n\r\nonBeforeMount(async () => {\r\n  await checkAuthority()\r\n})\r\n\r\nonMounted (() => {\r\n  fetchWorkInfo()\r\n})\r\n\r\nconst checkAuthority = async () => {\r\n  const [data, error] = await artworkApi.getWorkById(id)\r\n\r\n  if (data.user_id !== auth.user.id || error) {\r\n    router.push({\r\n      path: '/'\r\n    })\r\n  }\r\n}\r\n\r\n// fetch work info to show the current info before updating\r\nconst currentInfo = ref({})\r\nconst fetchWorkInfo = async () => {\r\n  try {\r\n    const [data, error] = await artworkApi.getWorkById(id)\r\n\r\n    if (error) {\r\n      // todo: handle error\r\n    } else {\r\n      currentInfo.value = data\r\n    }\r\n  } catch (error) {\r\n    // todo: handle error\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\n.tags {\r\n  @apply flex flex-wrap mb-4 mt-1;\r\n\r\n  .tag {\r\n    @apply py-1 px-2 mr-1 mt-1 rounded transition-all duration-150 button;\r\n\r\n    &:hover {\r\n      @apply button-hover;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"names":["auth","useAuthStore","$router","useNuxtApp","oApiConfiguration","fetchOptions","useApiFetch","artworkApi","useArtwork","apiUrl","useRuntimeConfig","onMounted","fetchWorkInfo","isErrorFetching","ref","data","error","props","inputData","tag","tags","saving","updated","isError","update","tagValues","success","useRouter","id","currentInfo"],"mappings":"i5DAoIAA,EAAAC,EAAA,EACA,CAAA,QAAAC,CAAA,EAAAC,EAAA,EAGA,CAAA,kBAAAC,EAAA,aAAAC,CAAA,EAAAC,EAAA,EACAC,EAAAC,EAAAJ,EAAAC,GAAA,EAGAI,EADAC,EAAA,EACA,OAAA,OAEAC,EAAA,IAAA,CACAX,EAAA,UACAE,EAAA,KAAA,GAAA,EAGAU,EAAA,CACA,CAAA,EAKA,MAAAC,EAAAC,EAAA,EAAA,EACAF,EAAA,SAAA,CACA,KAAA,CAAAG,EAAAC,CAAA,EAAA,MAAAT,EAAA,YAAAU,EAAA,EAAA,EAEAD,EACAH,EAAA,MAAA,IAEAK,EAAA,MAAA,MAAAH,EAAA,MACAG,EAAA,MAAA,YAAAH,EAAA,YAAA,MAAA,UAAA,EAAA,KAAA;AAAA,CAAA,EAAA,MAAA,MAAA,EAAA,KAAA,EAAA,EACAA,EAAA,iBAAA,QAAAI,GAAA,CACAC,EAAA,MAAA,KAAA,CACA,IAAAD,EAAA,aAAA,GACA,MAAAA,EAAA,aAAA,GACA,CAAA,CACA,CAAA,EACAD,EAAA,MAAA,WAAA,CAAA,CAAAH,EAAA,YAEA,EAGAG,EAAAJ,EAAA,CACA,MAAA,GACA,YAAA,GACA,KAAA,GACA,WAAA,EACA,CAAA,EACAM,EAAAN,EAAA,EAAA,EAEAO,EAAAP,EAAA,EAAA,EACAQ,EAAAR,EAAA,EAAA,EACAS,EAAAT,EAAA,EAAA,EACAU,EAAA,SAAA,CAEA,MAAAC,EAAA,CAAA,EACAL,EAAA,MAAA,QAAAD,GAAA,CACAM,EAAA,KAAAN,EAAA,KAAA,CACA,CAAA,EAGAE,EAAA,MAAA,GACAC,EAAA,MAAA,GAEA,GAAA,CAEA,MAAAG,EAAA,CAAA,EACAL,EAAA,MAAA,QAAAD,GAAA,CACAM,EAAA,KAAAN,EAAA,KAAA,CACA,CAAA,EAEA,KAAA,CAAAO,EAAAV,CAAA,EAAA,MAAAT,EAAA,WAAA,CACA,GAAAU,EAAA,GACA,MAAAC,EAAA,MAAA,MACA,YAAAA,EAAA,MAAA,YACA,WAAAA,EAAA,MAAA,WACA,KAAAO,EAAA,SAAA,CACA,CAAA,EAEAT,EACAO,EAAA,MAAA,IAEAD,EAAA,MAAA,GACA,WAAA,IAAA,CACApB,EAAA,KAAA,MAAAe,EAAA,IAAA,CACA,EAAA,GAAA,EAEA,MAAA,CACAM,EAAA,MAAA,EACA,CAEAF,EAAA,MAAA,EACA,woGC1KApB,EAAA,EAGA,KAAA,CAAA,kBAAAG,EAAA,aAAAC,CAAA,EAAAC,EAAA,EACAC,EAAAC,EAAAJ,EAAAC,GAAA,EAEA,CAAA,QAAAH,CAAA,EAAAC,EAAA,EACAwB,EAAA,EAEA,KAAA,CAAA,GAAAC,CAAA,EAAA1B,EAAA,aAAA,MAAA,OAMAS,EAAA,IAAA,CACAC,EAAA,CACA,CAAA,EAaA,MAAAiB,EAAAf,EAAA,EAAA,EACAF,EAAA,SAAA,CACA,GAAA,CACA,KAAA,CAAAG,EAAAC,CAAA,EAAA,MAAAT,EAAA,YAAAqB,CAAA,EAEAZ,IAGAa,EAAA,MAAAd,EAEA,MAAA,CAEA,CACA"}
{"version":3,"file":"index.ab479a73.js","sources":["../../../../components/layouts/right-sides/FeedSide.vue","../../../../pages/feed/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- <div class=\"mb-6\">\r\n      <div class=\"font-bold text-tiny\">Top communities</div>\r\n      <div class=\"grid grid-cols-1 gap-2 mt-2\">\r\n        <div class=\"py-3 px-4 rounded theme-color\">Drawing Community</div>\r\n        <div class=\"py-3 px-4 rounded theme-color\">Something else</div>\r\n        <div class=\"py-3 px-4 rounded theme-color\">Indonesian</div>\r\n        <div class=\"py-3 px-4 rounded theme-color\">Sketcher</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mb-6\">\r\n      <div class=\"font-bold text-tiny\">Suggested users</div>\r\n      <div class=\"grid grid-cols-1 gap-2 mt-2\">\r\n        <div class=\"py-3 px-4 rounded theme-color\">Drawing Community</div>\r\n        <div class=\"py-3 px-4 rounded theme-color\">Something else</div>\r\n        <div class=\"py-3 px-4 rounded theme-color\">Indonesian</div>\r\n        <div class=\"py-3 px-4 rounded theme-color\">Sketcher</div>\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n","<template>\r\n  <keep-alive>\r\n    <Layout \r\n      :with-footer=\"true\"\r\n      :hide-side=\"isMobile()\"\r\n    >\r\n      <SplashAlert \r\n        v-show=\"copied\"\r\n        id=\"copy-alert\"\r\n        :text=\"$t('linkCopied')\"\r\n        :icon=\"'i-bi-check-all'\"\r\n      />\r\n\r\n      <div class=\"mx-auto w-full\">\r\n        <div class=\"grid grid-cols-1 gap-1 mx-auto md:gap-2 xl:w-10/12\">\r\n          <div v-for=\"(feed, feedIdx) in feeds\" :key=\"feed.id+feed.type\" class=\"rounded-md lg:mx-6\">\r\n            <div class=\"flex flex-row rounded-md theme-color\">\r\n              <!-- Images -->\r\n              <div class=\"w-full\">\r\n                <div v-if=\"feed.users\" class=\"p-2 md:p-4 user-info\">\r\n                  <nuxt-link :to=\"'/profile/'+feed.users.username\">\r\n                    <img class=\"avatar\" :src=\"avatarCoverUrl(feed.users.avatar_bucket, feed.users.avatar_filename)\" @error=\"imageLoadError\">\r\n                  </nuxt-link>\r\n                  <div class=\"name\">\r\n                    <nuxt-link \r\n                      :to=\"'/profile/'+feed.users.username\" \r\n                      class=\"fullname hover:href\"\r\n                    >\r\n                      {{ feed.users.name }}\r\n                    </nuxt-link>\r\n                    <br>\r\n                    <nuxt-link \r\n                      :to=\"'/profile/'+feed.users.username\" \r\n                      class=\"hover:underline text-xxs\"\r\n                    >\r\n                      @{{ feed.users.username }}\r\n                    </nuxt-link>\r\n                    \r\n                    <span class=\"mx-1\">·</span>\r\n                    \r\n                    <nuxt-link :to=\"(feed.type === 'artwork' ? '/a/' : '/feed/') + feed.id\" class=\"hover:underline text-xxs\">\r\n                      {{ formatDate(feed.scheduled_post ? feed.scheduled_post : feed.created_at, true) }}\r\n                    </nuxt-link>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- information for feed type artwork -->\r\n                <div v-if=\"feed.type === 'artwork'\" class=\"px-2 mt-2 md:px-4\">\r\n                  <span class=\"text-xs font-semibold\">{{ feed.title }}</span>\r\n                  <p v-show=\"feed.description\">\r\n                    <span\r\n                      :id=\"'feed-description-'+feed.id\"\r\n                      v-html=\"feed.description.length > 300 ? `${feed.description.slice(0, 300)}...` : feed.description\"\r\n                    />\r\n\r\n                    <a \r\n                      v-if=\"feed.description.length > 300\" \r\n                      :id=\"'feed-read-more-'+feed.id\" \r\n                      class=\"href\" \r\n                      @click.prevent=\"readMore(feed.description, feed.id, 'feed-read-more-', 'feed-description-')\"\r\n                    >\r\n                      {{ $t('readMore') }}\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n\r\n                <!-- Image List -->\r\n                <div>\r\n                  <!-- images -->\r\n                  <div>\r\n                    <!-- desktop -->\r\n                    <div v-if=\"feed.type === 'artwork' && !isMobile()\" class=\"cursor-pointer\" @click.prevent=\"view(feed.id)\">\r\n                      <ImageList class=\"p-2 md:p-4\" :work=\"feed\" />\r\n                    </div>\r\n                    \r\n                    <!-- mobile/smaller device -->\r\n                    <nuxt-link v-if=\"feed.type === 'artwork' && isMobile()\" :to=\"'/a/'+feed.id\" class=\"cursor-pointer\">\r\n                      <ImageList class=\"p-2\" :work=\"feed\" />\r\n                    </nuxt-link>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- feed type text post -->\r\n                <div v-if=\"feed.type === 'feed'\" class=\"px-2 md:px-4\">\r\n                  <p\r\n                    v-show=\"feed.text\"\r\n                    v-html=\"feed.text.split('<br>').length > 3 && feed.text.length > 300 ? `${feed.text.slice(0, 300)}...` : feed.text\"\r\n                    :id=\"'feed-text-'+feed.id\"\r\n                    :class=\"[\r\n                      'mt-2',\r\n                      { 'mb-2': !feed.artwork_share_info }\r\n                    ]\"\r\n                  />\r\n                  \r\n                  <a \r\n                    v-if=\"feed.text.split('<br>').length > 3 && feed.text.length > 300\" \r\n                    :id=\"'feed-read-more-'+feed.id\" \r\n                    class=\"href\" \r\n                    @click.prevent=\"readMore(feed.text, feed.id, 'feed-read-more-', 'feed-text-')\"\r\n                  >\r\n                    {{ $t('readMore') }}\r\n                  </a>\r\n\r\n                  <!-- shared artwork post detail -->\r\n                  <div v-if=\"feed.artwork_share_info\" class=\"my-2 w-full rounded-md theme-color-secondary\">\r\n                    <!-- creator information -->\r\n                    <div v-if=\"feed.artwork_share_info.user\" class=\"p-2 md:p-4 user-info\">\r\n                      <nuxt-link :to=\"'/profile/'+feed.artwork_share_info.user.username\">\r\n                        <img class=\"avatar\" :src=\"avatarCoverUrl(feed.artwork_share_info.user.avatar_bucket, feed.artwork_share_info.user.avatar_filename)\" @error=\"imageLoadError\">\r\n                      </nuxt-link>\r\n                      <div class=\"name\">\r\n                        <nuxt-link \r\n                          :to=\"'/profile/'+feed.artwork_share_info.user.username\" \r\n                          class=\"fullname hover:href\"\r\n                        >\r\n                          {{ feed.artwork_share_info.user.name }}\r\n                        </nuxt-link>\r\n                        <br>\r\n                        <nuxt-link \r\n                          :to=\"'/profile/'+feed.artwork_share_info.user.username\" \r\n                          class=\"hover:underline text-xxs\"\r\n                        >\r\n                          @{{ feed.artwork_share_info.user.username }}\r\n                        </nuxt-link>\r\n                        \r\n                        <span class=\"mx-1\">·</span>\r\n                        \r\n                        <nuxt-link :to=\"'/a/' + feed.artwork_share_info.id\" class=\"hover:underline text-xxs\">\r\n                          {{ formatDate(feed.artwork_share_info.scheduled_post ? feed.artwork_share_info.scheduled_post : feed.artwork_share_info.created_at, true) }}\r\n                        </nuxt-link>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- title & description of shared artwork -->\r\n                    <div class=\"px-2 mt-2 md:px-4\">\r\n                      <span class=\"text-xs font-semibold\">{{ feed.artwork_share_info.title }}</span>\r\n                      <p v-show=\"feed.artwork_share_info.description\">\r\n                        <span\r\n                          :id=\"'feed-description-'+feed.artwork_share_info.id\"\r\n                          v-html=\"feed.artwork_share_info.description.length > 300 ? `${feed.artwork_share_info.description.slice(0, 300)}...` : feed.artwork_share_info.description\"\r\n                        />\r\n                        \r\n                        <a \r\n                          v-if=\"feed.artwork_share_info.description.length > 300\" \r\n                          :id=\"'feed-read-more-'+feed.artwork_share_info.id\" \r\n                          class=\"href\" \r\n                          @click.prevent=\"readMore(feed.artwork_share_info.description, feed.artwork_share_info.id, 'feed-read-more-', 'feed-description-')\"\r\n                        >\r\n                          {{ $t('readMore') }}\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n\r\n                    <!-- artwork images -->\r\n                    <div>\r\n                      <!-- desktop -->\r\n                      <div\r\n                        v-if=\"!isMobile()\"\r\n                        :class=\"[\r\n                          'p-2',\r\n                          { 'cursor-pointer': !feed.apply_explicit_filter }\r\n                        ]\"\r\n                        @click.prevent=\"view(feed.artwork_share_info.id, feed.apply_explicit_filter, feedIdx)\"\r\n                      >\r\n                        <div\r\n                          :class=\"[\r\n                            'overflow-hidden relative p-2 rounded-md',\r\n                            { 'md:mx-2': feed.apply_explicit_filter }\r\n                          ]\"\r\n                        >\r\n                          <ImageList\r\n                            :class=\"[\r\n                              { 'blur-3xl unclickable': feed.apply_explicit_filter },\r\n                              feed.apply_explicit_filter ? 'brightness-50' : 'brightness-100'\r\n                            ]\"\r\n                            :work=\"feed\"\r\n                          />\r\n\r\n                          <!-- filter message -->\r\n                          <div v-if=\"feed.apply_explicit_filter\" class=\"p-2 mx-auto w-full text-center rounded-md opacity-90 theme-color\">\r\n                            <div>{{ auth.loggedIn ? $t('explicitContentAlert') : $t('explicitContentAlertForGuest') }}</div>\r\n                            <button class=\"mx-auto mt-2 primary-button\">{{ $t('explicitShowMeThisContent') }}</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- mobile/smaller device -->\r\n                      <nuxt-link\r\n                        v-if=\"isMobile()\"\r\n                        :to=\"feed.apply_explicit_filter ? null : '/a/'+feed.artwork_share_info.id\"\r\n                        @click.prevent=\"view(feed.artwork_share_info.id, feed.apply_explicit_filter, feedIdx)\"\r\n                        class=\"cursor-pointer\"\r\n                      >\r\n                        <div\r\n                          :class=\"[\r\n                            'overflow-hidden relative p-2 rounded-md',\r\n                            { 'm-2': feed.apply_explicit_filter }\r\n                          ]\"\r\n                        >\r\n                          <ImageList\r\n                            :class=\"[\r\n                              { 'blur-3xl unclickable': feed.apply_explicit_filter },\r\n                              feed.apply_explicit_filter ? 'brightness-50' : 'brightness-100'\r\n                            ]\"\r\n                            :work=\"feed\"\r\n                          />\r\n\r\n                          <!-- filter message -->\r\n                          <div v-if=\"feed.apply_explicit_filter\" class=\"p-2 mx-auto w-full text-center rounded-md opacity-90 theme-color\">\r\n                            <div>{{ auth.loggedIn ? $t('explicitContentAlert') : $t('explicitContentAlertForGuest') }}</div>\r\n                            <button class=\"mx-auto mt-2 primary-button\">{{ $t('explicitShowMeThisContent') }}</button>\r\n                          </div>\r\n                        </div>\r\n                      </nuxt-link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Intereaction area -->\r\n                <div class=\"float-right mx-4 mt-2 interactions\">\r\n                  <!-- Reactions -->\r\n                  <div v-if=\"auth.loggedIn\" class=\"reactions\">\r\n                    <!-- Like -->\r\n                    <span\r\n                      @click=\"\r\n                        feed.type === 'artwork' ?\r\n                          likedIds.includes('a-'+feed.id) ? unlike('a-'+feed.id, feed.type) : like('a-'+feed.id, feed.type) : \r\n                          likedIds.includes('f-'+feed.id) ? unlike('f-'+feed.id, feed.type) : like('f-'+feed.id, feed.type)\r\n                      \"\r\n                    >\r\n                      <Icon \r\n                        v-show=\"feed.type === 'artwork' ? likedIds.includes('a-'+feed.id) : likedIds.includes('f-'+feed.id)\"\r\n                        :id=\"'feed-like-button-'+feed.type+'-'+feed.id\"\r\n                        :name=\"'i-ion-heart'\" \r\n                        class=\"mr-1 text-red-500 hover:text-red-500\"\r\n                      />\r\n                      <Icon\r\n                        v-show=\"feed.type === 'artwork' ? !likedIds.includes('a-'+feed.id) : !likedIds.includes('f-'+feed.id)\"\r\n                        :name=\"'i-ion-heart-outline'\" \r\n                        class=\"mr-1 icon-color hover:text-red-500\"\r\n                      />\r\n                      {{ thousand(feed._count.likes) }}\r\n                    </span>\r\n\r\n                    <!-- Comment -->\r\n                    <span @click.prevent=\"feed.type === 'artwork' ? view(feed.id) : viewFeed(feed.id)\">\r\n                      <Icon \r\n                        :name=\"'i-mdi-comment-multiple-outline'\" \r\n                        class=\"mr-1 icon-color hover:text-blue-500\"\r\n                      />\r\n                      {{ thousand(feed._count.comments) }}\r\n                    </span>\r\n\r\n                    <!-- Save -->\r\n                    <span v-if=\"feed.type === 'artwork'\" @click=\"showCollectionSelectionModal(feed.id)\">\r\n                      <Icon \r\n                        v-show=\"savedIds.includes(feed.id)\"\r\n                        :id=\"'save-to-collection-button-'+feed.id\"\r\n                        :name=\"'i-ion-bookmark'\" \r\n                        class=\"text-blue-500 hover:text-blue-500\"\r\n                      />\r\n                      <Icon \r\n                        v-show=\"!savedIds.includes(feed.id)\"\r\n                        :name=\"'i-majesticons-bookmark-line'\" \r\n                        class=\"icon-color hover:text-blue-500\"\r\n                      />\r\n                    </span>\r\n\r\n                    <!-- ellipsis other interaction -->\r\n                    <div class=\"option dropdown\">\r\n                      <button \r\n                        type=\"button\" \r\n                        aria-haspopup=\"true\" \r\n                        aria-expanded=\"true\" \r\n                        aria-controls=\"option-dropdown-items\"\r\n                      >\r\n                        <span>\r\n                          <Icon\r\n                            :name=\"'i-uit-ellipsis-v'\" \r\n                            class=\"align-middle icon icon-color\"\r\n                          />\r\n                        </span>\r\n                      </button>\r\n                      \r\n                      <div class=\"option-dropdown dropdown-menu\">\r\n                        <div \r\n                          id=\"option-dropdown-items\" \r\n                          class=\"w-52 toggler\"\r\n                          aria-labelledby=\"option-dropdown-buttons\" \r\n                          role=\"menu\"\r\n                        >\r\n                          <div class=\"menu-wrapper\">\r\n                            <nuxt-link \r\n                              :to=\"feed.type === 'artwork' ? '/a/'+feed.id : '/feed/'+feed.id\"\r\n                              class=\"flex py-2 px-3 w-full rounded-md transition-all duration-150 hover:button-color parent-icon hover:text-white\"\r\n                            >\r\n                              <Icon :name=\"'i-fluent-arrow-enter-20-filled'\" class=\"mr-2 text-base\" /> {{ $t('open') }}\r\n                            </nuxt-link>\r\n                            <nuxt-link \r\n                              :to=\"feed.type === 'artwork' ? '/a/'+feed.id : '/feed/'+feed.id\"\r\n                              target=\"_blank\" \r\n                              class=\"flex z-20 py-2 px-3 w-full rounded-md transition-all duration-150 hover:button-color parent-icon hover:text-white\"\r\n                            >\r\n                              <Icon :name=\"'i-ci-external-link'\" class=\"mr-2 text-base\" /> {{ $t('openInNewTab') }}\r\n                            </nuxt-link>\r\n\r\n                            <div class=\"custom-divider\" />\r\n                            \r\n                            <!-- report -->\r\n                            <!-- <nuxt-link \r\n                              :to=\"'#'\" \r\n                              class=\"flex py-2 px-3 w-full rounded-md transition-all duration-150 hover:button-color parent-icon hover:text-white\"\r\n                              @click.prevent \r\n                            >\r\n                              <Icon :name=\"'i-akar-icons-flag'\" class=\"mr-2 text-base\" /> {{ $t('report') }}\r\n                            </nuxt-link> -->\r\n\r\n                            <!-- copy sharable link -->\r\n                            <a\r\n                              class=\"flex py-2 px-3 w-full leading-4 rounded-md transition-all duration-150 cursor-pointer hover:button-color parent-icon hover:text-white\"\r\n                              @click=\"copyLink(feed.type === 'artwork' ? '/a/'+feed.id : '/feed/'+feed.id)\" \r\n                            >\r\n                              <Icon :name=\"'i-icon-park-outline-copy'\" class=\"mr-2 text-base\" /> {{ $t('copySharableLink') }}\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <client-only>\r\n            <InfiniteLoading \r\n              class=\"mt-6\"\r\n              :load=\"fetch\"\r\n            >\r\n              <template #loading>\r\n                <div class=\"mx-auto text-center\">\r\n                  <Icon :name=\"'i-line-md-loading-twotone-loop'\" class=\"text-3xl\" />\r\n                </div>\r\n              </template>\r\n\r\n              <template #no-results>\r\n                <div class=\"mx-auto text-center\">\r\n                  {{ $t('feeds.nothingToShow') }}\r\n                </div>\r\n              </template>\r\n\r\n              <template #no-more>\r\n                <div class=\"mx-auto text-center\">\r\n                  {{ $t('youHaveReachedTheEnd') }}\r\n                  <br>\r\n                  {{ $t('feeds.followMorePeople') }}\r\n                </div>\r\n              </template>\r\n            </InfiniteLoading>\r\n          </client-only>\r\n\r\n          <!-- Artwork Modal View -->\r\n          <div \r\n            :id=\"'chronological-modal'\"\r\n            class=\"modal work-view\" \r\n          >\r\n            <ModalView \r\n              ref=\"chronologicalModalViewRef\"\r\n              :section=\"'chronological'\"\r\n            />\r\n          </div>\r\n\r\n          <!-- Feed Modal View -->\r\n          <div \r\n            :id=\"'chronological-feed-modal'\"\r\n            class=\"z-30 modal work-view\"\r\n          >\r\n            <FeedModalView\r\n              ref=\"chronologicalFeedModalViewRef\"\r\n              :section=\"'chronological-feed'\"\r\n            />\r\n          </div>\r\n\r\n          <!-- add or remove from selected collection(s) -->\r\n          <ManageSave \r\n            id=\"feed-collection-selection-modal\"\r\n            :modal-id=\"'feed-collection-selection-modal'\"\r\n            ref=\"collectionSelectionModalRef\"\r\n            :work-id=\"collectionWorkId\"\r\n            class=\"modal\"\r\n            @save=\"save\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <template #right-side>\r\n        <FeedSide />\r\n      </template>\r\n    </Layout>\r\n  </keep-alive>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClipboard } from '@vueuse/core'\r\nimport { VueEternalLoading as InfiniteLoading } from '@ts-pro/vue-eternal-loading'\r\n\r\n// stores\r\nimport useAuthStore from '@/stores/auth.store'\r\n\r\n// composables\r\nimport useImage from '~/composables/useImage'\r\n\r\n// components\r\nimport Icon from '~/components/globals/Icon.vue'\r\nimport Layout from '~/components/layouts/Layout.vue'\r\nimport ModalView from '~/components/artworks/views/ModalView.vue'\r\nimport FeedModalView from '~/components/feeds/FeedModalView.vue'\r\nimport ImageList from '~/components/feeds/ImageList.vue'\r\nimport FeedSide from '~/components/layouts/right-sides/FeedSide.vue'\r\nimport ManageSave from '~/components/artworks/ManageSave.vue'\r\nimport SplashAlert from '~/components/globals/SplashAlert.vue'\r\n\r\n/**\r\n * @meta\r\n */\r\ndefinePageMeta ({\r\n  // keepalive: true\r\n})\r\n\r\nuseHead ({\r\n  title: useI18n().tl('meta.title.feed.feed')\r\n})\r\n\r\n/**\r\n * @props\r\n */\r\ndefineProps ({\r\n  changeMode: {\r\n    type: Function,\r\n    default: () => {}\r\n  }\r\n})\r\n\r\n/**\r\n * @stores\r\n */\r\nconst auth = useAuthStore()\r\n\r\n/**\r\n * @composables\r\n */\r\nconst { generateArtworkThumb } = useImage()\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst artworkApi = useArtwork(oApiConfiguration, fetchOptions())\r\nconst feedApi = useFeed(oApiConfiguration, fetchOptions())\r\n/**\r\n * @composables\r\n */\r\n\r\n/**\r\n * @nuxt\r\n */\r\nconst runtimeConfig = useRuntimeConfig()\r\nconst router = useRouter()\r\nconst { $router } = useNuxtApp()\r\n\r\nonBeforeMount (() => {\r\n  if (!auth.loggedIn) {\r\n    router.push({\r\n      path: '/explore'\r\n    })\r\n  }\r\n})\r\n\r\nonMounted (() => {\r\n  // window.addEventListener('keydown', (e) => {\r\n  //   if (e.key === 'Escape') {\r\n  //     closeArtworkModals()\r\n  //   }\r\n  // })\r\n})\r\n\r\n/**\r\n * @watchers\r\n */\r\nwatch (() => $router.currentRoute.value.params.path, () => {\r\n  // close modal on changing route or going back to previous page\r\n  closeArtworkModals()\r\n\r\n  // close collection selection modal\r\n  useModal().closeModal('feed-collection-selection-modal')\r\n})\r\n\r\n/**\r\n * @methods\r\n */\r\nconst options = ref({\r\n  explicitMode: undefined,\r\n  pagination: {\r\n    page: 0,\r\n    perPage: 10\r\n  }\r\n})\r\n\r\n/** Fetch / inifinite load */\r\nconst feeds = ref([])\r\nconst fetch = async ({ loaded }) => {\r\n  const [data, error] = await feedApi.getChronologicalFeeds({\r\n    explicitMode: options.value.explicitMode,\r\n    pagination: {\r\n      page: options.value.pagination.page,\r\n      perPage: options.value.pagination.perPage\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    // todo: handle error\r\n  }\r\n\r\n  options.value.pagination.page += 1\r\n\r\n  for (let feedIdx = 0; feedIdx < data.feeds.length; feedIdx++) {\r\n    const feed = data.feeds[feedIdx]\r\n\r\n    // collect liked feed IDs\r\n    if (feed.liked) {\r\n      if (feed.type === 'artwork') {\r\n        likedIds.value.push('a-' + feed.id)\r\n      } else {\r\n        likedIds.value.push('f-' + feed.id)\r\n      }\r\n    }\r\n\r\n    feed.images = []\r\n    feed.apply_explicit_filter = false\r\n    if (feed.type === 'artwork' || (feed.type === 'feed' && feed.artwork_share_info != null)) {\r\n      // collect to saved IDs\r\n      if (feed.type === 'artwork') {\r\n        if (feed.saved) {\r\n          savedIds.value.push(feed.id)\r\n        }\r\n      }\r\n\r\n      // collect images and transform to readable url to render in image list\r\n      for (let assetIdx = 0; assetIdx < feed.artwork_assets.length; assetIdx++) {\r\n        if (assetIdx <= 3) {\r\n          const imageUrl = await generateArtworkThumb(feed.artwork_assets[assetIdx].bucket, feed.artwork_assets[assetIdx].filename, 'feed')\r\n          feed.images.push(imageUrl)\r\n        }\r\n      }\r\n\r\n      // apply explicit alert if user doesn't activated explicit content in user settings\r\n      if (feed.artwork_share_info != null && ((!auth.loggedIn && feed.artwork_share_info.is_explicit) || (feed.artwork_share_info.is_explicit && !auth.user.user_settings.show_explicit))) {\r\n        feed.apply_explicit_filter = true\r\n      }\r\n    }\r\n\r\n    // finally, push it to feeds array\r\n    feeds.value.push(feed)\r\n  }\r\n\r\n  loaded(data.feeds.length, options.value.pagination.perPage)\r\n}\r\n\r\n/** Modal view */\r\nconst chronologicalModalViewRef = ref(null)\r\nconst view = (workId, isExplicitFilterApplied, feedIdx) => {\r\n  if (isExplicitFilterApplied) {\r\n    feeds.value[feedIdx].apply_explicit_filter = false\r\n  } else {\r\n    chronologicalModalViewRef.value.view(workId)\r\n\r\n    useModal().openModal('chronological-modal')\r\n  }\r\n}\r\n\r\nconst chronologicalFeedModalViewRef = ref(null)\r\nconst viewFeed = (feedId) => {\r\n  chronologicalFeedModalViewRef.value.view(feedId)\r\n\r\n  useModal().openModal('chronological-feed-modal')\r\n}\r\n\r\nconst readMore = (description, workId, selectorElId, descriptionElid) => {\r\n  useReadMore().readMore(description, workId, selectorElId, descriptionElid)\r\n}\r\n\r\nconst copied = ref(false)\r\nlet splashInterval\r\nconst copyLink = (link) => {\r\n  const source = ref(runtimeConfig.public.appUrl + link)\r\n  const { copy } = useClipboard({ source })\r\n  copy()\r\n\r\n  // show splash notification\r\n  useSplash().splash(splashInterval, copied, 'copy-alert')\r\n}\r\n\r\n// save function\r\nconst savedIds = ref([])\r\n\r\n// like function\r\nconst likedIds = ref([])\r\nconst like = async (id, type) => {\r\n  const likedFeedId = parseInt(id.split('-')[1])\r\n  let success = false\r\n\r\n  if (type === 'artwork') {\r\n    const [likeSuccess, error] = await artworkApi.like({\r\n      workId: likedFeedId\r\n    })\r\n\r\n    success = likeSuccess\r\n  } else if (type === 'feed') {\r\n    const [likeSuccess, error] = await feedApi.like({\r\n      feedId: likedFeedId\r\n    })\r\n\r\n    success = likeSuccess\r\n  }\r\n  \r\n  if (success) {\r\n    likedIds.value.push(id)\r\n    \r\n    // animate\r\n    const likeButton = document.getElementById(`feed-like-button-${type}-${likedFeedId}`)\r\n    likeButton.classList.add('animate-bounce')\r\n    setInterval(() => {\r\n      likeButton.classList.remove('animate-bounce')\r\n    }, 2500)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\nconst unlike = async (id, type) => {\r\n  const unlikedFeedId = parseInt(id.split('-')[1])\r\n  let success = false\r\n\r\n  if (type === 'artwork') {\r\n    const [unlikeSuccess, error] = await artworkApi.unlike({\r\n      workId: unlikedFeedId\r\n    })\r\n\r\n    success = unlikeSuccess\r\n  } else if (type === 'feed') {\r\n    const [unlikeSuccess, error] = await feedApi.unlike({\r\n      feedId: unlikedFeedId\r\n    })\r\n\r\n    success = unlikeSuccess\r\n  }\r\n  \r\n  if (success) {\r\n    const indexOfIdToRemove = likedIds.value.indexOf(id)\r\n    likedIds.value.splice(indexOfIdToRemove, 1)\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\nconst closeArtworkModals = () => {\r\n  useModal().closeModal('chronological-modal')\r\n  useModal().closeModal('chronological-feed-modal')\r\n}\r\n\r\n/** \r\n * ====================================================================================================================\r\n * COLLECTIONS\r\n * ====================================================================================================================\r\n*/\r\n/**\r\n * Show collection selection modal\r\n * When triggering this action it will automatically fetch where the item were saved, and\r\n * automatically select the selected collections.\r\n */\r\nconst collectionSelectionModalRef = ref(null)\r\nconst collectionWorkId = ref(0)\r\nconst showCollectionSelectionModal = (workId) => {\r\n  collectionWorkId.value = workId\r\n\r\n  useModal().openModal('feed-collection-selection-modal')\r\n  collectionSelectionModalRef.value.fetchCollection()\r\n  collectionSelectionModalRef.value.fetchCurrentSaved()\r\n}\r\n\r\n/**\r\n * This method will be triggered via event handling called `@save` on component `ManageSave` \r\n * once the user selects a collection and clicks the save button, and it will automatically close \r\n * the modal and update the collection selection.\r\n */\r\nconst save = (unsaved) => {\r\n  if (unsaved) {\r\n    const indexOfIdToRemove = savedIds.value.indexOf(collectionWorkId.value)\r\n    savedIds.value.splice(indexOfIdToRemove, 1)\r\n  } else {\r\n    savedIds.value.push(collectionWorkId.value)\r\n  }\r\n\r\n  // animate\r\n  useBounceAnimation().animate('save-to-collection-button-' + collectionWorkId.value)\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\n.user-info {\r\n  @apply flex flex-row;\r\n\r\n  .avatar {\r\n    @apply mr-3 w-10 h-10 rounded-md;\r\n  }\r\n\r\n  .name {\r\n    .fullname {\r\n      @apply text-tiny font-bold;\r\n    }\r\n  }\r\n}\r\n\r\n.interactions {\r\n  @apply flex flex-row justify-between mb-6;\r\n\r\n  .reaction-counters {\r\n    .counter {\r\n      @apply mr-3 whitespace-nowrap;\r\n\r\n      .icon {\r\n        @apply mr-1 text-lg text-gray-400 align-middle transition-all hover:text-gray-400;\r\n      }\r\n\r\n      span {\r\n        @apply align-middle;\r\n      }\r\n    }\r\n  }\r\n\r\n  .reactions {\r\n    @apply flex flex-row;\r\n\r\n    span {\r\n      @apply ml-3 whitespace-nowrap;\r\n\r\n      .icon {\r\n        @apply ml-1 text-xl align-middle transition-all cursor-pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.info {\r\n  @apply mb-4;\r\n  \r\n  .creator-publish {\r\n    @apply flex flex-row justify-between mb-2 align-middle;\r\n  }\r\n}\r\n.comments {\r\n  @apply mt-4;\r\n\r\n  .comment-box {\r\n    @apply mb-6;\r\n\r\n    textarea {\r\n      @apply mt-0 mb-0 w-full form-input input;\r\n    }\r\n\r\n    button {\r\n      @apply w-full font-bold primary-button;\r\n    }\r\n  }\r\n\r\n  .comment-content {\r\n    .comment-order {\r\n      @apply flex justify-end mb-4 w-full;\r\n\r\n      button {\r\n        @apply py-2 px-3 underline rounded-sm cursor-pointer;\r\n      }\r\n    }\r\n\r\n    .comment-item {\r\n      @apply mb-4;\r\n\r\n      .comment-time {\r\n        @apply italic;\r\n        color: var(--link);\r\n      }\r\n\r\n      .reactions {\r\n        @apply flex justify-end;\r\n\r\n        .reaction {\r\n          @apply ml-3 whitespace-nowrap;\r\n\r\n          .icon {\r\n            @apply mr-1 align-middle transition-all cursor-pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.option {\r\n  @apply inline relative z-10 justify-end;\r\n\r\n  .thumbnail {\r\n    @apply transition-all cursor-pointer icon-color focus:outline-none;\r\n\r\n    img {\r\n      @apply object-cover w-9 h-9 rounded-md shadow-lg;\r\n    }\r\n  }\r\n\r\n  .option-dropdown {\r\n    @apply flex invisible z-20 flex-col opacity-0 transition-all duration-300 transform origin-top-right scale-95;\r\n\r\n    .toggler {\r\n      @apply absolute right-0 z-20 mt-2 rounded-md shadow-lg origin-top-right outline-none theme-color;\r\n\r\n      .menu-wrapper {\r\n        @apply p-1 rounded-md theme-color;\r\n\r\n        .menu {\r\n          @apply flex z-50 flex-row py-3 px-4 mx-auto w-full capitalize rounded-md cursor-pointer;\r\n\r\n          .icon {\r\n            @apply mr-2;\r\n          }\r\n\r\n          &:hover {\r\n            @apply text-white;\r\n            background: var(--button);\r\n            border-color: var(--button);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"names":["_cache","useHead","useI18n","auth","useAuthStore","useImage","oApiConfiguration","fetchOptions","useApiFetch","artworkApi","useArtwork","feedApi","useFeed","runtimeConfig","useRuntimeConfig","router","useRouter","$router","useNuxtApp","onBeforeMount","onMounted","watch","closeArtworkModals","useModal","ref","feeds","chronologicalModalViewRef","view","workId","isExplicitFilterApplied","feedIdx","chronologicalFeedModalViewRef","viewFeed","feedId","readMore","description","selectorElId","descriptionElid","useReadMore","copied","splashInterval","copyLink","link","source","copy","useClipboard","useSplash","savedIds","likedIds","like","id","type","likedFeedId","success","likeSuccess","error","likeButton","unlike","unlikedFeedId","unlikeSuccess","indexOfIdToRemove","collectionSelectionModalRef","collectionWorkId","showCollectionSelectionModal","save","unsaved","useBounceAnimation"],"mappings":"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"}
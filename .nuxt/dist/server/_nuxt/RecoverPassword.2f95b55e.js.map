{"version":3,"file":"RecoverPassword.2f95b55e.js","sources":["../../../../components/user/account/RecoverPassword.vue"],"sourcesContent":["<template>\r\n  <Layout \r\n    :with-footer=\"false\" \r\n    :hide-side=\"true\"\r\n  >\r\n    <div class=\"w-1/3 mx-auto rounded p-2 pt-4\">\r\n      <div class=\"\">\r\n        <div v-if=\"!showSuccess\" class=\"text-base mb-2\">\r\n          {{ $t('accountRecovery.resetPassword') }}\r\n        </div>\r\n        \r\n        <!-- VV -->\r\n      </div>\r\n    </div>\r\n  </Layout>\r\n</template>\r\n\r\n<script setup>\r\n// components\r\nimport Layout from '~/components/layouts/Layout.vue'\r\n\r\n// API\r\nimport {\r\n  UserForgotPasswordApi\r\n} from '~/api/openapi/api'\r\n\r\nconst { $router } = useNuxtApp()\r\nconst { iv, content } = $router.currentRoute.value.params.path\r\n\r\n// composables\r\nconst { oApiConfiguration } = useApiFetch()\r\n\r\nonMounted (() => {\r\n  checkTokenValidity()\r\n})\r\n\r\nconst checkTokenValidity = async () => {\r\n  try {\r\n    const { data } = await new UserForgotPasswordApi(oApiConfiguration)\r\n      .checkResetPasswordTokenValidity(iv, content)\r\n\r\n    if (!data.valid) {\r\n      $router.push('/')\r\n    }\r\n  } catch (error) {\r\n    $router.push('/')\r\n  }\r\n}\r\n\r\nconst newPassword = ref('')\r\nconst reNewPassword = ref('')\r\n\r\nconst showErrorMessage = ref(false)\r\nconst errorMessage = ref('')\r\nconst showSuccess = ref(false)\r\nconst reset = async () => {\r\n  showSuccess.value = false\r\n  showErrorMessage.value = false\r\n\r\n  await new UserForgotPasswordApi(oApiConfiguration)\r\n    .recoverChangePassword({\r\n      iv,\r\n      content,\r\n      new_password: newPassword.value\r\n    })\r\n    .then(({ success, message }) => {\r\n      if (success) {\r\n        showSuccess.value = true\r\n      } else {\r\n        showError(message)\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      error.text().then((err) => {\r\n        const { message } = JSON.parse(err)\r\n        showError(message)\r\n      })\r\n    })\r\n}\r\n\r\nconst showError = (err) => {\r\n  showErrorMessage.value = true\r\n  errorMessage.value = err\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n</style>\r\n"],"names":["$router","useNuxtApp","iv","content","oApiConfiguration","useApiFetch","onMounted","checkTokenValidity","data","UserForgotPasswordApi","ref","showSuccess"],"mappings":"keA0BA,KAAA,CAAA,QAAAA,CAAA,EAAAC,EAAA,EACA,CAAA,GAAAC,EAAA,QAAAC,GAAAH,EAAA,aAAA,MAAA,OAAA,KAGA,CAAA,kBAAAI,CAAA,EAAAC,EAAA,EAEAC,EAAA,IAAA,CACAC,EAAA,CACA,CAAA,EAEA,MAAAA,EAAA,SAAA,CACA,GAAA,CACA,KAAA,CAAA,KAAAC,CAAA,EAAA,MAAA,IAAAC,EAAAL,CAAA,EACA,gCAAAF,EAAAC,CAAA,EAEAK,EAAA,OACAR,EAAA,KAAA,GAAA,CAEA,MAAA,CACAA,EAAA,KAAA,GAAA,CACA,CACA,EAEAU,EAAA,EAAA,EACAA,EAAA,EAAA,EAEAA,EAAA,EAAA,EACAA,EAAA,EAAA,EACA,MAAAC,EAAAD,EAAA,EAAA"}
{"version":3,"file":"setting.18de8c5b.js","sources":["../../../../components/profile/settings/Information.vue","../../../../components/profile/settings/Social.vue","../../../../components/profile/settings/Settings.vue","../../../../pages/profile/setting.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex flex-col w-full\">\r\n    <!-- AVATAR FORM -->\r\n    <div class=\"mb-4 w-44\">\r\n      <label class=\"font-semibold\">{{ $t('profile.forms.update.avatar') }}</label>\r\n\r\n      <div class=\"mt-2\">\r\n        <!-- show current avatar when user doesn't pick new avatar file yet -->\r\n        <img v-show=\"!previewNewAvatar\" :src=\"avatarCoverUrl(auth.user.avatar_bucket, auth.user.avatar_filename)\" class=\"avatar\" @error=\"imageLoadError\">\r\n\r\n        <!-- display selected file everytime the user selected new file -->\r\n        <img v-show=\"previewNewAvatar\" :src=\"previewNewAvatar\" class=\"avatar\" :class=\"avatarFileTooLargeAlert || updateAvatarError ? 'border-2 border-red-400' : 'border-none'\">\r\n        \r\n        <!-- avatar file input -->\r\n        <input \r\n          id=\"inputAvatarFile\"\r\n          ref=\"selectedNewAvatarRef\"\r\n          type=\"file\"\r\n          accept=\"image/png, image/gif, image/jpeg\"\r\n          class=\"hidden\"\r\n          @change=\"previewAvatar\"\r\n        >\r\n        <button\r\n          id=\"selectNewAvatarButton\"\r\n          class=\"mt-2 w-full primary-button\"\r\n          @click=\"selectNewAvatarButton()\"\r\n        >\r\n          {{ $t('profile.forms.update.chooseNewAvatar') }}\r\n        </button>\r\n\r\n        <!-- submit button -->\r\n        <button \r\n          class=\"flex flex-row mt-2 w-full\"\r\n          :class=\"[selectedNewAvatarFile ? 'primary-button cursor-pointer' : 'disabled-button cursor-not-allowed', !changingAvatarLoading ? 'primary-button cursor-pointer' : 'disabled-button cursor-not-allowed']\"\r\n          @click=\"selectNewAvatarButton && !changingAvatarLoading ? updateAvatar() : null\"\r\n        >\r\n          <Spinner v-show=\"changingAvatarLoading\" class=\"mr-2\" />\r\n          {{ changingAvatarLoading ? $t('updating') : $t('update') }}\r\n        </button>\r\n\r\n        <!-- if selected file size is larger than accepted size -->\r\n        <div v-show=\"avatarFileTooLargeAlert\" class=\"mt-2 w-full text-center text-failure\">\r\n          {{ $t('profile.forms.update.fileTooLarge') }}\r\n          <br>\r\n          {{ $t('profile.forms.update.avatarMaxAllowedFileSize') }}\r\n        </div>\r\n\r\n        <div v-show=\"updateAvatarError != ''\" class=\"mt-2 w-full text-center text-failure\">\r\n          {{ updateAvatarError }}\r\n        </div>\r\n\r\n        <!-- on avatar successfully changed -->\r\n        <div v-show=\"avatarChanged\" class=\"mt-2 w-full text-center text-success\">\r\n          {{ $t('updated') }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mb-4 custom-divider\" />\r\n\r\n    <!-- COVER FORM -->\r\n    <div class=\"mb-4\">\r\n      <label class=\"font-semibold\">{{ $t('profile.forms.update.cover') }}</label>\r\n\r\n      <div class=\"mt-2\">\r\n        <img \r\n          v-show=\"!previewNewCover\"\r\n          :src=\"avatarCoverUrl(auth.user.cover_bucket, auth.user.cover_filename)\" \r\n          class=\"object-cover object-top w-full h-28 rounded-md md:h-48 lg:h-64 xl:h-72 unselectable\"\r\n          @error=\"defaultCoverImage\"\r\n        >\r\n        \r\n        <!-- display selected file everytime the user selected new file -->\r\n        <img \r\n          v-show=\"previewNewCover\"\r\n          :src=\"previewNewCover\"\r\n          class=\"object-cover object-top w-full h-28 rounded-md md:h-48 lg:h-64 xl:h-72 unselectable\"\r\n          :class=\"coverFileTooLargeAlert || updateCoverError ? 'border-2 border-red-400' : 'border-none'\"\r\n        >\r\n        \r\n        <!-- cover file input -->\r\n        <input\r\n          id=\"inputCoverFile\"\r\n          ref=\"selectedNewCoverRef\"\r\n          type=\"file\"\r\n          accept=\"image/png, image/gif, image/jpeg\"\r\n          class=\"hidden\"\r\n          @change=\"previewCover\"\r\n        >\r\n        <button\r\n          id=\"selectNewCoverButton\" \r\n          class=\"mt-2 w-full primary-button\"\r\n          @click=\"selectNewCoverButton()\" \r\n        >\r\n          {{ $t('profile.forms.update.chooseNewCover') }}\r\n        </button>\r\n\r\n        <!-- submit button -->\r\n        <div class=\"flex flex-row justify-end w-full\">\r\n          <button \r\n            class=\"flex flex-row mt-2 w-full md:w-auto\"\r\n            :class=\"[selectedNewCoverFile ? 'primary-button cursor-pointer' : 'disabled-button cursor-not-allowed', !changingCoverLoading ? 'primary-button cursor-pointer' : 'disabled-button cursor-not-allowed']\"\r\n            @click=\"selectNewCoverButton && !changingCoverLoading ? updateCover() : null\"\r\n          >\r\n            <Spinner v-show=\"changingCoverLoading\" class=\"mr-2\" />\r\n            {{ changingCoverLoading ? $t('updating') : $t('update') }}\r\n          </button>\r\n        </div>\r\n\r\n        <!-- if selected file size is larger than accepted size -->\r\n        <div v-show=\"coverFileTooLargeAlert\" class=\"mt-2 w-full text-center text-failure\">\r\n          {{ $t('profile.forms.update.fileTooLarge') }}\r\n          <br>\r\n          {{ $t('profile.forms.update.coverMaxAllowedFileSize') }}\r\n        </div>\r\n\r\n        <div v-show=\"updateCoverError != ''\" class=\"mt-2 w-full text-center text-failure\">\r\n          {{ updateCoverError }}\r\n        </div>\r\n\r\n        <!-- on cover successfully changed -->\r\n        <div v-show=\"coverChanged\" class=\"mt-2 w-full text-center text-success\">\r\n          {{ $t('updated') }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mb-4 custom-divider\" />\r\n\r\n    <!-- Part 1: Update profile basic information -->\r\n    <form\r\n      :id=\"basicInformationFormId\"\r\n      class=\"mb-4\"\r\n      @submit.prevent=\"update(basicInformationFormId)\"\r\n    >\r\n      <div class=\"input-block\">\r\n        <n-validate>\r\n          <label class=\"font-semibold\">{{ $t('profile.forms.update.name') }}</label>\r\n          <div class=\"field\">\r\n            <input \r\n              v-model=\"inputData.name\"\r\n              type=\"text\" \r\n              class=\"form-input input\"\r\n              :class=\"[{ 'pointer-events-none cursor-not-allowed': saving.basic.loading }]\"\r\n            >\r\n          </div>\r\n        </n-validate>\r\n      </div>\r\n\r\n      <div class=\"input-block\">\r\n        <n-validate>\r\n          <label class=\"font-semibold\">{{ $t('profile.forms.update.penName') }}</label>\r\n          <div class=\"field\">\r\n            <input \r\n              v-model=\"inputData.penName\"\r\n              type=\"text\" \r\n              maxlength=\"12\"\r\n              class=\"form-input input\"\r\n              :class=\"{ 'pointer-events-none cursor-not-allowed': saving.username.loading }\"\r\n              @input=\"checkPenNameAvailability()\"\r\n              @keydown.space.prevent\r\n            >\r\n            <div v-show=\"penNameUsedAlert\" class=\"input-error\">\r\n              {{ $t('profile.forms.update.penNameTaken') }}\r\n            </div>\r\n          </div>\r\n        </n-validate>\r\n      </div>\r\n\r\n      <div class=\"input-block\">\r\n        <label class=\"font-semibold\">{{ $t('profile.forms.update.gender') }}</label>\r\n        <div class=\"mb-4 field\">\r\n          <div class=\"flex flex-row p-1 w-full rounded-md cursor-pointer md:w-min theme-color\">\r\n            <div \r\n              class=\"flex flex-row justify-center py-2 px-3 w-full rounded-md parent-icon\"\r\n              :class=\"{ 'button-color text-white': inputData.gender === 'm' }\"\r\n              @click=\"inputData.gender = 'm'\"\r\n            >\r\n              {{ $t('male') }}\r\n            </div>\r\n            <div \r\n              class=\"flex flex-row justify-center py-2 px-3 w-full rounded-md parent-icon\"\r\n              :class=\"{ 'button-color text-white': inputData.gender === 'f' }\"\r\n              @click=\"inputData.gender = 'f'\"\r\n            >\r\n              {{ $t('female') }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"input-block\">\r\n        <n-validate>\r\n          <label class=\"font-semibold\">{{ $t('profile.forms.update.bio') }}</label>\r\n          <div class=\"mb-4 field\">\r\n            <client-only>\r\n              <VueEditor\r\n                v-model=\"inputData.bio\"\r\n                :editorToolbar=\"[\r\n                  [{ 'size': ['normal', 'large'] }],\r\n                  ['bold', 'italic', 'underline', 'strike'],\r\n                  ['link'],\r\n                  [{ 'color': [] }, { 'background': [] }],\r\n                  ['clean']\r\n                ]\"\r\n              />\r\n            </client-only>\r\n            <!-- <textarea \r\n              v-model=\"inputData.bio\" \r\n              class=\"mb-1 form-input input\"\r\n              :class=\"{ 'pointer-events-none cursor-not-allowed': saving.basic.loading }\"\r\n              rows=\"8\"\r\n              cols=\"0\"\r\n              data-gramm=\"false\"\r\n            /> -->\r\n          </div>\r\n        </n-validate>\r\n      </div>\r\n\r\n      <div class=\"input-block\">\r\n        <n-validate>\r\n          <label class=\"font-semibold\">{{ $t('profile.forms.update.location') }}</label>\r\n          <div class=\"field\">\r\n            <input \r\n              v-model=\"inputData.location\"\r\n              type=\"text\" \r\n              class=\"form-input input\"\r\n              :class=\"{ 'pointer-events-none cursor-not-allowed': saving.basic.loading }\"\r\n            >\r\n          </div>\r\n        </n-validate>\r\n      </div>\r\n\r\n      <!-- submit button -->\r\n      <div class=\"flex flex-row justify-between w-full\">\r\n        <div>\r\n          <span \r\n            v-show=\"saving.basic.loading || saving.basic.success\" \r\n            class=\"flex flex-row text-success\"\r\n          >\r\n            <Spinner v-show=\"saving.basic.loading\" class=\"mr-2\" />\r\n            {{ saving.basic.loading ? $t('updating') : $t('updated') }}\r\n          </span>\r\n        </div>\r\n        <button \r\n          type=\"submit\"\r\n          :class=\"[\r\n            'flex flex-row w-full md:w-auto',\r\n            saving.basic.buttonDisabled ? 'disabled-button' : 'primary-button'\r\n          ]\"\r\n        >\r\n          <Spinner v-show=\"saving.basic.loading\" class=\"mr-2\" />\r\n          {{ saving.basic.loading ? $t('updating') : $t('update') }}\r\n        </button>\r\n      </div>\r\n    </form>\r\n      \r\n    <div class=\"mb-4 custom-divider\" />\r\n\r\n    <!-- Part 2: Update profile username -->\r\n    <form \r\n      :id=\"changeUsernameFormId\"\r\n      @submit.prevent=\"changeUsername(changeUsernameFormId)\"\r\n    >\r\n      <div class=\"input-block\">\r\n        <n-validate\r\n          for=\"=username\"\r\n          :name=\"$t('profile.forms.update.username')\"\r\n        >\r\n          <label class=\"font-semibold\">{{ $t('profile.forms.update.username') }}</label>\r\n          <div class=\"field\">\r\n            <input \r\n              v-model=\"inputData.username\"\r\n              type=\"text\" \r\n              maxlength=\"12\"\r\n              :class=\"[\r\n                'form-input input',\r\n                { 'pointer-events-none cursor-not-allowed': saving.username.loading }\r\n              ]\"\r\n              rules=\"required|min:5\"\r\n              @input=\"checkUsernameAvailability()\"\r\n              @keydown.space.prevent\r\n            >\r\n            <!-- <div v-show=\"usernameUsedAlert\" class=\"pt-4 input-error\">\r\n              {{ $t('profile.forms.update.usernameTaken') }}\r\n            </div> -->\r\n          </div>\r\n        </n-validate>\r\n      </div>\r\n\r\n      <!-- submit button -->\r\n      <div class=\"flex flex-row justify-between w-full\" :class=\"{ 'cursor-not-allowed': usernameUsedAlert }\">\r\n        <div>\r\n          <span v-show=\"saving.username.loading || saving.username.success\" class=\"text-success\">\r\n            {{ saving.username.loading ? $t('profile.forms.update.changingYourUsername') : $t('profile.forms.update.usernameChanged') }}\r\n          </span>\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\"\r\n          :class=\"[\r\n            'w-full md:w-auto',\r\n            saving.username.buttonDisabled ? 'disabled-button' : 'primary-button'\r\n          ]\"\r\n        >\r\n          <Spinner v-show=\"saving.username.loading || saving.username.checkingValidity\" class=\"mr-2\" />\r\n          \r\n          <span v-show=\"!saving.username.checkingValidity\">{{ saving.username.loading ? $t('profile.forms.update.changingYourUsername') : $t('profile.forms.update.changeUsername') }}</span>\r\n          <span v-show=\"saving.username.checkingValidity\">Checking..</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from 'axios'\r\nimport { debounce } from 'vue-debounce'\r\nimport { useI18n } from 'vue-i18n'\r\n\r\n// vue3-editor\r\nimport { VueEditor } from 'vue3-editor'\r\n\r\n// stores\r\nimport useAuthStore from '@/stores/auth.store'\r\n\r\n// components\r\nimport Spinner from '~/components/globals/Spinner.vue'\r\n\r\n// composables\r\nimport useUser from '~/composables/users/useUser'\r\n\r\n// stores\r\nconst runtimeConfig = useRuntimeConfig()\r\nconst auth = useAuthStore()\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst userApi = useUser(oApiConfiguration, fetchOptions())\r\n\r\nconst { $router } = useNuxtApp()\r\nconst { t } = useI18n()\r\n\r\nonBeforeMount (() => {\r\n  if (!auth.loggedIn) {\r\n    $router.push('/')\r\n  }\r\n})\r\n\r\nonMounted (() => {\r\n  fetchUserInfo()\r\n})\r\n\r\n// \r\nconst inputData = ref({\r\n  name: '',\r\n  username: '',\r\n  penName: '',\r\n  bio: '',\r\n  gender: 'm',\r\n  location: ''\r\n})\r\nconst current = ref({\r\n  username: '',\r\n  penName: ''\r\n})\r\nconst fetchUserInfo = async () => {\r\n  if (auth.loggedIn) {\r\n    const [data, error] = await userApi.getInfo(auth.user.id)\r\n\r\n    if (error) {\r\n      // todo: handle error\r\n    } else {\r\n      inputData.value.name = data.name\r\n\r\n      inputData.value.username = data.username\r\n      current.value.username = data.username\r\n\r\n      inputData.value.penName = data.pen_name\r\n      current.value.penName = data.pen_name\r\n\r\n      inputData.value.bio = data.bio\r\n      inputData.value.gender = data.gender\r\n      inputData.value.location = data.location\r\n    }\r\n  } else {\r\n    // todo: handle unauthenticated user\r\n  }\r\n}\r\n\r\nconst saving = ref({\r\n  basic: {\r\n    loading: false,\r\n    success: false,\r\n    buttonDisabled: false,\r\n    checkingValidity: false\r\n  },\r\n  username: {\r\n    loading: false,\r\n    success: false,\r\n    buttonDisabled: true,\r\n    checkingValidity: false\r\n  }\r\n})\r\n\r\nconst penNameUsedAlert = ref(false)\r\nconst checkPenNameAvailability = async () => {\r\n  if (inputData.value.penName === '') {\r\n    penNameUsedAlert.value = false\r\n    saving.value.basic.buttonDisabled = true\r\n    saving.value.basic.checkingValidity = false\r\n  }\r\n\r\n  if (inputData.value.penName.length >= 4 && inputData.value.penName.length <= 12) {\r\n    saving.value.basic.buttonDisabled = true\r\n    saving.value.basic.checkingValidity = true\r\n\r\n    await debounce(async (_) => {\r\n      if (inputData.value.penName === current.value.penName) {\r\n        penNameUsedAlert.value = false\r\n        saving.value.basic.buttonDisabled = false\r\n        saving.value.basic.checkingValidity = false\r\n      } else {\r\n        const [result, error] = await userApi.checkPenNameAvailability(inputData.value.penName)\r\n\r\n        if (!result && error && auth.user.pen_name !== inputData.value.penName) {\r\n          penNameUsedAlert.value = true\r\n          saving.value.basic.buttonDisabled = true\r\n          saving.value.basic.checkingValidity = false\r\n        } else {\r\n          penNameUsedAlert.value = false\r\n          saving.value.basic.buttonDisabled = false\r\n          saving.value.basic.checkingValidity = false\r\n        }\r\n      }\r\n    }, 700)()\r\n  } else {\r\n    penNameUsedAlert.value = false\r\n  }\r\n}\r\n\r\n/** Save changes */\r\nconst basicInformationFormId = 'basic-information-form'\r\nconst update = async () => {\r\n  useValidator().validate(basicInformationFormId, t)\r\n\r\n  if (!penNameUsedAlert.value) {\r\n    saving.value.basic.loading = true\r\n  \r\n    const [success, error] = await userApi.updateInfo({\r\n      userId: auth.user.id,\r\n      name: inputData.value.name,\r\n      gender: inputData.value.gender,\r\n      bio: inputData.value.bio,\r\n      location: inputData.value.location,\r\n      penName: inputData.value.penName\r\n    })\r\n\r\n    if (!success && error) {\r\n      saving.value.basic.loading = false\r\n      // todo: handle error\r\n    } else {\r\n      saving.value.basic.success = true\r\n    }\r\n\r\n    saving.value.basic.loading = false\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\n/** Form 2: Username */\r\nconst usernameUsedAlert = ref(false)\r\nconst checkUsernameAvailability = async () => {\r\n  if (inputData.value.username === '') {\r\n    usernameUsedAlert.value = false\r\n    saving.value.username.buttonDisabled = true\r\n    saving.value.username.checkingValidity = false\r\n  }\r\n\r\n  if (inputData.value.username.length >= 4 && inputData.value.username.length <= 12) {\r\n    saving.value.username.buttonDisabled = true\r\n    saving.value.username.checkingValidity = true\r\n\r\n    await debounce(async (_) => {\r\n      if (inputData.value.username === current.value.username) {\r\n        usernameUsedAlert.value = false\r\n        saving.value.username.buttonDisabled = false\r\n        saving.value.username.checkingValidity = false\r\n      } else {\r\n        const [result, error] = await userApi.checkUsernameAvailability(inputData.value.username)\r\n\r\n        if (!result && error) {\r\n          usernameUsedAlert.value = true\r\n          saving.value.username.buttonDisabled = true\r\n          saving.value.username.checkingValidity = false\r\n        } else {\r\n          usernameUsedAlert.value = false\r\n          saving.value.username.buttonDisabled = false\r\n          saving.value.username.checkingValidity = false\r\n        }\r\n      }\r\n    }, 500)()\r\n  } else {\r\n    usernameUsedAlert.value = false\r\n  }\r\n}\r\n\r\nconst changeUsernameFormId = 'change-username-form'\r\nconst changeUsername = async () => {\r\n  const v = useValidator().validate(changeUsernameFormId, t)\r\n\r\n  if (!usernameUsedAlert.value) {\r\n    saving.value.username.loading = true\r\n    \r\n    const [success, error] = await userApi.changeUsername(inputData.value.username)\r\n\r\n    if (!success && error) {\r\n      saving.value.username.loading = false\r\n      // todo: handle error\r\n    } else {\r\n      saving.value.username.success = true\r\n    }\r\n\r\n    saving.value.username.loading = false\r\n  } else {\r\n    // todo: handle error\r\n  }\r\n}\r\n\r\n/**\r\n * UPDATE AVATAR\r\n */\r\n// open file selector dialog by firing file input click\r\nconst selectNewAvatarButton = () => {\r\n  const inputAvatarFileEl = document.getElementById('inputAvatarFile')\r\n  inputAvatarFileEl.click()\r\n}\r\n\r\n// preview selected avatar\r\nconst selectedNewAvatarFile = ref('')\r\nconst previewNewAvatar = ref('')\r\nconst previewAvatar = (e) => {\r\n  const file = e.target.files[0]\r\n  previewNewAvatar.value = URL.createObjectURL(file)\r\n  selectedNewAvatarFile.value = file\r\n}\r\n\r\nconst changingAvatarLoading = ref(false)\r\nconst avatarChanged = ref(false)\r\nconst avatarFileTooLargeAlert = ref(false)\r\nconst selectedNewAvatarRef = ref(null)\r\nconst updateAvatarError = ref('')\r\nconst updateAvatar = async () => {\r\n  if (selectedNewAvatarFile.value) {\r\n    avatarChanged.value = false\r\n    changingAvatarLoading.value = true\r\n    avatarFileTooLargeAlert.value = false\r\n    updateAvatarError.value = ''\r\n\r\n    // get file\r\n    const file = selectedNewAvatarFile.value\r\n\r\n    // prepare to upload\r\n    const avatarFormData = new FormData()\r\n    avatarFormData.append('avatar', file)\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        runtimeConfig.public.apiUrl + '/user/update/avatar',\r\n        avatarFormData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Authorization: `Bearer ${auth.a4ht0jen}`\r\n          }\r\n        }\r\n      )\r\n\r\n      avatarChanged.value = true\r\n    } catch (error) {\r\n      const errorResponse = error.response\r\n\r\n      if (errorResponse.data.error === 'File too large') {\r\n        avatarFileTooLargeAlert.value = true\r\n      } else {\r\n        updateAvatarError.value = errorResponse.data.message\r\n      }\r\n    }\r\n\r\n    changingAvatarLoading.value = false\r\n  } else {\r\n    // todo\r\n  }\r\n}\r\n\r\n/**\r\n * UPDATE Cover\r\n */\r\n// open file selector dialog by firing file input click\r\nconst selectNewCoverButton = () => {\r\n  const inputCoverFileEl = document.getElementById('inputCoverFile')\r\n  inputCoverFileEl.click()\r\n}\r\n\r\n// preview selected cover\r\nconst selectedNewCoverFile = ref('')\r\nconst previewNewCover = ref('')\r\nconst previewCover = (e) => {\r\n  const file = e.target.files[0]\r\n  previewNewCover.value = URL.createObjectURL(file)\r\n  selectedNewCoverFile.value = file\r\n}\r\n\r\nconst changingCoverLoading = ref(false)\r\nconst coverChanged = ref(false)\r\nconst coverFileTooLargeAlert = ref(false)\r\nconst selectedNewCoverRef = ref(null)\r\nconst updateCoverError = ref('')\r\nconst updateCover = async () => {\r\n  if (selectedNewCoverFile.value) {\r\n    coverChanged.value = false\r\n    changingCoverLoading.value = true\r\n    coverFileTooLargeAlert.value = false\r\n    updateCoverError.value = ''\r\n\r\n    // get file\r\n    const file = selectedNewCoverFile.value\r\n\r\n    // prepare to upload\r\n    const coverFormData = new FormData()\r\n    coverFormData.append('cover', file)\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        runtimeConfig.public.apiUrl + '/user/update/cover',\r\n        coverFormData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Authorization: `Bearer ${auth.a4ht0jen}`\r\n          }\r\n        }\r\n      )\r\n\r\n      coverChanged.value = true\r\n    } catch (error) {\r\n      const errorResponse = error.response\r\n\r\n      if (errorResponse.data.error === 'File too large') {\r\n        coverFileTooLargeAlert.value = true\r\n      } else {\r\n        updateCoverError.value = errorResponse.data.message\r\n      }\r\n    }\r\n\r\n    changingCoverLoading.value = false\r\n  } else {\r\n    // todo\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\nform {\r\n  .input-block {\r\n    @apply mb-2;\r\n\r\n    .field {\r\n      @apply mt-2;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n@import '~/assets/css/tailwind.scss';\r\n\r\n.avatar {\r\n  @apply object-cover rounded-md;\r\n  aspect-ratio: 1/1;\r\n}\r\n\r\n#profile-pic-demo .drop-help-text {\r\n  display: none;\r\n}\r\n#profile-pic-demo .is-drag-over .drop-help-text {\r\n  display: block;\r\n}\r\n#profile-pic-demo .profile-pic-upload-block {\r\n  padding-top: 0;\r\n}\r\n#profile-pic-demo .vue-file-agent {\r\n  @apply rounded-md text-center w-full;\r\n  float: left;\r\n  margin: 0 0 0 0;\r\n  border: 0;\r\n  box-shadow: none;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"w-full\">\r\n    <!-- Part 1: Update profile socials information -->\r\n    <form\r\n      :id=\"formId\"\r\n      @submit.prevent=\"update(formId)\"\r\n    >\r\n      <n-validate class=\"input-block\">\r\n        <label class=\"font-semibold\">Facebook</label>\r\n        <div class=\"field\">\r\n          <div class=\"flex flex-row\">            \r\n            <Icon :name=\"'i-logos-facebook'\" />\r\n            <input \r\n              v-model=\"inputData.facebook\"\r\n              type=\"text\" \r\n              class=\"rounded-l-none form-input input\"\r\n              :class=\"[{ 'pointer-events-none cursor-not-allowed': saving.socials.loading }]\"\r\n              placeholder=\"Your facebook username (https://facebook.com/<your-username-here>)\"\r\n              @keydown.space.prevent\r\n            >\r\n          </div>\r\n        </div>\r\n      </n-validate>\r\n\r\n      <n-validate class=\"input-block\">\r\n        <label class=\"font-semibold\">Twitter</label>\r\n        <div class=\"field\">\r\n          <div class=\"flex flex-row\">            \r\n            <Icon :name=\"'i-logos-twitter'\" />\r\n            <input \r\n              v-model=\"inputData.twitter\"\r\n              type=\"text\" \r\n              class=\"rounded-l-none form-input input\"\r\n              :class=\"[{ 'pointer-events-none cursor-not-allowed': saving.socials.loading }]\"\r\n              placeholder=\"Your twitter username (twitter.com/<your-username-here>)\"\r\n              @keydown.space.prevent\r\n            >\r\n          </div>\r\n        </div>\r\n      </n-validate>\r\n\r\n      <n-validate class=\"input-block\">\r\n        <label class=\"font-semibold\">Instagram</label>\r\n        <div class=\"field\">\r\n          <div class=\"flex flex-row\">            \r\n            <Icon :name=\"'i-ion-logo-instagram'\" />\r\n            <input \r\n              v-model=\"inputData.instagram\"\r\n              type=\"text\" \r\n              class=\"rounded-l-none form-input input\"\r\n              :class=\"[{ 'pointer-events-none cursor-not-allowed': saving.socials.loading }]\"\r\n              placeholder=\"Your instagram username (instagram.com/<your-username-here>)\"\r\n              @keydown.space.prevent\r\n            >\r\n          </div>\r\n        </div>\r\n      </n-validate>\r\n\r\n      <n-validate class=\"input-block\">\r\n        <label class=\"font-semibold\">Patreon</label>\r\n        <div class=\"field\">\r\n          <div class=\"flex flex-row\">            \r\n            <Icon :name=\"'i-logos-patreon'\" />\r\n            <input \r\n              v-model=\"inputData.patreon\"\r\n              type=\"text\" \r\n              class=\"rounded-l-none form-input input\"\r\n              :class=\"[{ 'pointer-events-none cursor-not-allowed': saving.socials.loading }]\"\r\n              placeholder=\"Your patreon username (patreon.com/<your-username-here>)\"\r\n              @keydown.space.prevent\r\n            >\r\n          </div>\r\n        </div>\r\n      </n-validate>\r\n      \r\n      <n-validate class=\"input-block\">\r\n        <label class=\"font-semibold\">Youtube</label>\r\n        <div class=\"field\">\r\n          <div class=\"flex flex-row\">            \r\n            <Icon :name=\"'i-logos-youtube-icon'\" />\r\n            <input \r\n              v-model=\"inputData.youtube\"\r\n              type=\"text\" \r\n              class=\"rounded-l-none form-input input\"\r\n              :class=\"[{ 'pointer-events-none cursor-not-allowed': saving.socials.loading }]\"\r\n              placeholder=\"Your full youtube URL\"\r\n              @keydown.space.prevent\r\n            >\r\n          </div>\r\n        </div>\r\n      </n-validate>\r\n\r\n      <!-- submit button -->\r\n      <div class=\"flex flex-row justify-between mt-2 w-full\">\r\n        <div>\r\n          <span v-show=\"saving.socials.loading || saving.socials.success\" class=\"text-success\">\r\n            {{ saving.socials.loading ? $t('updating') : $t('updated') }}\r\n          </span>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          :class=\"[\r\n            'w-full md:w-auto',\r\n            saving.socials.buttonDisabled ? 'secondary-button pointer-events-none cursor-not-allowed' : 'primary-button cursor-pointer'\r\n          ]\"\r\n        >\r\n          {{ saving.socials.loading ? $t('updating') : $t('update') }}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useI18n } from 'vue-i18n'\r\n\r\n// stores\r\nimport useAuthStore from '@/stores/auth.store'\r\n\r\n// components\r\nimport Icon from '~/components/globals/Icon.vue'\r\n\r\n// composables\r\nimport useUser from '~/composables/users/useUser'\r\n\r\n// stores\r\nconst auth = useAuthStore()\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst userApi = useUser(oApiConfiguration, fetchOptions())\r\n\r\nconst { t } = useI18n()\r\nconst { $router } = useNuxtApp()\r\n\r\nonBeforeMount (() => {\r\n  if (!auth.loggedIn) {\r\n    $router.push('/')\r\n  }\r\n})\r\n\r\nonMounted (() => {\r\n  fetchUserInfo()\r\n})\r\n\r\n// \r\nconst fetchUserInfo = async () => {\r\n  if (auth.loggedIn) {\r\n    const [data, error] = await userApi.getInfo(auth.user.id)\r\n\r\n    if (error) {\r\n      // todo: handle error\r\n    } else {\r\n      inputData.value.facebook = data.user_socials.facebook\r\n      inputData.value.twitter = data.user_socials.twitter\r\n      inputData.value.instagram = data.user_socials.instagram\r\n      inputData.value.patreon = data.user_socials.patreon\r\n      inputData.value.youtube = data.user_socials.youtube\r\n    }\r\n  } else {\r\n    // todo: handle unauthenticated user\r\n  }\r\n}\r\n\r\nconst saving = ref({\r\n  socials: {\r\n    loading: false,\r\n    success: false,\r\n    buttonDisabled: false\r\n  }\r\n})\r\n\r\n/** Save changes */\r\nconst formId = 'update-social-form'\r\nconst inputData = ref({\r\n  facebook: '',\r\n  twitter: '',\r\n  instagram: '',\r\n  patreon: '',\r\n  youtube: ''\r\n})\r\nconst update = async () => {\r\n  useValidator().validate(formId, t)\r\n\r\n  saving.value.socials.loading = true\r\n  \r\n  const [success, error] = await userApi.updateSocials({\r\n    userId: auth.user.id,\r\n    facebook: inputData.value.facebook,\r\n    twitter: inputData.value.twitter,\r\n    instagram: inputData.value.instagram,\r\n    patreon: inputData.value.patreon,\r\n    youtube: inputData.value.youtube\r\n  })\r\n\r\n  if (!success && error) {\r\n    saving.value.socials.success = false\r\n    // todo: handle error\r\n  } else {\r\n    saving.value.socials.success = true\r\n  }\r\n\r\n  saving.value.socials.loading = false\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\nform {\r\n  .input-block {\r\n\r\n    .field {\r\n      @apply mt-2 mb-4 input-bg rounded-md;\r\n\r\n      .icon {\r\n        @apply ml-3 h-12 relative text-lg text-color-secondary -mb-2 rounded-l-md;\r\n      }\r\n\r\n      input {\r\n        @apply -mb-0;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"w-full\">\r\n    <!-- Part 1: Update profile settings/personalization -->\r\n    <form\r\n      :id=\"formId\"\r\n      @submit.prevent=\"update(formId)\"\r\n    >\r\n      <!-- explicit mode toggle -->\r\n      <div class=\"mb-2 input-block\">\r\n        <label class=\"font-semibold\">{{ $t('explicitContent') }}</label>\r\n        <div class=\"field\">\r\n          <label :for=\"!inputData.showExplicit ? 'checked' : 'unchecked'\" class=\"inline-flex items-center mt-2\">\r\n            <span class=\"relative cursor-pointer\" @click=\"inputData.showExplicit = !inputData.showExplicit\">\r\n              <span class=\"block w-10 h-6 bg-gray-300 rounded-full shadow-inner\" />\r\n              <span v-if=\"!inputData.showExplicit\" class=\"block absolute inset-y-0 left-0 mt-1 ml-1 w-4 h-4 rounded-full shadow transition-transform duration-300 ease-in-out button-color focus-within:shadow-outline\">\r\n                <input id=\"unchecked\" type=\"checkbox\" class=\"absolute w-0 h-0 opacity-0\">\r\n              </span>\r\n              \r\n              <span v-if=\"inputData.showExplicit\" class=\"block absolute inset-y-0 left-0 mt-1 ml-1 w-4 h-4 rounded-full shadow transition-transform duration-300 ease-in-out transform translate-x-full focus-within:shadow-outline button-color\">\r\n                <input id=\"checked\" type=\"checkbox\" class=\"absolute w-0 h-0 opacity-0\">\r\n              </span>\r\n            </span>\r\n            <span class=\"ml-2\">{{ $t('profile.forms.update.showExplicitContent') }}</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- submit button -->\r\n      <div class=\"flex flex-row justify-between w-full\">\r\n        <div>\r\n          <span v-show=\"saving.settings.loading || saving.settings.success\" class=\"text-success\">\r\n            {{ saving.settings.loading ? $t('updating') : $t('updated') }}\r\n          </span>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          :class=\"[\r\n            'w-full md:w-auto',\r\n            saving.settings.buttonDisabled ? 'secondary-button pointer-events-none cursor-not-allowed' : 'primary-button cursor-pointer'\r\n          ]\"\r\n        >\r\n          {{ saving.settings.loading ? $t('updating') : $t('update') }}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useI18n } from 'vue-i18n'\r\n\r\n// stores\r\nimport useAuthStore from '@/stores/auth.store'\r\n\r\n// composables\r\nimport useUser from '~/composables/users/useUser'\r\n\r\n// stores\r\nconst auth = useAuthStore()\r\n\r\n// composables\r\nconst { oApiConfiguration, fetchOptions } = useApiFetch()\r\nconst userApi = useUser(oApiConfiguration, fetchOptions())\r\n\r\nconst { $router } = useNuxtApp()\r\nconst { t } = useI18n()\r\n\r\nonBeforeMount (() => {\r\n  if (!auth.loggedIn) {\r\n    $router.push('/')\r\n  }\r\n})\r\n\r\nonMounted (() => {\r\n  fetchUserInfo()\r\n})\r\n\r\n// \r\nconst fetchUserInfo = async () => {\r\n  if (auth.loggedIn) {\r\n    const [data, error] = await userApi.getInfo(auth.user.id)\r\n\r\n    if (error) {\r\n      // todo: handle error\r\n    } else {\r\n      inputData.value.showExplicit = !!data.user_settings.show_explicit\r\n    }\r\n  } else {\r\n    // todo: handle unauthenticated user\r\n  }\r\n}\r\n\r\nconst saving = ref({\r\n  settings: {\r\n    loading: false,\r\n    success: false,\r\n    buttonDisabled: false\r\n  }\r\n})\r\n\r\n/** Save changes */\r\nconst formId = 'update-setting-form'\r\nconst inputData = ref({\r\n  showExplicit: false\r\n})\r\nconst update = async () => {\r\n  useValidator().validate(formId, t)\r\n\r\n  saving.value.settings.loading = true\r\n  \r\n  const [success, error] = await userApi.updateSettings({\r\n    userId: auth.user.id,\r\n    showExplicit: inputData.value.showExplicit\r\n  })\r\n\r\n  if (!success && error) {\r\n    saving.value.settings.success = false\r\n    // todo: handle error\r\n  } else {\r\n    saving.value.settings.success = true\r\n    \r\n    auth.user.user_settings.show_explicit = inputData.value.showExplicit ? 1 : 0\r\n  }\r\n\r\n  saving.value.settings.loading = false\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~/assets/css/tailwind.scss';\r\n\r\nform {\r\n  .input-block {\r\n\r\n    .field {\r\n      @apply mt-2 mb-4;\r\n\r\n      .icon {\r\n        @apply ml-3 h-10 relative text-lg text-color-secondary -mb-2 rounded-l-md;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <Layout \r\n    :hide-side=\"true\"\r\n    :with-footer=\"true\"\r\n    :no-right-side=\"true\"\r\n  >\r\n    <div class=\"flex flex-row w-full\">\r\n      <!-- tabs -->\r\n      <div class=\"mr-4 md:mr-6 lg:w-1/5\">\r\n        <div \r\n          class=\"flex flex-row py-3 px-4 mb-2 font-medium leading-5 rounded ring-offset-2 transition-all duration-200 cursor-pointer left-menu-link parent-icon theme-color hover:button hover:text-white\"\r\n          :class=\"{ 'button-color text-white': config.currentState === 'profile' }\"\r\n          @click=\"changeCurrentState('profile')\"\r\n        >\r\n          <Icon v-show=\"config.currentState === 'profile'\" :name=\"'i-fluent-person-32-regular'\" class=\"text-lg text-white lg:mr-2 hover:text-white\" />\r\n          <Icon v-show=\"config.currentState !== 'profile'\" :name=\"'i-fluent-person-32-regular'\" class=\"text-lg lg:mr-2 hover:text-white\" />\r\n\r\n          <span class=\"hidden-lg-flex\">Profile</span>\r\n        </div>\r\n        \r\n        <div \r\n          class=\"flex flex-row py-3 px-4 mb-2 font-medium leading-5 rounded ring-offset-2 transition-all duration-200 cursor-pointer left-menu-link parent-icon theme-color hover:button hover:text-white\"\r\n          :class=\"{ 'button-color text-white': config.currentState === 'social' }\"\r\n          @click=\"changeCurrentState('social')\"\r\n        >\r\n          <Icon v-show=\"config.currentState === 'social'\" :name=\"'i-ion-share-social-outline'\" class=\"text-lg text-white lg:mr-2 hover:text-white\" />\r\n          <Icon v-show=\"config.currentState !== 'social'\" :name=\"'i-ion-share-social-outline'\" class=\"text-lg lg:mr-2 hover:text-white\" />\r\n\r\n          <span class=\"hidden-lg-flex\">Social</span>\r\n        </div>\r\n        \r\n        <div \r\n          class=\"flex flex-row py-3 px-4 mb-2 font-medium leading-5 rounded ring-offset-2 transition-all duration-200 cursor-pointer left-menu-link parent-icon theme-color hover:button hover:text-white\"\r\n          :class=\"{ 'button-color text-white': config.currentState === 'settings' }\"\r\n          @click=\"changeCurrentState('settings')\"\r\n        >\r\n          <Icon v-show=\"config.currentState === 'settings'\" :name=\"'i-ph-gear-six'\" class=\"text-lg text-white lg:mr-2 hover:text-white\" />\r\n          <Icon v-show=\"config.currentState !== 'settings'\" :name=\"'i-ph-gear-six'\" class=\"text-lg lg:mr-2 hover:text-white\" />\r\n\r\n          <span class=\"hidden-lg-flex\">Settings</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- content -->\r\n      <div class=\"w-full\">\r\n        <Information \r\n          v-if=\"config.currentState === 'profile'\"\r\n        />\r\n\r\n        <Social \r\n          v-if=\"config.currentState === 'social'\"\r\n        />\r\n\r\n        <Settings \r\n          v-if=\"config.currentState === 'settings'\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </Layout>\r\n</template>\r\n\r\n<script setup>\r\n// components\r\nimport Layout from '~/components/layouts/Layout.vue'\r\nimport Icon from '~/components/globals/Icon.vue'\r\nimport Information from '~/components/profile/settings/Information.vue'\r\nimport Social from '~/components/profile/settings/Social.vue'\r\nimport Settings from '~/components/profile/settings/Settings.vue'\r\n\r\n/**\r\n * @meta\r\n */\r\nuseHead ({\r\n  title: useI18n().tl('meta.title.profile.settings')\r\n})\r\n\r\nconst config = ref({\r\n  currentState: 'profile'\r\n})\r\n\r\nconst changeCurrentState = (state) => {\r\n  config.value.currentState = state\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"names":["runtimeConfig","useRuntimeConfig","auth","useAuthStore","oApiConfiguration","fetchOptions","useApiFetch","userApi","useUser","$router","useNuxtApp","t","useI18n","onBeforeMount","onMounted","fetchUserInfo","inputData","ref","current","data","error","saving","penNameUsedAlert","checkPenNameAvailability","debounce","_","result","basicInformationFormId","update","useValidator","success","usernameUsedAlert","checkUsernameAvailability","changeUsernameFormId","changeUsername","selectNewAvatarButton","selectedNewAvatarFile","previewNewAvatar","previewAvatar","e","file","changingAvatarLoading","avatarChanged","avatarFileTooLargeAlert","selectedNewAvatarRef","updateAvatarError","updateAvatar","avatarFormData","response","axios","errorResponse","selectNewCoverButton","selectedNewCoverFile","previewNewCover","previewCover","changingCoverLoading","coverChanged","coverFileTooLargeAlert","selectedNewCoverRef","updateCoverError","updateCover","coverFormData","formId","useHead","config","changeCurrentState","state"],"mappings":"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"}
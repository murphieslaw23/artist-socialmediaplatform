import{B as x,e as m,f as y,R as f,a5 as b,a6 as q}from"./entry.6223ed1a.js";import{S as k}from"./Icon.afd4aa38.js";import{U as O}from"./user-counters-api.23acf138.js";const L=function(l){return{updateAvatarForm:async(e,a={})=>{const t="/user/update/avatar",r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...a},h={},d={},i=new FormData;e!==void 0&&i.append("avatar",e),h["Content-Type"]="multipart/form-data";const p=new URLSearchParams(r.search);for(const w in d)p.set(w,d[w]);for(const w in a.params)p.set(w,a.params[w]);r.search=new URLSearchParams(p).toString();let u=s&&s.headers?s.headers:{};return n.headers={...h,...u,...a.headers},n.data=i,{url:r.pathname+r.search+r.hash,options:n}},updateCoverForm:async(e,a={})=>{const t="/user/update/cover",r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...a},h={},d={},i=new FormData;e!==void 0&&i.append("cover",e),h["Content-Type"]="multipart/form-data";const p=new URLSearchParams(r.search);for(const w in d)p.set(w,d[w]);for(const w in a.params)p.set(w,a.params[w]);r.search=new URLSearchParams(p).toString();let u=s&&s.headers?s.headers:{};return n.headers={...h,...u,...a.headers},n.data=i,{url:r.pathname+r.search+r.hash,options:n}}}},A=function(l){return{async updateAvatarForm(e,a){const t=await L(l).updateAvatarForm(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}},async updateCoverForm(e,a){const t=await L(l).updateCoverForm(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}}}};class v extends x{async updateAvatarForm(e,a){return A(this.configuration).updateAvatarForm(e,a).then(t=>t(this.axios,this.basePath))}async updateCoverForm(e,a){return A(this.configuration).updateCoverForm(e,a).then(t=>t(this.axios,this.basePath))}}const g=function(l){return{countFollowers:async(e,a={})=>{if(e==null)throw new f("userId","Required parameter userId was null or undefined when calling countFollowers.");const t="/user/{user_id}/count/followers".replace("{user_id}",encodeURIComponent(String(e))),r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"GET",...s,...a},h={},d={},i=new URLSearchParams(r.search);for(const u in d)i.set(u,d[u]);for(const u in a.params)i.set(u,a.params[u]);r.search=new URLSearchParams(i).toString();let p=s&&s.headers?s.headers:{};return n.headers={...h,...p,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},countFollowings:async(e,a={})=>{if(e==null)throw new f("userId","Required parameter userId was null or undefined when calling countFollowings.");const t="/user/{user_id}/count/followings".replace("{user_id}",encodeURIComponent(String(e))),r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"GET",...s,...a},h={},d={},i=new URLSearchParams(r.search);for(const u in d)i.set(u,d[u]);for(const u in a.params)i.set(u,a.params[u]);r.search=new URLSearchParams(i).toString();let p=s&&s.headers?s.headers:{};return n.headers={...h,...p,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},followUser:async(e,a={})=>{if(e==null)throw new f("userIdToFollow","Required parameter userIdToFollow was null or undefined when calling followUser.");const t="/user/follows/follow/{userIdToFollow}".replace("{userIdToFollow}",encodeURIComponent(String(e))),r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...a},h={},d={},i=new URLSearchParams(r.search);for(const u in d)i.set(u,d[u]);for(const u in a.params)i.set(u,a.params[u]);r.search=new URLSearchParams(i).toString();let p=s&&s.headers?s.headers:{};return n.headers={...h,...p,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},followersList:async(e,a,t,r={})=>{if(e==null)throw new f("userId","Required parameter userId was null or undefined when calling followersList.");if(a==null)throw new f("page","Required parameter page was null or undefined when calling followersList.");if(t==null)throw new f("perPage","Required parameter perPage was null or undefined when calling followersList.");const s="/user/follows/followers/{userId}".replace("{userId}",encodeURIComponent(String(e))),n=new URL(s,"https://example.com");let h;l&&(h=l.baseOptions);const d={method:"GET",...h,...r},i={},p={};a!==void 0&&(p.page=a),t!==void 0&&(p.per_page=t);const u=new URLSearchParams(n.search);for(const U in p)u.set(U,p[U]);for(const U in r.params)u.set(U,r.params[U]);n.search=new URLSearchParams(u).toString();let w=h&&h.headers?h.headers:{};return d.headers={...i,...w,...r.headers},{url:n.pathname+n.search+n.hash,options:d}},followingList:async(e,a,t,r={})=>{if(e==null)throw new f("userId","Required parameter userId was null or undefined when calling followingList.");if(a==null)throw new f("page","Required parameter page was null or undefined when calling followingList.");if(t==null)throw new f("perPage","Required parameter perPage was null or undefined when calling followingList.");const s="/user/follows/following/{userId}".replace("{userId}",encodeURIComponent(String(e))),n=new URL(s,"https://example.com");let h;l&&(h=l.baseOptions);const d={method:"GET",...h,...r},i={},p={};a!==void 0&&(p.page=a),t!==void 0&&(p.per_page=t);const u=new URLSearchParams(n.search);for(const U in p)u.set(U,p[U]);for(const U in r.params)u.set(U,r.params[U]);n.search=new URLSearchParams(u).toString();let w=h&&h.headers?h.headers:{};return d.headers={...i,...w,...r.headers},{url:n.pathname+n.search+n.hash,options:d}},isFollowing:async(e,a={})=>{if(e==null)throw new f("userIdToCheck","Required parameter userIdToCheck was null or undefined when calling isFollowing.");const t="/user/follows/is-following/{userIdToCheck}".replace("{userIdToCheck}",encodeURIComponent(String(e))),r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"GET",...s,...a},h={},d={},i=new URLSearchParams(r.search);for(const u in d)i.set(u,d[u]);for(const u in a.params)i.set(u,a.params[u]);r.search=new URLSearchParams(i).toString();let p=s&&s.headers?s.headers:{};return n.headers={...h,...p,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},unfollowUser:async(e,a={})=>{if(e==null)throw new f("userIdToUnfollow","Required parameter userIdToUnfollow was null or undefined when calling unfollowUser.");const t="/user/follows/unfollow/{userIdToUnfollow}".replace("{userIdToUnfollow}",encodeURIComponent(String(e))),r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...a},h={},d={},i=new URLSearchParams(r.search);for(const u in d)i.set(u,d[u]);for(const u in a.params)i.set(u,a.params[u]);r.search=new URLSearchParams(i).toString();let p=s&&s.headers?s.headers:{};return n.headers={...h,...p,...a.headers},{url:r.pathname+r.search+r.hash,options:n}}}},P=function(l){return{async countFollowers(e,a){const t=await g(l).countFollowers(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}},async countFollowings(e,a){const t=await g(l).countFollowings(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}},async followUser(e,a){const t=await g(l).followUser(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}},async followersList(e,a,t,r){const s=await g(l).followersList(e,a,t,r);return(n=m,h=y)=>{const d={...s.options,url:h+s.url};return n.request(d)}},async followingList(e,a,t,r){const s=await g(l).followingList(e,a,t,r);return(n=m,h=y)=>{const d={...s.options,url:h+s.url};return n.request(d)}},async isFollowing(e,a){const t=await g(l).isFollowing(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}},async unfollowUser(e,a){const t=await g(l).unfollowUser(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}}}};class R extends x{async countFollowers(e,a){return P(this.configuration).countFollowers(e,a).then(t=>t(this.axios,this.basePath))}async countFollowings(e,a){return P(this.configuration).countFollowings(e,a).then(t=>t(this.axios,this.basePath))}async followUser(e,a){return P(this.configuration).followUser(e,a).then(t=>t(this.axios,this.basePath))}async followersList(e,a,t,r){return P(this.configuration).followersList(e,a,t,r).then(s=>s(this.axios,this.basePath))}async followingList(e,a,t,r){return P(this.configuration).followingList(e,a,t,r).then(s=>s(this.axios,this.basePath))}async isFollowing(e,a){return P(this.configuration).isFollowing(e,a).then(t=>t(this.axios,this.basePath))}async unfollowUser(e,a){return P(this.configuration).unfollowUser(e,a).then(t=>t(this.axios,this.basePath))}}const V=function(l){return{changeUsername:async(e,a={})=>{const t="/user/update/username",r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...a},h={},d={};h["Content-Type"]="application/json";const i=new URLSearchParams(r.search);for(const w in d)i.set(w,d[w]);for(const w in a.params)i.set(w,a.params[w]);r.search=new URLSearchParams(i).toString();let p=s&&s.headers?s.headers:{};n.headers={...h,...p,...a.headers};const u=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=u?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}},updateUserInfo:async(e,a={})=>{const t="/user/update/info",r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...a},h={},d={};h["Content-Type"]="application/json";const i=new URLSearchParams(r.search);for(const w in d)i.set(w,d[w]);for(const w in a.params)i.set(w,a.params[w]);r.search=new URLSearchParams(i).toString();let p=s&&s.headers?s.headers:{};n.headers={...h,...p,...a.headers};const u=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=u?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}},updateUserPreference:async(e,a={})=>{const t="/user/update/preference",r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...a},h={},d={};h["Content-Type"]="application/json";const i=new URLSearchParams(r.search);for(const w in d)i.set(w,d[w]);for(const w in a.params)i.set(w,a.params[w]);r.search=new URLSearchParams(i).toString();let p=s&&s.headers?s.headers:{};n.headers={...h,...p,...a.headers};const u=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=u?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}},updateUserSocial:async(e,a={})=>{const t="/user/update/social",r=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...a},h={},d={};h["Content-Type"]="application/json";const i=new URLSearchParams(r.search);for(const w in d)i.set(w,d[w]);for(const w in a.params)i.set(w,a.params[w]);r.search=new URLSearchParams(i).toString();let p=s&&s.headers?s.headers:{};n.headers={...h,...p,...a.headers};const u=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=u?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}}}},S=function(l){return{async changeUsername(e,a){const t=await V(l).changeUsername(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}},async updateUserInfo(e,a){const t=await V(l).updateUserInfo(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}},async updateUserPreference(e,a){const t=await V(l).updateUserPreference(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}},async updateUserSocial(e,a){const t=await V(l).updateUserSocial(e,a);return(r=m,s=y)=>{const n={...t.options,url:s+t.url};return r.request(n)}}}};class F extends x{async changeUsername(e,a){return S(this.configuration).changeUsername(e,a).then(t=>t(this.axios,this.basePath))}async updateUserInfo(e,a){return S(this.configuration).updateUserInfo(e,a).then(t=>t(this.axios,this.basePath))}async updateUserPreference(e,a){return S(this.configuration).updateUserPreference(e,a).then(t=>t(this.axios,this.basePath))}async updateUserSocial(e,a){return S(this.configuration).updateUserSocial(e,a).then(t=>t(this.axios,this.basePath))}}function $(l,e){return{checkUsernameAvailability:async c=>{try{const{data:o}=await new b(l).checkUsername({username:c});return o.success?[o.success,null]:[null,"Username is already taken"]}catch(o){return[null,o]}},checkPenNameAvailability:async c=>{try{const{data:o}=await new q(l).penNameCheck(c,e);return o.success?[o.success,null]:[null,"Pen name is already taken"]}catch(o){return[null,o]}},getInfo:async c=>{try{const{data:o}=await new q(l).getUserInfoById(c.toString(),e);return[o.data,null]}catch(o){return[null,o]}},getInfoByUsername:async c=>{try{const{data:o}=await new q(l).getUserInfoByUsername(c,e);return[o.data,null]}catch(o){return[null,o]}},searchUsers:async c=>{try{const{data:o}=await new k(l).searchUsers(c.keyword,c.pagination.page,c.pagination.perPage,e);return[o.data,null]}catch(o){return[null,o]}},updateInfo:async c=>{try{const{data:o}=await new F(l).updateUserInfo({id:c.userId,name:c.name,gender:c.gender,bio:c.bio,location:c.location,pen_name:c.penName},e);return[o.success,null]}catch(o){return[null,o]}},updateSocials:async c=>{try{const{data:o}=await new F(l).updateUserSocial({id:c.userId,facebook:c.facebook,twitter:c.twitter,instagram:c.instagram,patreon:c.patreon,youtube:c.youtube},e);return[o.success,null]}catch(o){return[null,o]}},updateSettings:async c=>{try{const{data:o}=await new F(l).updateUserPreference({id:c.userId,show_explicit:c.showExplicit?1:0},e);return[o.success,null]}catch(o){return[null,o]}},changeUsername:async c=>{try{const{data:o}=await new F(l).changeUsername({new_username:c},e);return[o.success,null]}catch(o){return[null,o]}},updateAvatar:async c=>{try{const{data:o}=await new v(l).updateAvatarForm(c,e);return[o.success,null]}catch(o){return[null,o]}},countFeeds:async c=>{try{const{data:o}=await new O(l).countUserFeeds(c,e);return[o.data.total,null]}catch(o){return[null,o]}},countArtworks:async c=>{try{const{data:o}=await new O(l).countUserArtworks(c,e);return[o.data.total,null]}catch(o){return[null,o]}},countFollowers:async c=>{try{const{data:o}=await new R(l).countFollowers(c);return[o.data.total,null]}catch(o){return[null,o]}},countFollowings:async c=>{try{const{data:o}=await new R(l).countFollowings(c);return[o.data.total,null]}catch(o){return[null,o]}},isFollowing:async c=>{try{const{data:o}=await new R(l).isFollowing(c,e);return[o.data,null]}catch(o){return[null,o]}},follow:async c=>{try{const{data:o}=await new R(l).followUser(c,e);return[o.success,null]}catch(o){return[null,o]}},unfollow:async c=>{try{const{data:o}=await new R(l).unfollowUser(c,e);return[o.success,null]}catch(o){return[null,o]}},getFollowerList:async c=>{try{const{data:o}=await new R(l).followersList(c.userId,c.pagination.page,c.pagination.perPage,e);return[o.data,null]}catch(o){return[null,o]}},getFollowingList:async c=>{try{const{data:o}=await new R(l).followingList(c.userId,c.pagination.page,c.pagination.perPage,e);return[o.data,null]}catch(o){return[null,o]}}}}export{$ as u};

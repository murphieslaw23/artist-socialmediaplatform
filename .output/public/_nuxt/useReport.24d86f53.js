import{B as O,h as w,i as y,R as m}from"./entry.e86746f3.js";const g=function(l){return{createNewReport:async(e,t={})=>{const n="/reports",o=new URL(n,"https://example.com");let s;l&&(s=l.baseOptions);const c={method:"POST",...s,...t},r={},a={};r["Content-Type"]="application/json";const p=new URLSearchParams(o.search);for(const i in a)p.set(i,a[i]);for(const i in t.params)p.set(i,t.params[i]);o.search=new URLSearchParams(p).toString();let u=s&&s.headers?s.headers:{};c.headers={...r,...u,...t.headers};const h=typeof e!="string"||c.headers["Content-Type"]==="application/json";return c.data=h?JSON.stringify(e!==void 0?e:{}):e||"",{url:o.pathname+o.search+o.hash,options:c}},getReportById:async(e,t={})=>{if(e==null)throw new m("reportId","Required parameter reportId was null or undefined when calling getReportById.");const n="/reports/{reportId}".replace("{reportId}",encodeURIComponent(String(e))),o=new URL(n,"https://example.com");let s;l&&(s=l.baseOptions);const c={method:"GET",...s,...t},r={},a={},p=new URLSearchParams(o.search);for(const h in a)p.set(h,a[h]);for(const h in t.params)p.set(h,t.params[h]);o.search=new URLSearchParams(p).toString();let u=s&&s.headers?s.headers:{};return c.headers={...r,...u,...t.headers},{url:o.pathname+o.search+o.hash,options:c}},getReportStatus:async(e,t,n={})=>{if(e==null)throw new m("type","Required parameter type was null or undefined when calling getReportStatus.");if(t==null)throw new m("postId","Required parameter postId was null or undefined when calling getReportStatus.");const o="/reports/status/{type}/{postId}".replace("{type}",encodeURIComponent(String(e))).replace("{postId}",encodeURIComponent(String(t))),s=new URL(o,"https://example.com");let c;l&&(c=l.baseOptions);const r={method:"GET",...c,...n},a={},p={},u=new URLSearchParams(s.search);for(const i in p)u.set(i,p[i]);for(const i in n.params)u.set(i,n.params[i]);s.search=new URLSearchParams(u).toString();let h=c&&c.headers?c.headers:{};return r.headers={...a,...h,...n.headers},{url:s.pathname+s.search+s.hash,options:r}},getReports:async(e,t,n,o,s,c,r,a={})=>{if(e==null)throw new m("page","Required parameter page was null or undefined when calling getReports.");if(t==null)throw new m("perPage","Required parameter perPage was null or undefined when calling getReports.");const p="/reports",u=new URL(p,"https://example.com");let h;l&&(h=l.baseOptions);const i={method:"GET",...h,...a},f={},d={};n!==void 0&&(d.status=n),o!==void 0&&(d.created_at_from=o),s!==void 0&&(d.created_at_to=s),c!==void 0&&(d.user_id=c),r!==void 0&&(d.reasons=r),e!==void 0&&(d.page=e),t!==void 0&&(d.per_page=t);const V=new URLSearchParams(u.search);for(const R in d)V.set(R,d[R]);for(const R in a.params)V.set(R,a.params[R]);u.search=new URLSearchParams(V).toString();let q=h&&h.headers?h.headers:{};return i.headers={...f,...q,...a.headers},{url:u.pathname+u.search+u.hash,options:i}},reviewReport:async(e,t={})=>{const n="/reports/review",o=new URL(n,"https://example.com");let s;l&&(s=l.baseOptions);const c={method:"POST",...s,...t},r={},a={};r["Content-Type"]="application/json";const p=new URLSearchParams(o.search);for(const i in a)p.set(i,a[i]);for(const i in t.params)p.set(i,t.params[i]);o.search=new URLSearchParams(p).toString();let u=s&&s.headers?s.headers:{};c.headers={...r,...u,...t.headers};const h=typeof e!="string"||c.headers["Content-Type"]==="application/json";return c.data=h?JSON.stringify(e!==void 0?e:{}):e||"",{url:o.pathname+o.search+o.hash,options:c}}}},P=function(l){return{async createNewReport(e,t){const n=await g(l).createNewReport(e,t);return(o=w,s=y)=>{const c={...n.options,url:s+n.url};return o.request(c)}},async getReportById(e,t){const n=await g(l).getReportById(e,t);return(o=w,s=y)=>{const c={...n.options,url:s+n.url};return o.request(c)}},async getReportStatus(e,t,n){const o=await g(l).getReportStatus(e,t,n);return(s=w,c=y)=>{const r={...o.options,url:c+o.url};return s.request(r)}},async getReports(e,t,n,o,s,c,r,a){const p=await g(l).getReports(e,t,n,o,s,c,r,a);return(u=w,h=y)=>{const i={...p.options,url:h+p.url};return u.request(i)}},async reviewReport(e,t){const n=await g(l).reviewReport(e,t);return(o=w,s=y)=>{const c={...n.options,url:s+n.url};return o.request(c)}}}};class S extends O{async createNewReport(e,t){return P(this.configuration).createNewReport(e,t).then(n=>n(this.axios,this.basePath))}async getReportById(e,t){return P(this.configuration).getReportById(e,t).then(n=>n(this.axios,this.basePath))}async getReportStatus(e,t,n){return P(this.configuration).getReportStatus(e,t,n).then(o=>o(this.axios,this.basePath))}async getReports(e,t,n,o,s,c,r,a){return P(this.configuration).getReports(e,t,n,o,s,c,r,a).then(p=>p(this.axios,this.basePath))}async reviewReport(e,t){return P(this.configuration).reviewReport(e,t).then(n=>n(this.axios,this.basePath))}}function v(l,e){return{getReports:async r=>{try{const{data:a}=await new S(l).getReports(r.pagination.page,r.pagination.perPage,r.status,r.createdAtFrom,r.createdAtTo,r.userId,r.reasons,e);return[a.data.reports,a.data.pagination,null]}catch(a){return[null,null,a]}},getReportById:async r=>{try{const{data:a}=await new S(l).getReportById(r.reportId,e);return[a.data.report,null]}catch(a){return[null,a]}},createNewReport:async r=>{try{const{data:a}=await new S(l).createNewReport({type:r.type,post_id:r.postId,reasons:r.reasons,description:r.description},e);return[a.success,a.data.report,null]}catch(a){return[!1,null,a]}},reviewReport:async r=>{try{const{data:a}=await new S(l).reviewReport({report_id:r.reportId,response:r.response?1:0,response_description:r.responseDescription},e);return[a.success,null]}catch(a){return[!1,a]}},getReportStatus:async r=>{try{const{data:a}=await new S(l).getReportStatus(r.type,r.postId,e);return[a.data.report,null]}catch(a){return[null,a]}}}}export{v as u};

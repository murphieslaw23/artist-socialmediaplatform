import{B as b,h as p,i as y,R as P,ac as C,ad as x,k as S,ae as L}from"./entry.e86746f3.js";import{S as B}from"./nuxt-img.978eb1b8.js";import{U as v}from"./user-counters-api.1e743ca3.js";const A=function(l){return{changePassword:async(e,r={})=>{const t="/user/password/renew",a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={};h["Content-Type"]="application/json";const i=new URLSearchParams(a.search);for(const d in u)i.set(d,u[d]);for(const d in r.params)i.set(d,r.params[d]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};n.headers={...h,...m,...r.headers};const w=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=w?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},checkCurrentPassword:async(e,r={})=>{const t="/user/password/current/check",a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={};h["Content-Type"]="application/json";const i=new URLSearchParams(a.search);for(const d in u)i.set(d,u[d]);for(const d in r.params)i.set(d,r.params[d]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};n.headers={...h,...m,...r.headers};const w=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=w?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}}}},k=function(l){return{async changePassword(e,r){const t=await A(l).changePassword(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}},async checkCurrentPassword(e,r){const t=await A(l).checkCurrentPassword(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}}}};class I extends b{async changePassword(e,r){return k(this.configuration).changePassword(e,r).then(t=>t(this.axios,this.basePath))}async checkCurrentPassword(e,r){return k(this.configuration).checkCurrentPassword(e,r).then(t=>t(this.axios,this.basePath))}}const T=function(l){return{updateAvatarForm:async(e,r={})=>{const t="/user/update/avatar",a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={},i=new FormData;e!==void 0&&i.append("avatar",e),h["Content-Type"]="multipart/form-data";const m=new URLSearchParams(a.search);for(const d in u)m.set(d,u[d]);for(const d in r.params)m.set(d,r.params[d]);a.search=new URLSearchParams(m).toString();let w=s&&s.headers?s.headers:{};return n.headers={...h,...w,...r.headers},n.data=i,{url:a.pathname+a.search+a.hash,options:n}},updateCoverForm:async(e,r={})=>{const t="/user/update/cover",a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={},i=new FormData;e!==void 0&&i.append("cover",e),h["Content-Type"]="multipart/form-data";const m=new URLSearchParams(a.search);for(const d in u)m.set(d,u[d]);for(const d in r.params)m.set(d,r.params[d]);a.search=new URLSearchParams(m).toString();let w=s&&s.headers?s.headers:{};return n.headers={...h,...w,...r.headers},n.data=i,{url:a.pathname+a.search+a.hash,options:n}}}},j=function(l){return{async updateAvatarForm(e,r){const t=await T(l).updateAvatarForm(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}},async updateCoverForm(e,r){const t=await T(l).updateCoverForm(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}}}};class H extends b{async updateAvatarForm(e,r){return j(this.configuration).updateAvatarForm(e,r).then(t=>t(this.axios,this.basePath))}async updateCoverForm(e,r){return j(this.configuration).updateCoverForm(e,r).then(t=>t(this.axios,this.basePath))}}const g=function(l){return{countFollowers:async(e,r={})=>{if(e==null)throw new P("userId","Required parameter userId was null or undefined when calling countFollowers.");const t="/user/{user_id}/count/followers".replace("{user_id}",encodeURIComponent(String(e))),a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"GET",...s,...r},h={},u={},i=new URLSearchParams(a.search);for(const w in u)i.set(w,u[w]);for(const w in r.params)i.set(w,r.params[w]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};return n.headers={...h,...m,...r.headers},{url:a.pathname+a.search+a.hash,options:n}},countFollowings:async(e,r={})=>{if(e==null)throw new P("userId","Required parameter userId was null or undefined when calling countFollowings.");const t="/user/{user_id}/count/followings".replace("{user_id}",encodeURIComponent(String(e))),a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"GET",...s,...r},h={},u={},i=new URLSearchParams(a.search);for(const w in u)i.set(w,u[w]);for(const w in r.params)i.set(w,r.params[w]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};return n.headers={...h,...m,...r.headers},{url:a.pathname+a.search+a.hash,options:n}},followUser:async(e,r={})=>{if(e==null)throw new P("userId","Required parameter userId was null or undefined when calling followUser.");const t="/user/follows/follow/{userId}".replace("{userId}",encodeURIComponent(String(e))),a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={},i=new URLSearchParams(a.search);for(const w in u)i.set(w,u[w]);for(const w in r.params)i.set(w,r.params[w]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};return n.headers={...h,...m,...r.headers},{url:a.pathname+a.search+a.hash,options:n}},followUserPrivately:async(e,r,t={})=>{if(e==null)throw new P("userId","Required parameter userId was null or undefined when calling followUserPrivately.");if(r==null)throw new P("isPrivate","Required parameter isPrivate was null or undefined when calling followUserPrivately.");const a="/user/follows/follow/{userId}/{isPrivate}".replace("{userId}",encodeURIComponent(String(e))).replace("{isPrivate}",encodeURIComponent(String(r))),s=new URL(a,"https://example.com");let n;l&&(n=l.baseOptions);const h={method:"POST",...n,...t},u={},i={},m=new URLSearchParams(s.search);for(const d in i)m.set(d,i[d]);for(const d in t.params)m.set(d,t.params[d]);s.search=new URLSearchParams(m).toString();let w=n&&n.headers?n.headers:{};return h.headers={...u,...w,...t.headers},{url:s.pathname+s.search+s.hash,options:h}},followersList:async(e,r,t,a={})=>{if(e==null)throw new P("userId","Required parameter userId was null or undefined when calling followersList.");if(r==null)throw new P("page","Required parameter page was null or undefined when calling followersList.");if(t==null)throw new P("perPage","Required parameter perPage was null or undefined when calling followersList.");const s="/user/follows/followers/{userId}".replace("{userId}",encodeURIComponent(String(e))),n=new URL(s,"https://example.com");let h;l&&(h=l.baseOptions);const u={method:"GET",...h,...a},i={},m={};r!==void 0&&(m.page=r),t!==void 0&&(m.per_page=t);const w=new URLSearchParams(n.search);for(const V in m)w.set(V,m[V]);for(const V in a.params)w.set(V,a.params[V]);n.search=new URLSearchParams(w).toString();let d=h&&h.headers?h.headers:{};return u.headers={...i,...d,...a.headers},{url:n.pathname+n.search+n.hash,options:u}},followingList:async(e,r,t,a,s={})=>{if(e==null)throw new P("userId","Required parameter userId was null or undefined when calling followingList.");if(r==null)throw new P("privateOnly","Required parameter privateOnly was null or undefined when calling followingList.");if(t==null)throw new P("page","Required parameter page was null or undefined when calling followingList.");if(a==null)throw new P("perPage","Required parameter perPage was null or undefined when calling followingList.");const n="/user/follows/followings/{userId}".replace("{userId}",encodeURIComponent(String(e))),h=new URL(n,"https://example.com");let u;l&&(u=l.baseOptions);const i={method:"GET",...u,...s},m={},w={};r!==void 0&&(w.private_only=r),t!==void 0&&(w.page=t),a!==void 0&&(w.per_page=a);const d=new URLSearchParams(h.search);for(const R in w)d.set(R,w[R]);for(const R in s.params)d.set(R,s.params[R]);h.search=new URLSearchParams(d).toString();let V=u&&u.headers?u.headers:{};return i.headers={...m,...V,...s.headers},{url:h.pathname+h.search+h.hash,options:i}},isFollowing:async(e,r={})=>{if(e==null)throw new P("userIdToCheck","Required parameter userIdToCheck was null or undefined when calling isFollowing.");const t="/user/follows/is-following/{userIdToCheck}".replace("{userIdToCheck}",encodeURIComponent(String(e))),a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"GET",...s,...r},h={},u={},i=new URLSearchParams(a.search);for(const w in u)i.set(w,u[w]);for(const w in r.params)i.set(w,r.params[w]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};return n.headers={...h,...m,...r.headers},{url:a.pathname+a.search+a.hash,options:n}},toggleFollowersVisibility:async(e={})=>{const r="/user/follows/followers/toggle-visibility",t=new URL(r,"https://example.com");let a;l&&(a=l.baseOptions);const s={method:"POST",...a,...e},n={},h={},u=new URLSearchParams(t.search);for(const m in h)u.set(m,h[m]);for(const m in e.params)u.set(m,e.params[m]);t.search=new URLSearchParams(u).toString();let i=a&&a.headers?a.headers:{};return s.headers={...n,...i,...e.headers},{url:t.pathname+t.search+t.hash,options:s}},toggleFollowingsVisibility:async(e={})=>{const r="/user/follows/followings/toggle-visibility",t=new URL(r,"https://example.com");let a;l&&(a=l.baseOptions);const s={method:"POST",...a,...e},n={},h={},u=new URLSearchParams(t.search);for(const m in h)u.set(m,h[m]);for(const m in e.params)u.set(m,e.params[m]);t.search=new URLSearchParams(u).toString();let i=a&&a.headers?a.headers:{};return s.headers={...n,...i,...e.headers},{url:t.pathname+t.search+t.hash,options:s}},unfollowUser:async(e,r={})=>{if(e==null)throw new P("userIdToUnfollow","Required parameter userIdToUnfollow was null or undefined when calling unfollowUser.");const t="/user/follows/unfollow/{userIdToUnfollow}".replace("{userIdToUnfollow}",encodeURIComponent(String(e))),a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={},i=new URLSearchParams(a.search);for(const w in u)i.set(w,u[w]);for(const w in r.params)i.set(w,r.params[w]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};return n.headers={...h,...m,...r.headers},{url:a.pathname+a.search+a.hash,options:n}}}},U=function(l){return{async countFollowers(e,r){const t=await g(l).countFollowers(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}},async countFollowings(e,r){const t=await g(l).countFollowings(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}},async followUser(e,r){const t=await g(l).followUser(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}},async followUserPrivately(e,r,t){const a=await g(l).followUserPrivately(e,r,t);return(s=p,n=y)=>{const h={...a.options,url:n+a.url};return s.request(h)}},async followersList(e,r,t,a){const s=await g(l).followersList(e,r,t,a);return(n=p,h=y)=>{const u={...s.options,url:h+s.url};return n.request(u)}},async followingList(e,r,t,a,s){const n=await g(l).followingList(e,r,t,a,s);return(h=p,u=y)=>{const i={...n.options,url:u+n.url};return h.request(i)}},async isFollowing(e,r){const t=await g(l).isFollowing(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}},async toggleFollowersVisibility(e){const r=await g(l).toggleFollowersVisibility(e);return(t=p,a=y)=>{const s={...r.options,url:a+r.url};return t.request(s)}},async toggleFollowingsVisibility(e){const r=await g(l).toggleFollowingsVisibility(e);return(t=p,a=y)=>{const s={...r.options,url:a+r.url};return t.request(s)}},async unfollowUser(e,r){const t=await g(l).unfollowUser(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}}}};class f extends b{async countFollowers(e,r){return U(this.configuration).countFollowers(e,r).then(t=>t(this.axios,this.basePath))}async countFollowings(e,r){return U(this.configuration).countFollowings(e,r).then(t=>t(this.axios,this.basePath))}async followUser(e,r){return U(this.configuration).followUser(e,r).then(t=>t(this.axios,this.basePath))}async followUserPrivately(e,r,t){return U(this.configuration).followUserPrivately(e,r,t).then(a=>a(this.axios,this.basePath))}async followersList(e,r,t,a){return U(this.configuration).followersList(e,r,t,a).then(s=>s(this.axios,this.basePath))}async followingList(e,r,t,a,s){return U(this.configuration).followingList(e,r,t,a,s).then(n=>n(this.axios,this.basePath))}async isFollowing(e,r){return U(this.configuration).isFollowing(e,r).then(t=>t(this.axios,this.basePath))}async toggleFollowersVisibility(e){return U(this.configuration).toggleFollowersVisibility(e).then(r=>r(this.axios,this.basePath))}async toggleFollowingsVisibility(e){return U(this.configuration).toggleFollowingsVisibility(e).then(r=>r(this.axios,this.basePath))}async unfollowUser(e,r){return U(this.configuration).unfollowUser(e,r).then(t=>t(this.axios,this.basePath))}}const F=function(l){return{changeUsername:async(e,r={})=>{const t="/user/update/username",a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={};h["Content-Type"]="application/json";const i=new URLSearchParams(a.search);for(const d in u)i.set(d,u[d]);for(const d in r.params)i.set(d,r.params[d]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};n.headers={...h,...m,...r.headers};const w=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=w?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},updateUserInfo:async(e,r={})=>{const t="/user/update/info",a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={};h["Content-Type"]="application/json";const i=new URLSearchParams(a.search);for(const d in u)i.set(d,u[d]);for(const d in r.params)i.set(d,r.params[d]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};n.headers={...h,...m,...r.headers};const w=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=w?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},updateUserPreference:async(e,r={})=>{const t="/user/update/preference",a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={};h["Content-Type"]="application/json";const i=new URLSearchParams(a.search);for(const d in u)i.set(d,u[d]);for(const d in r.params)i.set(d,r.params[d]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};n.headers={...h,...m,...r.headers};const w=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=w?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},updateUserSocial:async(e,r={})=>{const t="/user/update/social",a=new URL(t,"https://example.com");let s;l&&(s=l.baseOptions);const n={method:"POST",...s,...r},h={},u={};h["Content-Type"]="application/json";const i=new URLSearchParams(a.search);for(const d in u)i.set(d,u[d]);for(const d in r.params)i.set(d,r.params[d]);a.search=new URLSearchParams(i).toString();let m=s&&s.headers?s.headers:{};n.headers={...h,...m,...r.headers};const w=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=w?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}}}},O=function(l){return{async changeUsername(e,r){const t=await F(l).changeUsername(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}},async updateUserInfo(e,r){const t=await F(l).updateUserInfo(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}},async updateUserPreference(e,r){const t=await F(l).updateUserPreference(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}},async updateUserSocial(e,r){const t=await F(l).updateUserSocial(e,r);return(a=p,s=y)=>{const n={...t.options,url:s+t.url};return a.request(n)}}}};class q extends b{async changeUsername(e,r){return O(this.configuration).changeUsername(e,r).then(t=>t(this.axios,this.basePath))}async updateUserInfo(e,r){return O(this.configuration).updateUserInfo(e,r).then(t=>t(this.axios,this.basePath))}async updateUserPreference(e,r){return O(this.configuration).updateUserPreference(e,r).then(t=>t(this.axios,this.basePath))}async updateUserSocial(e,r){return O(this.configuration).updateUserSocial(e,r).then(t=>t(this.axios,this.basePath))}}function re(l,e){return{checkUsernameAvailability:async c=>{try{const{data:o}=await new C(l).checkUsername({username:c});return o.success?[o.success,null]:[null,"Username is already taken"]}catch(o){return[null,o]}},checkPenNameAvailability:async c=>{try{const{data:o}=await new x(l).penNameCheck(c,e);return o.success?[o.success,null]:[null,"Pen name is already taken"]}catch(o){return[null,o]}},getInfo:async c=>{try{const{data:o}=await new x(l).getUserInfoById(c.toString(),e);return[o.data,null]}catch(o){return[null,o]}},getInfoByUsername:async c=>{try{const{data:o}=await new x(l).getUserInfoByUsername(c,e);return[o.data,null]}catch(o){return[null,o]}},searchUsers:async c=>{try{const{data:o}=await new B(l).searchUsers(c.keyword,c.pagination.page,c.pagination.perPage,e);return[o.data,null]}catch(o){return[null,o]}},updateInfo:async c=>{try{const{data:o}=await new q(l).updateUserInfo({id:c.userId,name:c.name,gender:c.gender,bio:c.bio,location:c.location,pen_name:c.penName},e);return[o.success,null]}catch(o){return[null,o]}},updateSocials:async c=>{try{const{data:o}=await new q(l).updateUserSocial({id:c.userId,facebook:c.facebook,twitter:c.twitter,instagram:c.instagram,patreon:c.patreon,youtube:c.youtube,twitch:c.twitch,discord:c.discord,picarto:c.picarto,gumroad:c.gumroad,personal_website:c.site},e);return[o.success,null]}catch(o){return[null,o]}},updateSettings:async c=>{try{const{data:o}=await new q(l).updateUserPreference({id:c.userId,show_explicit:c.showExplicit?1:0},e);return[o.success,null]}catch(o){return[null,o]}},changeUsername:async c=>{try{const{data:o}=await new q(l).changeUsername({new_username:c},e);return[o.success,null]}catch(o){return[null,o]}},updateAvatar:async c=>{try{const{data:o}=await new H(l).updateAvatarForm(c,e);return[o.success,null]}catch(o){return[null,o]}},countFeeds:async c=>{try{const{data:o}=await new v(l).countUserFeeds(c,e);return[o.data.total,null]}catch(o){return[null,o]}},countArtworks:async c=>{try{const{data:o}=await new v(l).countUserArtworks(c,e);return[o.data.total,null]}catch(o){return[null,o]}},countFollowers:async c=>{try{const{data:o}=await new f(l).countFollowers(c);return[o.data.total,null]}catch(o){return[null,o]}},countFollowings:async c=>{try{const{data:o}=await new f(l).countFollowings(c);return[o.data.total,null]}catch(o){return[null,o]}},isFollowing:async c=>{try{const{data:o}=await new f(l).isFollowing(c,e);return[o.data,null]}catch(o){return[null,o]}},follow:async c=>{try{const{data:o}=await new f(l).followUser(c,e);return[o.success,null]}catch(o){return[null,o]}},followPrivately:async c=>{try{const{data:o}=await new f(l).followUserPrivately(c,!0,e);return[o.success,null]}catch(o){return[null,S().consumeReadableStreamError(o)]}},unfollow:async c=>{try{const{data:o}=await new f(l).unfollowUser(c,e);return[o.success,null]}catch(o){return[null,o]}},getFollowerList:async c=>{try{const{data:o}=await new f(l).followersList(c.userId,c.pagination.page,c.pagination.perPage,e);return[o.data,null]}catch(o){return[null,o]}},getFollowingList:async c=>{try{const{data:o}=await new f(l).followingList(c.userId,c.isPrivateOnly,c.pagination.page,c.pagination.perPage,e);return[o.data,null]}catch(o){return[null,o]}},toggleFollowerPrivacy:async()=>{try{const{data:c}=await new f(l).toggleFollowersVisibility(e);return[c.success,null]}catch(c){return[null,c]}},toggleFollowingPrivacy:async()=>{try{const{data:c}=await new f(l).toggleFollowingsVisibility(e);return[c.success,null]}catch(c){return[null,c]}},checkCurrentPassword:async c=>{try{const{data:o}=await new I(l).checkCurrentPassword({user_id:c.userId,current_password:c.currentPassword},e);return[o,null]}catch(o){return[null,S().consumeReadableStreamError(o)]}},updateCurrentPassword:async c=>{try{const{data:o}=await new I(l).changePassword({user_id:c.userId,current_password:c.currentPassword,new_password:c.newPassword},e);return[o,null]}catch(o){return[null,S().consumeReadableStreamError(o)]}},checkResetPasswordTokenValidity:async c=>{try{const{data:o}=await new L(l).checkResetPasswordTokenValidity(c.iv,c.content);return[o.data,null]}catch(o){return[null,S().consumeReadableStreamError(o)]}},resetPassword:async c=>{try{const{data:o}=await new L(l).recoverChangePassword({iv:c.iv,content:c.content,new_password:c.newPassword});return[o,null]}catch(o){return[null,S().consumeReadableStreamError(o)]}}}}export{re as u};

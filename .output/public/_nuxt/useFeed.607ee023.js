import{B as q,h as w,i as y,R as p,j as R}from"./entry.ae51314b.js";const F=function(i){return{commentFeed:async(e,a={})=>{const s="/feeds/comment",r=new URL(s,"https://example.com");let t;i&&(t=i.baseOptions);const n={method:"POST",...t,...a},h={},u={};h["Content-Type"]="application/json";const l=new URLSearchParams(r.search);for(const o in u)l.set(o,u[o]);for(const o in a.params)l.set(o,a.params[o]);r.search=new URLSearchParams(l).toString();let m=t&&t.headers?t.headers:{};n.headers={...h,...m,...a.headers};const d=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}},createFeed:async(e,a={})=>{const s="/feeds/create",r=new URL(s,"https://example.com");let t;i&&(t=i.baseOptions);const n={method:"POST",...t,...a},h={},u={};h["Content-Type"]="application/json";const l=new URLSearchParams(r.search);for(const o in u)l.set(o,u[o]);for(const o in a.params)l.set(o,a.params[o]);r.search=new URLSearchParams(l).toString();let m=t&&t.headers?t.headers:{};n.headers={...h,...m,...a.headers};const d=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}},deleteFeed:async(e,a={})=>{if(e==null)throw new p("feedId","Required parameter feedId was null or undefined when calling deleteFeed.");const s="/feeds/{feedId}".replace("{feedId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;i&&(t=i.baseOptions);const n={method:"DELETE",...t,...a},h={},u={},l=new URLSearchParams(r.search);for(const d in u)l.set(d,u[d]);for(const d in a.params)l.set(d,a.params[d]);r.search=new URLSearchParams(l).toString();let m=t&&t.headers?t.headers:{};return n.headers={...h,...m,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},getFeedById:async(e,a={})=>{if(e==null)throw new p("feedId","Required parameter feedId was null or undefined when calling getFeedById.");const s="/feeds/{feedId}".replace("{feedId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;i&&(t=i.baseOptions);const n={method:"GET",...t,...a},h={},u={},l=new URLSearchParams(r.search);for(const d in u)l.set(d,u[d]);for(const d in a.params)l.set(d,a.params[d]);r.search=new URLSearchParams(l).toString();let m=t&&t.headers?t.headers:{};return n.headers={...h,...m,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},getFeedComments:async(e,a,s,r={})=>{if(e==null)throw new p("feedId","Required parameter feedId was null or undefined when calling getFeedComments.");if(a==null)throw new p("page","Required parameter page was null or undefined when calling getFeedComments.");if(s==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getFeedComments.");const t="/feeds/{feedId}/comments".replace("{feedId}",encodeURIComponent(String(e))),n=new URL(t,"https://example.com");let h;i&&(h=i.baseOptions);const u={method:"GET",...h,...r},l={},m={};a!==void 0&&(m.page=a),s!==void 0&&(m.per_page=s);const d=new URLSearchParams(n.search);for(const c in m)d.set(c,m[c]);for(const c in r.params)d.set(c,r.params[c]);n.search=new URLSearchParams(d).toString();let o=h&&h.headers?h.headers:{};return u.headers={...l,...o,...r.headers},{url:n.pathname+n.search+n.hash,options:u}},getFeeds:async(e,a,s,r,t,n={})=>{if(e==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getFeeds.");if(a==null)throw new p("page","Required parameter page was null or undefined when calling getFeeds.");if(s==null)throw new p("fetchMode","Required parameter fetchMode was null or undefined when calling getFeeds.");const h="/feeds",u=new URL(h,"https://example.com");let l;i&&(l=i.baseOptions);const m={method:"GET",...l,...n},d={},o={};e!==void 0&&(o.per_page=e),a!==void 0&&(o.page=a),r!==void 0&&(o.mode=r),s!==void 0&&(o.fetch_mode=s),t!==void 0&&(o.show_all_text_post=t);const c=new URLSearchParams(u.search);for(const f in o)c.set(f,o[f]);for(const f in n.params)c.set(f,n.params[f]);u.search=new URLSearchParams(c).toString();let V=l&&l.headers?l.headers:{};return m.headers={...d,...V,...n.headers},{url:u.pathname+u.search+u.hash,options:m}},getFeedsByUserId:async(e,a,s,r={})=>{if(e==null)throw new p("userId","Required parameter userId was null or undefined when calling getFeedsByUserId.");if(a==null)throw new p("page","Required parameter page was null or undefined when calling getFeedsByUserId.");if(s==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getFeedsByUserId.");const t="/feeds/user/{userId}".replace("{userId}",encodeURIComponent(String(e))),n=new URL(t,"https://example.com");let h;i&&(h=i.baseOptions);const u={method:"GET",...h,...r},l={},m={};a!==void 0&&(m.page=a),s!==void 0&&(m.per_page=s);const d=new URLSearchParams(n.search);for(const c in m)d.set(c,m[c]);for(const c in r.params)d.set(c,r.params[c]);n.search=new URLSearchParams(d).toString();let o=h&&h.headers?h.headers:{};return u.headers={...l,...o,...r.headers},{url:n.pathname+n.search+n.hash,options:u}},getFollowingFeed:async(e,a,s={})=>{if(e==null)throw new p("page","Required parameter page was null or undefined when calling getFollowingFeed.");if(a==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getFollowingFeed.");const r="/feeds/following",t=new URL(r,"https://example.com");let n;i&&(n=i.baseOptions);const h={method:"GET",...n,...s},u={},l={};e!==void 0&&(l.page=e),a!==void 0&&(l.per_page=a);const m=new URLSearchParams(t.search);for(const o in l)m.set(o,l[o]);for(const o in s.params)m.set(o,s.params[o]);t.search=new URLSearchParams(m).toString();let d=n&&n.headers?n.headers:{};return h.headers={...u,...d,...s.headers},{url:t.pathname+t.search+t.hash,options:h}},getLatestFeeds:async(e,a,s={})=>{if(e==null)throw new p("page","Required parameter page was null or undefined when calling getLatestFeeds.");if(a==null)throw new p("perPage","Required parameter perPage was null or undefined when calling getLatestFeeds.");const r="/feeds/latest",t=new URL(r,"https://example.com");let n;i&&(n=i.baseOptions);const h={method:"GET",...n,...s},u={},l={};e!==void 0&&(l.page=e),a!==void 0&&(l.per_page=a);const m=new URLSearchParams(t.search);for(const o in l)m.set(o,l[o]);for(const o in s.params)m.set(o,s.params[o]);t.search=new URLSearchParams(m).toString();let d=n&&n.headers?n.headers:{};return h.headers={...u,...d,...s.headers},{url:t.pathname+t.search+t.hash,options:h}},likeFeed:async(e,a={})=>{if(e==null)throw new p("feedId","Required parameter feedId was null or undefined when calling likeFeed.");const s="/feeds/like/{feedId}".replace("{feedId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;i&&(t=i.baseOptions);const n={method:"POST",...t,...a},h={},u={},l=new URLSearchParams(r.search);for(const d in u)l.set(d,u[d]);for(const d in a.params)l.set(d,a.params[d]);r.search=new URLSearchParams(l).toString();let m=t&&t.headers?t.headers:{};return n.headers={...h,...m,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},likeFeedComment:async(e,a={})=>{if(e==null)throw new p("commentId","Required parameter commentId was null or undefined when calling likeFeedComment.");const s="/feeds/{commentId}/like".replace("{commentId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;i&&(t=i.baseOptions);const n={method:"POST",...t,...a},h={},u={},l=new URLSearchParams(r.search);for(const d in u)l.set(d,u[d]);for(const d in a.params)l.set(d,a.params[d]);r.search=new URLSearchParams(l).toString();let m=t&&t.headers?t.headers:{};return n.headers={...h,...m,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},unlikeFeed:async(e,a={})=>{if(e==null)throw new p("feedId","Required parameter feedId was null or undefined when calling unlikeFeed.");const s="/feeds/unlike/{feedId}".replace("{feedId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;i&&(t=i.baseOptions);const n={method:"POST",...t,...a},h={},u={},l=new URLSearchParams(r.search);for(const d in u)l.set(d,u[d]);for(const d in a.params)l.set(d,a.params[d]);r.search=new URLSearchParams(l).toString();let m=t&&t.headers?t.headers:{};return n.headers={...h,...m,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},unlikeFeedComment:async(e,a={})=>{if(e==null)throw new p("commentId","Required parameter commentId was null or undefined when calling unlikeFeedComment.");const s="/feeds/{commentId}/unlike".replace("{commentId}",encodeURIComponent(String(e))),r=new URL(s,"https://example.com");let t;i&&(t=i.baseOptions);const n={method:"POST",...t,...a},h={},u={},l=new URLSearchParams(r.search);for(const d in u)l.set(d,u[d]);for(const d in a.params)l.set(d,a.params[d]);r.search=new URLSearchParams(l).toString();let m=t&&t.headers?t.headers:{};return n.headers={...h,...m,...a.headers},{url:r.pathname+r.search+r.hash,options:n}},updateFeedPost:async(e,a={})=>{const s="/feeds/update",r=new URL(s,"https://example.com");let t;i&&(t=i.baseOptions);const n={method:"POST",...t,...a},h={},u={};h["Content-Type"]="application/json";const l=new URLSearchParams(r.search);for(const o in u)l.set(o,u[o]);for(const o in a.params)l.set(o,a.params[o]);r.search=new URLSearchParams(l).toString();let m=t&&t.headers?t.headers:{};n.headers={...h,...m,...a.headers};const d=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:r.pathname+r.search+r.hash,options:n}}}},g=function(i){return{async commentFeed(e,a){const s=await F(i).commentFeed(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async createFeed(e,a){const s=await F(i).createFeed(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async deleteFeed(e,a){const s=await F(i).deleteFeed(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async getFeedById(e,a){const s=await F(i).getFeedById(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async getFeedComments(e,a,s,r){const t=await F(i).getFeedComments(e,a,s,r);return(n=w,h=y)=>{const u={...t.options,url:h+t.url};return n.request(u)}},async getFeeds(e,a,s,r,t,n){const h=await F(i).getFeeds(e,a,s,r,t,n);return(u=w,l=y)=>{const m={...h.options,url:l+h.url};return u.request(m)}},async getFeedsByUserId(e,a,s,r){const t=await F(i).getFeedsByUserId(e,a,s,r);return(n=w,h=y)=>{const u={...t.options,url:h+t.url};return n.request(u)}},async getFollowingFeed(e,a,s){const r=await F(i).getFollowingFeed(e,a,s);return(t=w,n=y)=>{const h={...r.options,url:n+r.url};return t.request(h)}},async getLatestFeeds(e,a,s){const r=await F(i).getLatestFeeds(e,a,s);return(t=w,n=y)=>{const h={...r.options,url:n+r.url};return t.request(h)}},async likeFeed(e,a){const s=await F(i).likeFeed(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async likeFeedComment(e,a){const s=await F(i).likeFeedComment(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async unlikeFeed(e,a){const s=await F(i).unlikeFeed(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async unlikeFeedComment(e,a){const s=await F(i).unlikeFeedComment(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}},async updateFeedPost(e,a){const s=await F(i).updateFeedPost(e,a);return(r=w,t=y)=>{const n={...s.options,url:t+s.url};return r.request(n)}}}};class P extends q{async commentFeed(e,a){return g(this.configuration).commentFeed(e,a).then(s=>s(this.axios,this.basePath))}async createFeed(e,a){return g(this.configuration).createFeed(e,a).then(s=>s(this.axios,this.basePath))}async deleteFeed(e,a){return g(this.configuration).deleteFeed(e,a).then(s=>s(this.axios,this.basePath))}async getFeedById(e,a){return g(this.configuration).getFeedById(e,a).then(s=>s(this.axios,this.basePath))}async getFeedComments(e,a,s,r){return g(this.configuration).getFeedComments(e,a,s,r).then(t=>t(this.axios,this.basePath))}async getFeeds(e,a,s,r,t,n){return g(this.configuration).getFeeds(e,a,s,r,t,n).then(h=>h(this.axios,this.basePath))}async getFeedsByUserId(e,a,s,r){return g(this.configuration).getFeedsByUserId(e,a,s,r).then(t=>t(this.axios,this.basePath))}async getFollowingFeed(e,a,s){return g(this.configuration).getFollowingFeed(e,a,s).then(r=>r(this.axios,this.basePath))}async getLatestFeeds(e,a,s){return g(this.configuration).getLatestFeeds(e,a,s).then(r=>r(this.axios,this.basePath))}async likeFeed(e,a){return g(this.configuration).likeFeed(e,a).then(s=>s(this.axios,this.basePath))}async likeFeedComment(e,a){return g(this.configuration).likeFeedComment(e,a).then(s=>s(this.axios,this.basePath))}async unlikeFeed(e,a){return g(this.configuration).unlikeFeed(e,a).then(s=>s(this.axios,this.basePath))}async unlikeFeedComment(e,a){return g(this.configuration).unlikeFeedComment(e,a).then(s=>s(this.axios,this.basePath))}async updateFeedPost(e,a){return g(this.configuration).updateFeedPost(e,a).then(s=>s(this.axios,this.basePath))}}function S(i,e){return{postFeed:async o=>{try{const{data:c}=await new P(i).createFeed({text:o.text,visibility:o.visibility,who_can_reply:o.whoCanReply},e);return[c.success,c.data,null]}catch(c){return[null,null,R().consumeReadableStreamError(c)]}},shareArtworkToFeed:async o=>{try{const{data:c}=await new P(i).createFeed({text:o.text,visibility:o.visibility,who_can_reply:o.whoCanReply,work_id:o.workId},e);return[c.success,c.data,null]}catch(c){return[null,null,R().consumeReadableStreamError(c)]}},feedDetail:async o=>{try{const{data:c}=await new P(i).getFeedById(o.id,e);return[c.data,null]}catch(c){return[null,R().consumeReadableStreamError(c)]}},getChronologicalFeeds:async o=>{try{const{data:c}=await new P(i).getFeeds(o.pagination.perPage,o.pagination.page,o.fetchMode,o.explicitMode,o.showAllTextPost,e);return[c.data,null]}catch(c){return[null,R().consumeReadableStreamError(c)]}},getFeedByUserId:async o=>{try{const{data:c}=await new P(i).getFeedsByUserId(o.userId,o.pagination.page,o.pagination.perPage,e);return[c.data,null]}catch(c){return[null,R().consumeReadableStreamError(c)]}},like:async o=>{try{const{data:c}=await new P(i).likeFeed(o.feedId,e);return[c.success,null]}catch(c){return[null,R().consumeReadableStreamError(c)]}},unlike:async o=>{try{const{data:c}=await new P(i).unlikeFeed(o.feedId,e);return[c.success,null]}catch(c){return[null,R().consumeReadableStreamError(c)]}},fetchComments:async o=>{try{const{data:c}=await new P(i).getFeedComments(o.feedId,o.pagination.page,o.pagination.perPage,e);return[c.data,null]}catch(c){return[null,R().consumeReadableStreamError(c)]}},comment:async o=>{try{const{data:c}=await new P(i).commentFeed({feed_id:o.feedId,comment:o.comment},e);return[c.success,c.data,null]}catch(c){return[null,null,R().consumeReadableStreamError(c)]}},remove:async o=>{try{const{data:c}=await new P(i).deleteFeed(o,e);return[c.success,null]}catch(c){return[!1,R().consumeReadableStreamError(c)]}}}}export{S as u};
